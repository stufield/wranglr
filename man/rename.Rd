% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s3-rename.R
\name{rename}
\alias{rename}
\alias{rename.list}
\title{Rename Elements of a List}
\usage{
\method{rename}{list}(.data, ...)
}
\arguments{
\item{.data}{A \emph{named} \code{list} to be renamed.}

\item{...}{For \code{rename()}: <\code{\link[dplyr:dplyr_tidy_select]{tidy-select}}> Use
\code{new_name = old_name} to rename selected variables.

For \code{rename_with()}: additional arguments passed onto \code{.fn}.}
}
\value{
A newly named list corresponding to the
expressions passed to the \code{...}.
}
\description{
See \code{\link[dplyr:rename]{dplyr::rename()}}, but for lists.
Rename list elements simply and efficiently.
Missing elements are unchanged and unmatched
elements are ignored.
}
\examples{
foo <- list(
  a = 1:5,
  b = letters[1:10],
  c = data.frame(set = 1:4, col = LETTERS[1:4])
)

# Map all names
rename(foo, super = "b", awesome = "a", wicked = "c")

# Missing names are un-changed
rename(foo, super = "c", wicked = "b")

# Extra names are ignored
rename(foo, super = "b", wicked = "c", yellow = "d")

# The !!! is supported
key <- c(super = "b", awesome = "a", wicked = "c")
rename(foo, !!! key)
}
