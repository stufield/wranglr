% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/center-scale.R
\name{center_scale}
\alias{center_scale}
\alias{is_center_scaled}
\alias{undo_center_scale}
\title{Center and/or Scale Data}
\usage{
center_scale(data, par_tbl = NULL, feat = NULL, center = TRUE, scale = TRUE)

is_center_scaled(data)

undo_center_scale(data, feat = NULL)
}
\arguments{
\item{data}{A \code{tibble}, \code{data.frame}, or matrix object with
named data variables to center and/or scale.
If \code{matrix}, should \emph{only} contain numeric data.}

\item{par_tbl}{A tibble containing the mean and
standard deviations to use in processing the data.
Must also contain an \code{feature} column to synchronize
the features with their corresponding scaling parameters.
If \code{NULL}, a parameter table is generated based on \code{data},
i.e. \code{data} is its own reference.}

\item{feat}{\code{character(n)}. A vector indicating which
variables to center/scale.}

\item{center}{\code{logical(1)}. Whether the variables
should be shifted to be zero centered (\eqn{\mu = 0}).}

\item{scale}{\code{logical(1)}. Whether the variables
should be scaled to have unit variance (\eqn{\sigma = 1}).}
}
\value{
A center/scaled object of the same class as \code{data}.
Only features specified in \code{feat} are modified.
}
\description{
A function to center and/or scale a data matrix.
}
\section{Functions}{
\itemize{
\item \code{is_center_scaled()}: tests for presence of \code{par_tbl} entry in attributes and
if it contains appropriate parameter information that
can be used for centering or scaling data.

\item \code{undo_center_scale()}: the inverse of \code{center_scale()}. Undo the transformation.

}}
\examples{
scaled <- center_scale(mtcars)
apply(feature_matrix(scaled), 2, mean) |> sum()  # mean ~ 0
apply(feature_matrix(scaled), 2, sd)             # sd ~ 1

idx <- withr::with_seed(1,
  sample(1:nrow(mtcars), size = nrow(mtcars) / 2)
)
train <- mtcars[idx, ]
test  <- mtcars[-idx, ]

# Pass `par_tbl` as reference
ft <- c("disp", "hp", "drat")
par <- tibble::tibble(feature = ft,
                      means   = colMeans(feature_matrix(train, ft)),
                      sds     = apply(feature_matrix(train, ft), 2, sd))
cs <- center_scale(test, par_tbl = par)
# Logical test
is_center_scaled(cs)
# Example of `undo_center_scale()`; reverse above
old <- undo_center_scale(cs)

# check values are reverted
all.equal(test, old)

}
\author{
Stu Field
}
