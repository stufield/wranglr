% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/createChildAttributes.R
\name{createChildAttributes}
\alias{createChildAttributes}
\title{Create Child Attributes}
\usage{
createChildAttributes(child.df, parent, verbose = interactive())
}
\arguments{
\item{child.df}{The \code{soma_adat} (\code{data.frame} object) that
potentially has corrupted/broken attributes.}

\item{parent}{The parent data frame object that was
used to create the child data frame.}

\item{verbose}{Logical. Should the checks and output be printed
to the console? These checks can be quite extensive, so by default,
this only occurs if called in an interactive session. See \code{\link[=interactive]{interactive()}}.}
}
\value{
The object corresponding to \code{child.df} with an
\emph{updated} list of attributes containing the following:
\item{names}{The column/feature names.}
\item{row.names}{The row names of the data frame.}
\item{class}{The class(es) of the object, typically
\code{c("soma_adat", "data.frame")}.}
\item{Header.Meta}{A list itself containing all the
header meta data of the original adat.}
\item{Col.Meta}{A tibble containing all the column/feature
meta data of the original adat.}
\item{file_specs}{A list of the original file specs during file parsing.}
\item{row_meta}{A vector of the meta data.}
}
\description{
This function re-creates the corrupted attribute list of a
modified \code{soma_adat} given original parent attributes of
the data frame used to create the modified child. With extensive
S3 methods for the \code{soma_adat} class, this \emph{should} happen only rarely,
but can happen when removing columns from clinical or feature data,
or when completely re-constructing a \code{soma_adat} from scratch. A
call to \code{\link[=is_intact_attr]{is_intact_attr()}} should tell you if the
attributes need to be re-created.
}
\examples{
# The "parent" data frame
adat <- sim_test_data

feats <- withr::with_seed(1, sample(names(adat), 10L))  # random set of features
new_adat <- adat[1:10L, c(head(SomaDataIO::getMeta(adat), 10L), feats) ]
dim(new_adat)

dim(adat)

SomaDataIO::is_intact_attr(new_adat)           # TRUE

new <- createChildAttributes(new_adat, adat)   # Congrats!

# now really break the attributes & reconstruct them
attributes(new_adat)$Header.Meta <- NULL

SomaDataIO::is_intact_attr(new_adat, verbose = TRUE)  # FALSE
new_adat$foo <- "bar"                     # add a clin variable

new_adat <- createChildAttributes(new_adat, adat)

SomaDataIO::is_intact_attr(new_adat)   # TRUE; atts are back!
}
\seealso{
\code{\link[=is_intact_attr]{is_intact_attr()}}, \code{\link[=inner_join]{inner_join()}}
}
\author{
Stu Field
}
