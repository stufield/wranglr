% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/imputeOutliers.R
\name{imputeOutliers}
\alias{imputeOutliers}
\title{Impute Outlier Values}
\usage{
imputeOutliers(x, n.sigma = 3)
}
\arguments{
\item{x}{A vector of values, approximating a Gaussian distribution and
containing (possibly) outlier samples.}

\item{n.sigma}{Numeric. Number of standard deviations from the mean
a \code{n.sigma} threshold for outliers.}
}
\value{
A vector of values approximating a Gaussian distribution with the
outlier samples imputed back to the robust Gaussian fit.
}
\description{
Given a numeric vector, this function imputes outlier values, defined as
3*sigma from the mean, back to a robustly calculated Gaussian. Gaussian
parameters (mu + sigma) are robustly calculated.
}
\details{
The maximum value, i.e. the \eqn{100^{th}} percentile, is pushed back
to the 3*sigma value of the Gaussian.
}
\examples{
set.seed(101)
vec  <- c(2, 2.5, rnorm(26, 15, 2), 25, 25.9)   # Gaussian with 4 outliers (2hi, 2lo)
pars <- attributes(globalr::getOutliers(vec, n.sigma = 3, type = "para"))
pars

imputeOutliers(vec)

# Plot what is happening:
# original `vec` and critical 3*sd cutoffs in `red`
library(ggplot2)
range <- seq(min(vec), max(vec), length.out = 100)
fit_data <- data.frame(
  x = range,
  y = stats::pnorm(range, mean = pars$mu, sd = pars$sigma)
)
ggplot(data.frame(x = vec), aes(x = x)) +
  stat_ecdf(color = "blue") +
  stat_ecdf(data = data.frame(x = imputeOutliers(vec)),
            aes(x = x), color = "purple") +
  geom_line(data = fit_data, aes(x = x, y = y),
            colour = "black", linetype = "longdash") +
  geom_vline(xintercept = pars$crit, colour = "red", linetype = "dashed") +
  ggtitle("Outlier Cutoffs (3*sigma) in Red")
}
\seealso{
\code{\link[=pnorm]{pnorm()}}, \code{\link[=qnorm]{qnorm()}}, \code{\link[=getOutliers]{getOutliers()}}

Other impute: 
\code{\link{imputeNAs}()},
\code{\link{imputePredictors}()}
}
\author{
Stu Field
}
\concept{impute}
