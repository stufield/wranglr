% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/seqLookup.R
\name{seqLookup}
\alias{seqLookup}
\alias{seqify}
\title{SeqId Look-Up Table}
\usage{
seqLookup(seq, tbl = NULL)

seqify(x)
}
\arguments{
\item{tbl}{A tibble containing analyte (annotation) data.
Typically generated via calls to \code{\link[=getAnalyteInfo]{getAnalyteInfo()}}.}

\item{x, seq}{Character. A vector of \code{SeqIds}, \code{AptNames}, or \code{Aptamers}, all
containing \code{SeqId}s.}
}
\value{
For \code{\link[=seqLookup]{seqLookup()}}, a tibble, a subset of \code{tbl},
corresponding to the rows whose \code{SeqIds} match the values in \code{seq}.

For \code{seqify()}, an object of class \code{seqId}.
}
\description{
Conveniently look up "annotation" information such as:
\itemize{
\item \code{EntrezGeneSymbol}
\item \code{Target}
\item \code{Dilution}
\item \code{UniProt}
}

keyed on a vector of \code{SeqId}s.
The lookup dictionary is matched on values in the \code{SeqId}
column of Annotations (from the Graph Database), which is
accessed via a static internal object.
See \code{\link[=getAnnotations]{getAnnotations()}} for details.
Alternatively, the user can explicitly pass an annotations table of
of their choice.
The \code{\link[=seqify]{seqify()}} function adds a \code{seqId} class attribute allowing
for a convenient S3 print method intended for interactive use.
}
\details{
If historical analytes have been dropped from the menu
they will be absent from the default lookup table,
resulting in \code{NA} for that row. But not all is lost! Dropped
analytes can be retrieved by explicitly passing an annotations
table corresponding to the original \code{soma_adat} prior to
the menu change (see \code{Examples}). There are 2 ways to generate a
"time-capsuled" annotations table:
1. via \code{\link[=getAnalyteInfo]{getAnalyteInfo()}}
1. via \code{attr(adat, "Col.Meta")}
}
\examples{
svec <- c("seq.2981.9", "seq.5073.30", "seq.4834.61", "seq.5006.71",
          "seq.3213.65", "seq.3352.80", "seq.4429.51", "seq.2447.7")
svec

seqLookup(svec)

# user can pass 'known' set of annotations
# Note: the NAs are now replaced with accurate info
tbl <- splyr:::apt_data
seqLookup(svec, tbl)

# print method for class `seqId`
class(seqify(svec))

# works with anonymous-AptNames
seqify(svec)

# also works with naked-SeqIds
seqify(SomaDataIO::getSeqId(svec))
}
\seealso{
\code{\link[=getAnnotations]{getAnnotations()}}, \code{\link[=getAnalyteInfo]{getAnalyteInfo()}}, \code{\link[=left_join]{left_join()}}

Other Annotations: 
\code{\link{getAnnotations}()},
\code{\link{lookupAnnotations}()}
}
\author{
Stu Field
}
\concept{Annotations}
