% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calcCV.R
\name{calcCV}
\alias{calcCV}
\title{Calculate CV Decomposition}
\usage{
calcCV(x)
}
\arguments{
\item{x}{A list of vectors, each representing a separate assay run
for a particular analyte. The entries of the vectors should be replicates
of intra-run assay variation. \strong{Important!}: be sure to remove any \code{NAs},
if present, beforehand.}
}
\value{
A named vector of the CV decomposition for the replicates.
}
\description{
Calculate the appropriate within and between assay
run variance decomposition prior to calculating
the \%CV for a reproducibility study assay run.
}
\examples{
# Example 1 (Dom's example)
dom_example <- list(A = c(5785.1, 5005.6, 5686.3, 5990.8,
                          5235.4, 5340.6, 5272.6, 5905.2),
                    B = c(5708.0, 5300.7, 5339.8, 5393.0,
                          5762.0, 5553.4, 6081.4, 5473.5),
                    C = c(5409.4, 5353.6, 5398.0, 5631.2,
                          5646.1, 5073.4, 5879.2, 5617.5))
dom_example
calcCV(dom_example)

# Example 2 (dummy `sim_test_data` example)
# Here, we will look at how the intra, inter, and total variance.
# We assume `sim_test_data` contains *only* calibrator samples
# and assume the `SiteId` represents "runs", then `lapply()` over
# each analyte, calculating the `CVdecomp` for each and store in a data frame.
split_on <- sim_test_data$SiteId

# split data
site_split <- strip_meta(sim_test_data) |> data.frame() |>
  lapply(split, f = split_on)

# iterate over list/analytes; each contains multiple (4x) "runs"
coeffVar <- lapply(site_split, calcCV)
coeffVar <- do.call(rbind, coeffVar) |> data.frame()
}
\references{
Calculation follows the method laid out
by Dom Zichi, \emph{Decomposition of Assay Variance}, 13 August 2011.
}
\seealso{
\code{\link[=calcSS]{calcSS()}}
}
\author{
Stu Field, Dom Zichi, Eduardo Tabacman
}
\keyword{CV}
\keyword{coefficient}
\keyword{correlation}
\keyword{decomposition}
\keyword{intra-class}
