% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rbindIntersect.R
\name{rbindIntersect}
\alias{rbindIntersect}
\alias{rbindUnion}
\title{Vertically Combine Data Frames by Intersect}
\usage{
rbindIntersect(...)

rbindUnion(...)
}
\arguments{
\item{...}{Data frames to combine. Can also be a \emph{list} of data frames
to combine, typically \code{soma_adat} objects.}
}
\value{
A single data frame with the total number of rows =
\code{sum(sapply(..., nrow))}.
}
\description{
For \code{\link[=rbindIntersect]{rbindIntersect()}}: \code{\link[=rbind]{rbind()}} is used to vertically \strong{combine} data
frames based on the \emph{intersect} of their column names.
This creates \emph{fewer} columns than the original data, or at best the same
number of columns. The resulting data frame has the dimensions:
\itemize{
\item rows: \code{nrow(df1) + nrow(df2) + ... + nrow(df_n)}
\item cols: \code{intersect(names(...))}
}

For \code{\link[=rbindUnion]{rbindUnion()}}: \code{\link[=rbind]{rbind()}} is used to vertically \strong{merge}
data frames based on the \emph{union} of their column names. This creates
columns of \code{NAs} for the rows of a data frame with non-overlapping
column names. The resulting data frame has the dimensions:
\itemize{
\item rows: \code{nrow(df1) + nrow(df2) + ... + nrow(df_n)}
\item cols: \code{union(names(...))}
}
}
\details{
Incidentally, the default behavior of \code{\link[=rbind]{rbind()}} reorders the columns
correctly, but will only do so if their intersect matches.
}
\note{
For \code{\link[=rbindIntersect]{rbindIntersect()}}, columns are combined on their \emph{intersect} only.

For \code{\link[=rbindUnion]{rbindUnion()}}, the ordering of the rows correspond to the order
they are supplied.
}
\examples{
# For `rbindIntersect()`
spl <- split(mtcars, mtcars$cyl) |> unname()
foo <- mapply(spl, -c(11, 10, 9), FUN = function(x, y) x[, y], SIMPLIFY = FALSE)
sapply(spl, names)
sapply(spl, ncol)

# Pass a list
rbindIntersect(spl)

# Can pass either list or via '...'
identical(rbindIntersect(spl), rbindIntersect(spl[[1L]], spl[[2L]], spl[[3L]]))

# Passing a _named_ list adds `data` column with those names
names(spl) <- letters[1:3L]
rbindIntersect(spl)

# For `rbindUnion()`
rbindUnion(spl)
rbindUnion(spl[[1L]], spl[[2L]])
rbindUnion(spl[[1L]], spl[[2L]], spl[[3L]])
}
\seealso{
\code{\link[=Reduce]{Reduce()}}, \code{\link[=rbind]{rbind()}}, \code{\link[=intersect]{intersect()}}

\code{\link[=union]{union()}}
}
\author{
Stu Field
}
