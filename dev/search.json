[{"path":"https://stufield.github.io/wranglr/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 wranglr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://stufield.github.io/wranglr/dev/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with wranglr","title":"Getting help with wranglr","text":"Thanks using wranglr! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://stufield.github.io/wranglr/dev/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with wranglr","text":"can’t reproduce bug, can’t fix ! Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (excellent ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help!.","code":""},{"path":"https://stufield.github.io/wranglr/dev/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with wranglr","text":"Armed reprex, next step figure ask: ’s question: start community.rstudio.com /StackOverflow. people answer questions. ’s bug: ’re right place -> file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers, :pr, :closed, etc., needed, e.g. ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://stufield.github.io/wranglr/dev/articles/simplified-recipes.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Pre-processing data via `create_recipe`","text":"Standard data transformations common preparing data analysis. Among common : log-transformation centering mean zero scaling unit variance (sd = 1) typical data preparation steps proteomic data. Numerous tools exist R ecosystem, including relatively new packages, e.g. recipes package, however comes significant implementation costs: recipes infancy, still zero-point release (currently v1.1.0). , development expected ongoing, resulting likely interface changes underlying changes impact end-users. represents significant challenge create stable, production environment. recipes designed broader use case mind proteomic data. , numerous trade-offs generalizations must made accommodate various data sets required act upon. Many assumptions data format, e.g. feature data vs meta data, whether certain features present training set test set direct conflict existing workflows. recipes stores large portions objects inside object. may appropriate smaller, low-dimensional data, proteomic data ~5000 features (stretch-goal > 10k) quickly becomes unmanageable results extremely large objects must saved incorporated production environments reproducibility. Given considerable technical overhead adopting recipes primary data transformation tool, relatively simple transformations proteomic data requires, technical costs incorporating recipes production level workflows seem balance solutions overcomes.","code":""},{"path":"https://stufield.github.io/wranglr/dev/articles/simplified-recipes.html","id":"base-example","dir":"Articles","previous_headings":"","what":"Base example","title":"Pre-processing data via `create_recipe`","text":"start typical pre-processing can achieved via dplyr::mutate() wranglr S3 dplyr-methods tools. Combined function log10(), pre-processing can simple following:","code":"features <- c(\"mpg\", \"disp\", \"drat\", \"wt\") cs <- function(.x) {     # .x = numeric vector   out <- log10(.x)       # log10   out <- out - mean(out) # center   out / sd(out)          # scale }  # log10/center/scale features mt_mod <- mtcars for ( i in features ) {   mt_mod[[i]] <- cs(mt_mod[[i]]) }  # check means of feature data apply(feature_matrix(mt_mod, features), 2, mean) |> sum()  # mean = 0 #> [1] -9.072604e-16  # check sd of feature data apply(feature_matrix(mt_mod, features), 2, sd) #>  mpg disp drat   wt  #>    1    1    1    1"},{"path":"https://stufield.github.io/wranglr/dev/articles/simplified-recipes.html","id":"preprocessing-via-recipes","dir":"Articles","previous_headings":"Base example","what":"Preprocessing via recipes","title":"Pre-processing data via `create_recipe`","text":"course result can achieved via recipes package, however without unintended consequences type conversions: two objects … significant modifications occurred perhaps significantly, done invisibly:","code":"rcp <- recipe(mtcars) |>   step_log(all_of(features), base = 10) |>   step_center(all_of(features)) |>   step_scale(all_of(features)) |>   prep()  rcp_data <- bake(rcp, mtcars)    # bake its own recipe  waldo::compare(mt_mod, rcp_data) #> `class(old)`: \"data.frame\"                    #> `class(new)`: \"tbl_df\"     \"tbl\" \"data.frame\" #>  #> `attr(old, 'row.names')` is a character vector ('Mazda RX4', 'Mazda RX4 Wag', 'Datsun 710', 'Hornet 4 Drive', 'Hornet Sportabout', ...) #> `attr(new, 'row.names')` is an integer vector (1, 2, 3, 4, 5, ...) #>  #>      old$mpg             | new$mpg                  #>  [1] 0.2921956512698269  - 0.2921956512698287  [1]  #>  [2] 0.2921956512698269  - 0.2921956512698287  [2]  #>  [3] 0.5683725639695327  - 0.5683725639695344  [3]  #>  [4] 0.3555609266619139  - 0.3555609266619156  [4]  #>  [5] -0.0973588568470361 - -0.0973588568470344 [5]  #>  [6] -0.2068770390427560 - -0.2068770390427543 [6]  #>  [7] -0.9982590624031733 - -0.9982590624031716 [7]  #>  [8] 0.7961384738054255  - 0.7961384738054272  [8]  #>  [9] 0.5683725639695327  - 0.5683725639695344  [9]  #> [10] -0.0087452734091380 - -0.0087452734091362 [10] #> [11] -0.2630052530305372 - -0.2630052530305355 [11] #> [12] -0.5381042456559998 - -0.5381042456559980 [12] #> [13] -0.3586886474273009 - -0.3586886474272992 [13] #> [14] -0.7932846747726703 - -0.7932846747726685 [14] #> [15] -2.0677094775208662 - -2.0677094775208644 [15] #> [16] -2.0677094775208662 - -2.0677094775208644 [16] #> [17] -0.9056115325793566 - -0.9056115325793548 [17] #> [18] 1.7484580182372311  - 1.7484580182372329  [18] #> [19] 1.5344837498075696  - 1.5344837498075714  [19] #> [20] 1.9004414178059192  - 1.9004414178059210  [20] #> [21] 0.3712171786197173  - 0.3712171786197190  [21] #> [22] -0.7276488402979752 - -0.7276488402979735 [22] #> [23] -0.7932846747726703 - -0.7932846747726685 [23] #> [24] -1.2417178043577795 - -1.2417178043577779 [24] #> [25] -0.0087452734091380 - -0.0087452734091362 [25] #> [26] 1.1732830562164709  - 1.1732830562164727  [26] #> [27] 1.0094330013234498  - 1.0094330013234514  [27] #> [28] 1.5344837498075696  - 1.5344837498075714  [28] #> [29] -0.6632712785493204 - -0.6632712785493188 [29] #> [30] 0.0775900716318990  - 0.0775900716319007  [30] #> [31] -0.8377655894612311 - -0.8377655894612295 [31] #> [32] 0.3555609266619139  - 0.3555609266619156  [32] #>  #>      old$disp            | new$disp                 #>  [1] -0.3564005693460643 - -0.3564005693460608 [1]  #>  [2] -0.3564005693460643 - -0.3564005693460608 [2]  #>  [3] -1.0245268374438461 - -1.0245268374438425 [3]  #>  [4] 0.4557791610670426  - 0.4557791610670460  [4]  #>  [5] 1.0220856187645546  - 1.0220856187645582  [5]  #>  [6] 0.2231346137075751  - 0.2231346137075786  [6]  #>  [7] 1.0220856187645546  - 1.0220856187645582  [7]  #>  [8] -0.5039234045752106 - -0.5039234045752070 [8]  #>  [9] -0.5737022970189927 - -0.5737022970189891 [9]  #> [10] -0.2775151823110336 - -0.2775151823110301 [10] #> [11] -0.2775151823110336 - -0.2775151823110301 [11] #> [12] 0.5691891772618392  - 0.5691891772618426  [12] #> [13] 0.5691891772618392  - 0.5691891772618426  [13] #> [14] 0.5691891772618392  - 0.5691891772618426  [14] #> [15] 1.4825412480084112  - 1.4825412480084146  [15] #> [16] 1.4387650272231167  - 1.4387650272231203  [16] #> [17] 1.3632022481877379  - 1.3632022481877415  [17] #> [18] -1.5625194129048876 - -1.5625194129048843 [18] #> [19] -1.6285853427586641 - -1.6285853427586607 [19] #> [20] -1.7351523848701897 - -1.7351523848701862 [20] #> [21] -0.8440103481158979 - -0.8440103481158945 [21] #> [22] 0.8112106761733330  - 0.8112106761733365  [22] #> [23] 0.7346757022991656  - 0.7346757022991690  [23] #> [24] 0.9741984343570680  - 0.9741984343570714  [24] #> [25] 1.2011861291440837  - 1.2011861291440873  [25] #> [26] -1.5560518744906613 - -1.5560518744906580 [26] #> [27] -0.8411819237873273 - -0.8411819237873238 [27] #> [28] -1.2407557454981515 - -1.2407557454981479 [28] #> [29] 0.9790483167604191  - 0.9790483167604226  [29] #> [30] -0.5237371391471235 - -0.5237371391471201 [30] #> [31] 0.7178172239982828  - 0.7178172239982863  [31] #> [32] -0.8313193363157336 - -0.8313193363157301 [32] #>  #>      old$drat            | new$drat                 #>  [1] 0.6174466768968913  - 0.6174466768968895  [1]  #>  [2] 0.6174466768968913  - 0.6174466768968895  [2]  #>  [3] 0.5305327519714770  - 0.5305327519714752  [3]  #>  [4] -0.9725032383853297 - -0.9725032383853315 [4]  #>  [5] -0.8211320203832367 - -0.8211320203832385 [5]  #>  [6] -1.7114061543266874 - -1.7114061543266892 [6]  #>  [7] -0.6940388965804515 - -0.6940388965804531 [7]  #>  [8] 0.2446230640714255  - 0.2446230640714238  [8]  #>  [9] 0.6519006431942563  - 0.6519006431942546  [9]  #> [10] 0.6519006431942563  - 0.6519006431942546  [10] #> [11] 0.6519006431942563  - 0.6519006431942546  [11] #> [12] -0.9944080893158254 - -0.9944080893158271 [12] #> [13] -0.9944080893158254 - -0.9944080893158271 [13] #> [14] -0.9944080893158254 - -0.9944080893158271 [14] #> [15] -1.3087994876449272 - -1.3087994876449289 [15] #> [16] -1.1497696722005291 - -1.1497696722005306 [16] #> [17] -0.6522018942222669 - -0.6522018942222686 [17] #> [18] 0.9213660047362885  - 0.9213660047362867  [18] #> [19] 2.1960501023433925  - 2.1960501023433907  [19] #> [20] 1.1486171971444872  - 1.1486171971444854  [20] #> [21] 0.2628524005697027  - 0.2628524005697009  [21] #> [22] -1.7114061543266874 - -1.7114061543266892 [22] #> [23] -0.8211320203832367 - -0.8211320203832385 [23] #> [24] 0.3172462551798011  - 0.3172462551797994  [24] #> [25] -0.9725032383853297 - -0.9725032383853315 [25] #> [26] 0.9213660047362885  - 0.9213660047362867  [26] #> [27] 1.4757345384430012  - 1.4757345384429994  [27] #> [28] 0.3890947841471895  - 0.3890947841471877  [28] #> [29] 1.1486171971444872  - 1.1486171971444854  [29] #> [30] 0.1156173421847436  - 0.1156173421847419  [30] #> [31] -0.0349081559688093 - -0.0349081559688110 [31] #> [32] 0.9707122747061420  - 0.9707122747061403  [32] #>  #>      old$wt               | new$wt                    #>  [1] -0.49941878390128880 - -0.49941878390128924 [1]  #>  [2] -0.20688705243605401 - -0.20688705243605440 [2]  #>  [3] -0.88243530421712701 - -0.88243530421712735 [3]  #>  [4] 0.14516096952804006  - 0.14516096952803964  [4]  #>  [5] 0.35821437027258324  - 0.35821437027258285  [5]  #>  [6] 0.37647310070281231  - 0.37647310070281187  [6]  #>  [7] 0.47504684719644458  - 0.47504684719644413  [7]  #>  [8] 0.12057363015642972  - 0.12057363015642932  [8]  #>  [9] 0.08083023621123864  - 0.08083023621123823  [9]  #> [10] 0.35821437027258324  - 0.35821437027258285  [10] #> [11] 0.35821437027258324  - 0.35821437027258285  [11] #> [12] 0.88789114488029719  - 0.88789114488029686  [12] #> [13] 0.61313459177967622  - 0.61313459177967589  [13] #> [14] 0.65507425511759743  - 0.65507425511759698  [14] #> [15] 1.68973795019723827  - 1.68973795019723783  [15] #> [16] 1.79243287435869503  - 1.79243287435869458  [16] #> [17] 1.74622159834988744  - 1.74622159834988699  [17] #> [18] -1.04971118792495810 - -1.04971118792495854 [18] #> [19] -2.02332996647317076 | -2.02332996647317076 [19] #> [20] -1.62109321465024414 - -1.62109321465024458 [20] #> [21] -0.69149065077775929 - -0.69149065077775973 [21] #> [22] 0.43062266674731864  - 0.43062266674731819  [22] #> [23] 0.35363310084151861  - 0.35363310084151817  [23] #> [24] 0.70467562950020202  - 0.70467562950020157  [24] #> [25] 0.70877403239280801  - 0.70877403239280767  [25] #> [26] -1.45396530125925372 - -1.45396530125925416 [26] #> [27] -1.13680306427445688 - -1.13680306427445732 [27] #> [28] -2.22881296109019011 - -2.22881296109019056 [28] #> [29] 0.10076462034095805  - 0.10076462034095765  [29] #> [30] -0.32406986071302141 - -0.32406986071302185 [30] #> [31] 0.47504684719644458  - 0.47504684719644413  [31] #> [32] -0.31271985859783663 - -0.31271985859783707 [32]"},{"path":"https://stufield.github.io/wranglr/dev/articles/simplified-recipes.html","id":"an-alternative-workflow","dir":"Articles","previous_headings":"","what":"An alternative workflow","title":"Pre-processing data via `create_recipe`","text":"vast majority proteomics pre-processing involves 3 main steps: log10-transformation center μ=0\\mu = 0 scale σ=1\\sigma = 1 pre-processing first applied training set therefore must also applied test set. new recipe ecosystem defaults set accommodate workflow. goal provide users beneficial aspects recipes without imposed costs stepping recipes ecosystem. introduce 2 new user-facing functions: create_recipe() bake_recipe() First, create train/test sets: Set rcp processing controller object (recipes), however combines recipes::recipe() recipes::prep() one step: Compared recipe class object, rcp much smaller accomplishes task: Now apply recipe familiar “bake” style:","code":"n      <- 5L train  <- head(mtcars, -n) test   <- tail(mtcars, n) # use the defaults: log10 -> center -> scale # add some modifications on-the-fly: sqrt(), log10(), function(x) rcp_ <- create_recipe(train,                       feat = c(\"mpg\", \"disp\", \"drat\", \"wt\"),                       disp = sqrt,                       hp   = log,                       qsec = function(x) round(x / 10, 1L))  # new class object class(rcp_) #> [1] \"rcp\"  \"list\"  # S3 print rcp_ #> ══ Pre-processing recipe ═════════════════════════════════════════════════ #>  #> ─── Training data: #> ✓ Data containing 27 samples used in recipe #> ✓ RFU features ( n = 4 ) will be processed by: #>  #> ─── Steps: #> • log10-transformed      ✓ #> • Centered (mean = 0)    ✓ #> • Scaled (sd = 1)        ✓ #> ✓ Additional processing: #> • disp                  sqrt #> • hp                    log #> • qsec                  function(x) round(x/10, 1L) #> ══════════════════════════════════════════════════════════════════════════  # the recipe contains a processing parameter table rcp_$par_tbl #> # A tibble: 4 × 3 #>   feature means    sds #>   <chr>   <dbl>  <dbl> #> 1 mpg     1.28  0.133  #> 2 disp    1.15  0.130  #> 3 drat    0.545 0.0673 #> 4 wt      0.499 0.136 lobstr::obj_size(rcp) #> 25.22 kB  lobstr::obj_size(rcp_) #> 5.44 kB baked_test <- bake_recipe(rcp_, test)  # convenient to know if data has been \"baked\" is.baked(baked_test) #> [1] TRUE  baked_test #>                        mpg cyl       disp       hp       drat          wt #> Lotus Europa    1.51262140   4 -1.2504330 4.727388 0.46466494 -2.34080684 #> Ford Pantera L -0.62969458   8  0.9282225 5.575949 1.19235920  0.01614505 #> Ferrari Dino    0.09247831   6 -0.5467058 5.164786 0.20264770 -0.41368156 #> Maserati Bora  -0.79978722   8  0.6718339 5.814131 0.05843004  0.39482538 #> Volvo 142E      0.36343727   4 -0.8485863 4.691348 1.02190947 -0.40219819 #>                qsec vs am gear carb #> Lotus Europa    1.7  1  1    5    2 #> Ford Pantera L  1.4  0  1    5    4 #> Ferrari Dino    1.6  0  1    5    6 #> Maserati Bora   1.5  0  1    5    8 #> Volvo 142E      1.9  1  1    4    2"},{"path":"https://stufield.github.io/wranglr/dev/articles/simplified-recipes.html","id":"what-about-non-feature-variables","dir":"Articles","previous_headings":"An alternative workflow","what":"What about non-Feature variables?","title":"Pre-processing data via `create_recipe`","text":"example 3 variables processed via ... mechanism. Arguments passed ... form variable = function() may also pass anonymous functions “--fly”, functions take vector input return vector length. important realize transformations take place center-scale transformation case features “dot”-mechanism variables processed. disp: square rooted (prior log > center > scale) hp: log_e-transformed qseq: anonymous function divide 10 round 1 decimal place","code":"# the 'additional' modified variables rcp_$dot_vars #> [1] \"disp\" \"hp\"   \"qsec\"  # compare modified meta data head(test[, rcp_$dot_vars]) |> as_tibble() #> # A tibble: 5 × 3 #>    disp    hp  qsec #>   <dbl> <dbl> <dbl> #> 1  95.1   113  16.9 #> 2 351     264  14.5 #> 3 145     175  15.5 #> 4 301     335  14.6 #> 5 121     109  18.6  head(baked_test[, rcp_$dot_vars]) |> as_tibble() #> # A tibble: 5 × 3 #>     disp    hp  qsec #>    <dbl> <dbl> <dbl> #> 1 -1.25   4.73   1.7 #> 2  0.928  5.58   1.4 #> 3 -0.547  5.16   1.6 #> 4  0.672  5.81   1.5 #> 5 -0.849  4.69   1.9"},{"path":"https://stufield.github.io/wranglr/dev/articles/simplified-recipes.html","id":"underlying-machinery","dir":"Articles","previous_headings":"","what":"Underlying machinery","title":"Pre-processing data via `create_recipe`","text":"main underlying non-user-facing function center /scale data center_scale().","code":""},{"path":"https://stufield.github.io/wranglr/dev/articles/simplified-recipes.html","id":"center_scale","dir":"Articles","previous_headings":"Underlying machinery","what":"center_scale()","title":"Pre-processing data via `create_recipe`","text":"","code":"cs_data <- log10(train) |> center_scale()  # check new class is_center_scaled(cs_data) #> [1] TRUE  # get the parameter table pars <- attr(cs_data, \"par_tbl\")  # center/scale test based on train parameters test_mod <- log10(test) |> center_scale(pars)"},{"path":"https://stufield.github.io/wranglr/dev/articles/simplified-recipes.html","id":"revert-with-undo_center_scale","dir":"Articles","previous_headings":"Underlying machinery","what":"Revert with undo_center_scale()","title":"Pre-processing data via `create_recipe`","text":"can simply undo center/scaling occurred via undo_center_scale().","code":"old <- undo_center_scale(test_mod)  # Safe-guards are in place so that you cannot double-undo: #   `par_tbl` entry is removed from attributes undo_center_scale(old) #> Error in undo_center_scale(old): Must perform `undo` on previously center/scaled data."},{"path":"https://stufield.github.io/wranglr/dev/articles/tips-safely-map-values.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Safely Map Values via dplyr::left_join()","text":"Mapping values one column specific values another (new) column data frame common task data science. safely often struggle. existing methods tidyverse useful, opinion come drawbacks: can clunky implement -> LHS/RHS syntax difficult () remember complex syntax -> difficult remember; overkill mapping purposes see safe way map (re-code) values existing column new column.","code":""},{"path":"https://stufield.github.io/wranglr/dev/articles/tips-safely-map-values.html","id":"mapping-example","dir":"Articles","previous_headings":"Introduction","what":"Mapping Example","title":"Safely Map Values via dplyr::left_join()","text":"","code":"# wish to map values of 'x' df <- withr::with_seed(101, {   data.frame(id    = 1:10L,              value = rnorm(10),              x     = sample(letters[1:3L], 10, replace = TRUE)   ) }) df #>    id      value x #> 1   1 -0.3260365 b #> 2   2  0.5524619 c #> 3   3 -0.6749438 c #> 4   4  0.2143595 a #> 5   5  0.3107692 c #> 6   6  1.1739663 a #> 7   7  0.6187899 b #> 8   8 -0.1127343 a #> 9   9  0.9170283 a #> 10 10 -0.2232594 c  # create a [n x 2] lookup-table (aka hash map) # n = no. values to map # x = existing values to map # new_x = new mapped values for each `x` map <- data.frame(x = letters[1:4L], new_x = c(\"cat\", \"dog\", \"bird\", \"turtle\")) map #>   x  new_x #> 1 a    cat #> 2 b    dog #> 3 c   bird #> 4 d turtle  # use `dplyr::left_join()` # note: 'turtle' is absent because `d` is not in `df$x` (thus ignored) dplyr::left_join(df, map) #> Joining with `by = join_by(x)` #>    id      value x new_x #> 1   1 -0.3260365 b   dog #> 2   2  0.5524619 c  bird #> 3   3 -0.6749438 c  bird #> 4   4  0.2143595 a   cat #> 5   5  0.3107692 c  bird #> 6   6  1.1739663 a   cat #> 7   7  0.6187899 b   dog #> 8   8 -0.1127343 a   cat #> 9   9  0.9170283 a   cat #> 10 10 -0.2232594 c  bird"},{"path":"https://stufield.github.io/wranglr/dev/articles/tips-safely-map-values.html","id":"un-mapped-values---nas","dir":"Articles","previous_headings":"Introduction","what":"Un-mapped Values -> NAs","title":"Safely Map Values via dplyr::left_join()","text":"Notice b maps NA. mapping object now lacks mapping b (compare row 2 ). Using slightly different syntax via tibble::enframe().","code":"# note: `b` is missing in the map map_vec <- c(a = \"cat\", c = \"bird\", d = \"turtle\") map2 <- tibble::enframe(map_vec, name = \"x\", value = \"new_x\") map2 #> # A tibble: 3 × 2 #>   x     new_x  #>   <chr> <chr>  #> 1 a     cat    #> 2 c     bird   #> 3 d     turtle  # note: un-mapped values generate NAs: `b -> NA` dplyr::left_join(df, map2, by = \"x\") #>    id      value x new_x #> 1   1 -0.3260365 b  <NA> #> 2   2  0.5524619 c  bird #> 3   3 -0.6749438 c  bird #> 4   4  0.2143595 a   cat #> 5   5  0.3107692 c  bird #> 6   6  1.1739663 a   cat #> 7   7  0.6187899 b  <NA> #> 8   8 -0.1127343 a   cat #> 9   9  0.9170283 a   cat #> 10 10 -0.2232594 c  bird"},{"path":"https://stufield.github.io/wranglr/dev/articles/tips-safely-rename-df.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Safely Rename Data Frames","text":"Renaming variables/features data frame (tibble) common task data science. safely often struggle. can achieved safely via dplyr::rename() function via 2 steps: Set mapping either named vector Apply dplyr::rename() function via !!! syntax Alternatively, roll--rename() function Note: entries mapping (.e. key) object must present names data frame object.","code":""},{"path":"https://stufield.github.io/wranglr/dev/articles/tips-safely-rename-df.html","id":"example-with-mtcars","dir":"Articles","previous_headings":"Introduction","what":"Example with mtcars","title":"Safely Rename Data Frames","text":"","code":"# Create map/key of the names to map key <- c(MPG = \"mpg\", CARB = \"carb\")   # named vector key #>    MPG   CARB  #>  \"mpg\" \"carb\"  # rename `mtcars` rename(mtcars, !!! key) |> head() #>                    MPG cyl disp  hp drat    wt  qsec vs am gear CARB #> Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2 #> Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1"},{"path":"https://stufield.github.io/wranglr/dev/articles/tips-safely-rename-df.html","id":"alternative-to-dplyr","dir":"Articles","previous_headings":"Introduction","what":"Alternative to dplyr","title":"Safely Rename Data Frames","text":"prefer avoid dplyr import/dependency, can achieve similar result similar syntax writing renaming function: Now, similar syntax (use !!!):","code":"rename2 <- function (.data, ...) {   map <- c(...)   loc <- setNames(match(map, names(.data), nomatch = 0L), names(map))   loc <- loc[loc > 0L]   newnames <- names(.data)   newnames[loc] <- names(loc)   setNames(.data, newnames) } # rename `mtcars` in-line rename2(mtcars, MPG = \"mpg\", CARB = \"carb\") |>   head() #>                    MPG cyl disp  hp drat    wt  qsec vs am gear CARB #> Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2 #> Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1  # rename `mtcars` via named `key` rename2(mtcars, key) |>   head() #>                    MPG cyl disp  hp drat    wt  qsec vs am gear CARB #> Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2 #> Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1"},{"path":"https://stufield.github.io/wranglr/dev/articles/tips-train-test-setup.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Common train-test data setups","text":"machine learning (ML) analyses require random split original data training/test data sets, model fit training data performance evaluated test data set. split proportions can vary, though 80/20 training/test common. often depends number available samples class distribution splits. Among many alternatives, 3 common approaches, equally viable depend analyst’s weighing pros/cons . recommend one : base R data frame indexing [sample()] [ use dplyr::slice_sample() dplyr::sample_frac() combination dplyr::anti_join() use rsample package (demonstrated)","code":""},{"path":"https://stufield.github.io/wranglr/dev/articles/tips-train-test-setup.html","id":"original-raw-data","dir":"Articles","previous_headings":"Introduction","what":"Original Raw Data","title":"Common train-test data setups","text":"analyses, typically start raw original data set must split randomly training test sets.","code":"raw <- rn2col(head(mtcars, 10L), \"CarModel\") |>   add_rowid(\"id\") |> # set up identifier variable for the join()   tibble::as_tibble() raw #> # A tibble: 10 × 13 #>       id CarModel          mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <int> <chr>           <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1     1 Mazda RX4        21       6  160    110  3.9   2.62  16.5     0     1     4     4 #>  2     2 Mazda RX4 Wag    21       6  160    110  3.9   2.88  17.0     0     1     4     4 #>  3     3 Datsun 710       22.8     4  108     93  3.85  2.32  18.6     1     1     4     1 #>  4     4 Hornet 4 Drive   21.4     6  258    110  3.08  3.22  19.4     1     0     3     1 #>  5     5 Hornet Sportab…  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2 #>  6     6 Valiant          18.1     6  225    105  2.76  3.46  20.2     1     0     3     1 #>  7     7 Duster 360       14.3     8  360    245  3.21  3.57  15.8     0     0     3     4 #>  8     8 Merc 240D        24.4     4  147.    62  3.69  3.19  20       1     0     4     2 #>  9     9 Merc 230         22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2 #> 10    10 Merc 280         19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4"},{"path":"https://stufield.github.io/wranglr/dev/articles/tips-train-test-setup.html","id":"option-1-sample","dir":"Articles","previous_headings":"Introduction","what":"Option #1: sample()","title":"Common train-test data setups","text":"","code":"n     <- nrow(raw) idx   <- withr::with_seed(1, sample(1:n, floor(n / 2))) # sample random 50% (n = 5) train <- raw[idx, ] test  <- raw[-idx, ] train #> # A tibble: 5 × 13 #>      id CarModel         mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>   <int> <chr>          <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1     9 Merc 230        22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2 #> 2     4 Hornet 4 Drive  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1 #> 3     7 Duster 360      14.3     8  360    245  3.21  3.57  15.8     0     0     3     4 #> 4     1 Mazda RX4       21       6  160    110  3.9   2.62  16.5     0     1     4     4 #> 5     2 Mazda RX4 Wag   21       6  160    110  3.9   2.88  17.0     0     1     4     4  test #> # A tibble: 5 × 13 #>      id CarModel           mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>   <int> <chr>            <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1     3 Datsun 710        22.8     4  108     93  3.85  2.32  18.6     1     1     4     1 #> 2     5 Hornet Sportabo…  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2 #> 3     6 Valiant           18.1     6  225    105  2.76  3.46  20.2     1     0     3     1 #> 4     8 Merc 240D         24.4     4  147.    62  3.69  3.19  20       1     0     4     2 #> 5    10 Merc 280          19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4"},{"path":"https://stufield.github.io/wranglr/dev/articles/tips-train-test-setup.html","id":"option-2-anti_join","dir":"Articles","previous_headings":"Introduction","what":"Option #2: anti_join()","title":"Common train-test data setups","text":"","code":"# sample random 50% (n = 5) train <- withr::with_seed(1, dplyr::slice_sample(raw, n = floor(n / 2)))  # or using `dplyr::sample_frac()` # train <- withr::with_seed(1, dplyr::sample_frac(raw, size = 0.5))  # use anti_join() to get the sample setdiff test <- dplyr::anti_join(raw, train, by = \"id\") train #> # A tibble: 5 × 13 #>      id CarModel         mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>   <int> <chr>          <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1     9 Merc 230        22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2 #> 2     4 Hornet 4 Drive  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1 #> 3     7 Duster 360      14.3     8  360    245  3.21  3.57  15.8     0     0     3     4 #> 4     1 Mazda RX4       21       6  160    110  3.9   2.62  16.5     0     1     4     4 #> 5     2 Mazda RX4 Wag   21       6  160    110  3.9   2.88  17.0     0     1     4     4  test #> # A tibble: 5 × 13 #>      id CarModel           mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>   <int> <chr>            <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1     3 Datsun 710        22.8     4  108     93  3.85  2.32  18.6     1     1     4     1 #> 2     5 Hornet Sportabo…  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2 #> 3     6 Valiant           18.1     6  225    105  2.76  3.46  20.2     1     0     3     1 #> 4     8 Merc 240D         24.4     4  147.    62  3.69  3.19  20       1     0     4     2 #> 5    10 Merc 280          19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4"},{"path":[]},{"path":"https://stufield.github.io/wranglr/dev/articles/wranglr.html","id":"transforming-data","dir":"Articles","previous_headings":"Useful functions in wranglr","what":"Transforming Data","title":"Introduction to wranglr","text":"center_scale() create_recipe()","code":"scaled <- center_scale(mtcars)               # all numeric features apply(feature_matrix(scaled), 2, mean) |> sum()  # mean = 0 #> [1] -1.653191e-15 apply(feature_matrix(scaled), 2, sd)             # sd = 1 #>  mpg  cyl disp   hp drat   wt qsec   vs   am gear carb  #>    1    1    1    1    1    1    1    1    1    1    1  # `create_recipe()` rcp <- create_recipe(mtcars, feat = c(\"mpg\", \"disp\", \"drat\", \"wt\")) rcp #> ══ Pre-processing recipe ═════════════════════════════════════════════════ #>  #> ─── Training data: #> ✓ Data containing 32 samples used in recipe #> ✓ RFU features ( n = 4 ) will be processed by: #>  #> ─── Steps: #> • log10-transformed      ✓ #> • Centered (mean = 0)    ✓ #> • Scaled (sd = 1)        ✓ #>  #> ══════════════════════════════════════════════════════════════════════════"},{"path":"https://stufield.github.io/wranglr/dev/articles/wranglr.html","id":"imputing-data","dir":"Articles","previous_headings":"Useful functions in wranglr","what":"Imputing Data","title":"Introduction to wranglr","text":"remove_outliers() impute_outliers() imputeNAs() impute_predictors()","code":"# Identify outliers (`helpr::get_outliers()`) x <- withr::with_seed(1, rnorm(10))   # normal x <- c(x, 100)                        # add outlier get_outliers(x)                       # get index of the outlier #> [1] 11  # parameters stored in attributes (parametric only) attributes(get_outliers(x, type = \"para\")) #> $mu #> [1] 0.1157106 #>  #> $sigma #> [1] 0.9440787 #>  #> $crit #> [1] -2.716526  2.947947  # Impute 11th value impute_outliers(x) #>  [1] -0.6264538  0.1836433 -0.8356286  1.5952808  0.3295078 -0.8204684 #>  [7]  0.4874291  0.7383247  0.5757814 -0.3053884  2.9479467  # Impute NAs x <- withr::with_seed(1, rnorm(6)) x[ c(3, 5) ] <- NA median(x, na.rm = TRUE) #> [1] -0.2214052  imputeNAs(x) #> [1] -0.6264538  0.1836433 -0.2214052  1.5952808 -0.2214052 -0.8204684  table(imputeNAs(x)) #>  #> -0.820468384118015 -0.626453810742332 -0.221405243260125  #>                  1                  1                  2  #>  0.183643324222082   1.59528080213779  #>                  1                  1  # Predictors x   <- data.frame(a = 1:3, b = 4:6, c = 7:9, d = c(1.23, 4.56, 7.89)) tbl <- tibble::tribble(   ~ Feature,  ~ xtrm_max, ~ impute_max, ~ xtrm_min, ~ impute_min,     \"a\",         NA,        NA,           NA,         NA,     \"b\",         5,         5,            0,          1,     \"c\",         9,         7,            7.1,        7.1 ) impute_predictors(x, tbl) #>   a b   c    d #> 1 1 4 7.1 1.23 #> 2 2 5 8.0 4.56 #> 3 3 5 9.0 7.89"},{"path":"https://stufield.github.io/wranglr/dev/articles/wranglr.html","id":"binding-data","dir":"Articles","previous_headings":"Useful functions in wranglr","what":"Binding Data","title":"Introduction to wranglr","text":"bind_intersect() bind_union()","code":"df1 <- data.frame(a = 1, b = 2, c = 3, row.names = \"A\") df2 <- data.frame(a = 4, b = 5, d = 6, row.names = \"B\") df3 <- data.frame(a = 7, b = 8, e = 9, row.names = \"C\") list_df  <- list(a = df1, b = df2, c = df3) list_df #> $a #>   a b c #> A 1 2 3 #>  #> $b #>   a b d #> B 4 5 6 #>  #> $c #>   a b e #> C 7 8 9  bind_intersect(list_df) #>   data a b #> A    a 1 2 #> B    b 4 5 #> C    c 7 8  bind_union(list_df) #>   data a b  c  d  e #> A    a 1 2  3 NA NA #> B    b 4 5 NA  6 NA #> C    c 7 8 NA NA  9"},{"path":"https://stufield.github.io/wranglr/dev/articles/wranglr.html","id":"refactor","dir":"Articles","previous_headings":"Useful functions in wranglr","what":"Refactor","title":"Introduction to wranglr","text":"refactor_data() feature_matrix()","code":"df  <- data.frame(a = factor(c(\"a\", \"b\")), b = 1:2L) foo <- df[df$a == \"a\", ] foo #>   a b #> 1 a 1  levels(foo$a)   # 2 levels! \"b\" is a ghost level #> [1] \"a\" \"b\"  bar <- refactor_data(foo) levels(bar$a)   # 1 level now #> [1] \"a\""},{"path":"https://stufield.github.io/wranglr/dev/articles/wranglr.html","id":"sequence-ids-and-annotations","dir":"Articles","previous_headings":"Useful functions in wranglr","what":"Sequence IDs and Annotations","title":"Introduction to wranglr","text":"lookup_anno() seq_lookup() seqify()","code":"seqs <- withr::with_seed(101, sample(names(sample_df), 10)) seqs #>  [1] \"seq.4500.50\" \"seq.2654.19\" \"seq.4993.16\" \"seq.3074.6\"  \"seq.4721.54\" #>  [6] \"seq.3516.60\" \"seq.3194.36\" \"seq.3197.70\" \"seq.3448.13\" \"seq.4719.58\"  # NAs for those analytes dropped from menu seq_lookup(seqs) #> # A tibble: 10 × 9 #>    seq       SeqId EntrezGeneSymbol Target TargetFullName Dilution UniProt #>    <chr>     <chr> <chr>            <chr>  <chr>          <chr>    <chr>   #>  1 seq.4500… 4500… CLEC11A          SCGF-… Stem cell gro… 0.5%     Q9Y240  #>  2 seq.2654… 2654… TNFRSF1A         TNF s… Tumor necrosi… 20%      P19438  #>  3 seq.4993… 4993… GSTA3            GSTA3  Glutathione S… 20%      Q16772  #>  4 seq.3074… 3074… LBP              LBP    Lipopolysacch… 0.005%   P18428  #>  5 seq.4721… 4721… TFF3             TFF3   Trefoil facto… 0.5%     Q07654  #>  6 seq.3516… 3516… CXCL12           SDF-1  Stromal cell-… 20%      P48061  #>  7 seq.3194… 3194… GP6              GPVI   Platelet glyc… 0.5%     Q9HCN6  #>  8 seq.3197… 3197… IDE              IDE    Insulin-degra… 20%      P14735  #>  9 seq.3448… 3448… INSR             IR     Insulin recep… 20%      P06213  #> 10 seq.4719… 4719… PDIA3            Prote… Protein disul… 0.5%     P30101  #> # ℹ 2 more variables: List <chr>, Reason <chr>  seqify(seqs) #> ══ SeqId Lookup ══════════════════════════════════════════════════════════ #>   SeqId-Feature     GeneID       Target                                                   List     Reason    #> ────────────────────────────────────────────────────────────────────────── #> ▶ seq.4500.50    ❯  CLEC11A   ❯  Stem cell growth factor-alpha                         ❯        ❯         #> ▶ seq.2654.19    ❯  TNFRSF1A  ❯  Tumor necrosis factor receptor superfamily member 1A  ❯        ❯         #> ▶ seq.4993.16    ❯  GSTA3     ❯  Glutathione S-transferase A3                          ❯        ❯         #> ▶ seq.3074.6     ❯  LBP       ❯  Lipopolysaccharide-binding protein                    ❯        ❯         #> ▶ seq.4721.54    ❯  TFF3      ❯  Trefoil factor 3                                      ❯        ❯         #> ▶ seq.3516.60    ❯  CXCL12    ❯  Stromal cell-derived factor 1                         ❯        ❯         #> ▶ seq.3194.36    ❯  GP6       ❯  Platelet glycoprotein VI                              ❯        ❯         #> ▶ seq.3197.70    ❯  IDE       ❯  Insulin-degrading enzyme                              ❯        ❯         #> ▶ seq.3448.13    ❯  INSR      ❯  Insulin receptor                                      ❯        ❯         #> ▶ seq.4719.58    ❯  PDIA3     ❯  Protein disulfide-isomerase A3                        ❯        ❯  # Pass `tbl` containing annotations # to reconstitute those missing ones anno <- attr(sample_df, \"anno\") seq_lookup(seqs, tbl = anno) #> # A tibble: 10 × 5 #>    seq         SeqId   EntrezGeneSymbol Target              TargetFullName #>    <chr>       <chr>   <chr>            <chr>               <chr>          #>  1 seq.4500.50 4500-50 CLEC11A          SCGF-alpha          Stem Cell Gro… #>  2 seq.2654.19 2654-19 TNFRSF1A         TNF sR-I            Tumor necrosi… #>  3 seq.4993.16 4993-16 GSTA3            GSTA3               Glutathione S… #>  4 seq.3074.6  3074-6  LBP              LBP                 Lipopolysacch… #>  5 seq.4721.54 4721-54 TFF3             TFF3                Trefoil facto… #>  6 seq.3516.60 3516-60 CXCL12           SDF-1               Stromal cell-… #>  7 seq.3194.36 3194-36 GP6              GPVI                Platelet glyc… #>  8 seq.3197.70 3197-70 IDE              IDE                 Insulin-degra… #>  9 seq.3448.13 3448-13 INSR             IR                  Insulin recep… #> 10 seq.4719.58 4719-58 PDIA3            Protein disulfide … Protein disul…"},{"path":"https://stufield.github.io/wranglr/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stu Field. Author, maintainer, copyright holder.","code":""},{"path":"https://stufield.github.io/wranglr/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Field S (2024). wranglr: Manipulate Wrangle Data. R package version 0.0.1.9000, https://stufield.github.io/wranglr.","code":"@Manual{,   title = {wranglr: Manipulate and Wrangle Data},   author = {Stu Field},   year = {2024},   note = {R package version 0.0.1.9000},   url = {https://stufield.github.io/wranglr}, }"},{"path":[]},{"path":"https://stufield.github.io/wranglr/dev/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Manipulate and Wrangle Data","text":"wranglr package contains general functions necessary manipulate wrangle internal R representations proteomic data convenient forms analysis.","code":""},{"path":"https://stufield.github.io/wranglr/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Manipulate and Wrangle Data","text":"","code":"# current dev version remotes::install_github(\"stufield/wranglr\")  # or a specific version remotes::install_github(\"stufield/wranglr@v0.0.1\")"},{"path":"https://stufield.github.io/wranglr/dev/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Manipulate and Wrangle Data","text":"load wranglr simply make call library() usual:","code":"library(wranglr)"},{"path":"https://stufield.github.io/wranglr/dev/index.html","id":"help-summary-of-the-package","dir":"","previous_headings":"","what":"Help summary of the package","title":"Manipulate and Wrangle Data","text":"","code":"library(help = wranglr)"},{"path":[]},{"path":"https://stufield.github.io/wranglr/dev/index.html","id":"transforming-data","dir":"","previous_headings":"Useful functions in wranglr","what":"Transforming Data","title":"Manipulate and Wrangle Data","text":"center_scale() create_recipe()","code":"scaled <- center_scale(mtcars) apply(feature_matrix(scaled), 2, mean) |> sum()  # mean = 0 #> [1] 3.410697e-16 apply(feature_matrix(scaled), 2, sd)             # sd = 1 #>  mpg  cyl disp   hp drat   wt qsec   vs   am gear carb  #>    1    1    1    1    1    1    1    1    1    1    1  # `create_recipe()` rcp <- create_recipe(mtcars) rcp #> ══ Pre-processing recipe ═══════════════════════════════════════════════════════════════════════════ #>  #> ─── Training data: #> ✓ Data containing 32 samples used in recipe #> ✓ RFU features ( n = 11 ) will be processed by: #>  #> ─── Steps: #> • log10-transformed      ✓ #> • Centered (mean = 0)    ✓ #> • Scaled (sd = 1)        ✓ #>  #> ════════════════════════════════════════════════════════════════════════════════════════════════════"},{"path":"https://stufield.github.io/wranglr/dev/index.html","id":"imputing-data","dir":"","previous_headings":"Useful functions in wranglr","what":"Imputing Data","title":"Manipulate and Wrangle Data","text":"impute_outliers(), get_outliers() (helpr) imputeNAs() impute_predictors()","code":"# Outliers x <- withr::with_seed(1, rnorm(10))   # normal x <- c(x, 100)                        # add outlier get_outliers(x)                       # index of the outlier #> [1] 11  # parameters stored in attributes (parametric only) attributes(get_outliers(x, type = \"para\")) #> $mu #> [1] 0.1157106 #>  #> $sigma #> [1] 0.9440787 #>  #> $crit #> [1] -2.716526  2.947947  # Impute 11th value impute_outliers(x) #>  [1] -0.6264538  0.1836433 -0.8356286  1.5952808  0.3295078 -0.8204684  0.4874291  0.7383247 #>  [9]  0.5757814 -0.3053884  2.9479467  # Impute NAs x <- withr::with_seed(1, rnorm(6)) x[ c(3, 5) ] <- NA median(x, na.rm = TRUE) #> [1] -0.2214052  imputeNAs(x) #> [1] -0.6264538  0.1836433 -0.2214052  1.5952808 -0.2214052 -0.8204684  table(imputeNAs(x)) #>  #> -0.820468384118015 -0.626453810742332 -0.221405243260125  0.183643324222082   1.59528080213779  #>                  1                  1                  2                  1                  1  # Predictors x   <- data.frame(a = 1:3, b = 4:6, c = 7:9, d = c(1.23, 4.56, 7.89)) tbl <- tibble::tribble(   ~ Feature,  ~ xtrm_max, ~ impute_max, ~ xtrm_min, ~ impute_min,     \"a\",         NA,        NA,           NA,         NA,     \"b\",         5,         5,            0,          1,     \"c\",         9,         7,            7.1,        7.1 ) impute_predictors(x, tbl) #>   a b   c    d #> 1 1 4 7.1 1.23 #> 2 2 5 8.0 4.56 #> 3 3 5 9.0 7.89"},{"path":"https://stufield.github.io/wranglr/dev/index.html","id":"binding-data","dir":"","previous_headings":"Useful functions in wranglr","what":"Binding Data","title":"Manipulate and Wrangle Data","text":"bind_intersect() bind_union()","code":"df1 <- data.frame(a = 1, b = 2, c = 3, row.names = \"A\") df2 <- data.frame(a = 4, b = 5, d = 6, row.names = \"B\") df3 <- data.frame(a = 7, b = 8, e = 9, row.names = \"C\") list_df  <- list(a = df1, b = df2, c = df3) list_df #> $a #>   a b c #> A 1 2 3 #>  #> $b #>   a b d #> B 4 5 6 #>  #> $c #>   a b e #> C 7 8 9  bind_intersect(list_df) #>   data a b #> A    a 1 2 #> B    b 4 5 #> C    c 7 8  bind_union(list_df) #>   data a b  c  d  e #> A    a 1 2  3 NA NA #> B    b 4 5 NA  6 NA #> C    c 7 8 NA NA  9"},{"path":"https://stufield.github.io/wranglr/dev/index.html","id":"selecting-feature-data","dir":"","previous_headings":"Useful functions in wranglr","what":"Selecting Feature Data","title":"Manipulate and Wrangle Data","text":"refactor_data() feature_matrix()","code":"df  <- data.frame(a = factor(c(\"a\", \"b\")), b = 1:2L) foo <- df[df$a == \"a\", ] foo #>   a b #> 1 a 1  levels(foo$a)   # 2 levels! \"b\" is a ghost level #> [1] \"a\" \"b\"  bar <- refactor_data(foo) levels(bar$a)   # 1 level now #> [1] \"a\""},{"path":"https://stufield.github.io/wranglr/dev/index.html","id":"sequence-ids-and-annotations","dir":"","previous_headings":"Useful functions in wranglr","what":"Sequence IDs and Annotations","title":"Manipulate and Wrangle Data","text":"lookup_anno() seq_lookup() seqify()","code":"seqs <- withr::with_seed(101, sample(names(sample_df), 10L)) seqs #>  [1] \"seq.4500.50\" \"seq.2654.19\" \"seq.4993.16\" \"seq.3074.6\"  \"seq.4721.54\" \"seq.3516.60\" #>  [7] \"seq.3194.36\" \"seq.3197.70\" \"seq.3448.13\" \"seq.4719.58\"  # NAs for those analytes dropped from menu seq_lookup(seqs) #> # A tibble: 10 × 9 #>    seq         SeqId   EntrezGeneSymbol Target          TargetFullName Dilution UniProt List  Reason #>    <chr>       <chr>   <chr>            <chr>           <chr>          <chr>    <chr>   <chr> <chr>  #>  1 seq.4500.50 4500-50 CLEC11A          SCGF-alpha      Stem cell gro… 0.5%     Q9Y240  \"\"    \"\"     #>  2 seq.2654.19 2654-19 TNFRSF1A         TNF sR-I        Tumor necrosi… 20%      P19438  \"\"    \"\"     #>  3 seq.4993.16 4993-16 GSTA3            GSTA3           Glutathione S… 20%      Q16772  \"\"    \"\"     #>  4 seq.3074.6  3074-6  LBP              LBP             Lipopolysacch… 0.005%   P18428  \"\"    \"\"     #>  5 seq.4721.54 4721-54 TFF3             TFF3            Trefoil facto… 0.5%     Q07654  \"\"    \"\"     #>  6 seq.3516.60 3516-60 CXCL12           SDF-1           Stromal cell-… 20%      P48061  \"\"    \"\"     #>  7 seq.3194.36 3194-36 GP6              GPVI            Platelet glyc… 0.5%     Q9HCN6  \"\"    \"\"     #>  8 seq.3197.70 3197-70 IDE              IDE             Insulin-degra… 20%      P14735  \"\"    \"\"     #>  9 seq.3448.13 3448-13 INSR             IR              Insulin recep… 20%      P06213  \"\"    \"\"     #> 10 seq.4719.58 4719-58 PDIA3            Protein disulf… Protein disul… 0.5%     P30101  \"\"    \"\"  seqify(seqs) #> ══ SeqId Lookup ════════════════════════════════════════════════════════════════════════════════════ #>   SeqId-Feature     GeneID       Target                                                   List     Reason    #> ──────────────────────────────────────────────────────────────────────────────────────────────────── #> ▶ seq.4500.50    ❯  CLEC11A   ❯  Stem cell growth factor-alpha                         ❯        ❯         #> ▶ seq.2654.19    ❯  TNFRSF1A  ❯  Tumor necrosis factor receptor superfamily member 1A  ❯        ❯         #> ▶ seq.4993.16    ❯  GSTA3     ❯  Glutathione S-transferase A3                          ❯        ❯         #> ▶ seq.3074.6     ❯  LBP       ❯  Lipopolysaccharide-binding protein                    ❯        ❯         #> ▶ seq.4721.54    ❯  TFF3      ❯  Trefoil factor 3                                      ❯        ❯         #> ▶ seq.3516.60    ❯  CXCL12    ❯  Stromal cell-derived factor 1                         ❯        ❯         #> ▶ seq.3194.36    ❯  GP6       ❯  Platelet glycoprotein VI                              ❯        ❯         #> ▶ seq.3197.70    ❯  IDE       ❯  Insulin-degrading enzyme                              ❯        ❯         #> ▶ seq.3448.13    ❯  INSR      ❯  Insulin receptor                                      ❯        ❯         #> ▶ seq.4719.58    ❯  PDIA3     ❯  Protein disulfide-isomerase A3                        ❯        ❯  # Pass `tbl` containing annotations # to reconstitute those missing ones anno <- attr(sample_df, \"anno\") seq_lookup(seqs, tbl = anno) #> # A tibble: 10 × 5 #>    seq         SeqId   EntrezGeneSymbol Target                         TargetFullName                #>    <chr>       <chr>   <chr>            <chr>                          <chr>                         #>  1 seq.4500.50 4500-50 CLEC11A          SCGF-alpha                     Stem Cell Growth Factor-alpha #>  2 seq.2654.19 2654-19 TNFRSF1A         TNF sR-I                       Tumor necrosis factor recept… #>  3 seq.4993.16 4993-16 GSTA3            GSTA3                          Glutathione S-transferase A3  #>  4 seq.3074.6  3074-6  LBP              LBP                            Lipopolysaccharide-binding p… #>  5 seq.4721.54 4721-54 TFF3             TFF3                           Trefoil factor 3              #>  6 seq.3516.60 3516-60 CXCL12           SDF-1                          Stromal cell-derived factor 1 #>  7 seq.3194.36 3194-36 GP6              GPVI                           Platelet glycoprotein VI      #>  8 seq.3197.70 3197-70 IDE              IDE                            Insulin-degrading enzyme      #>  9 seq.3448.13 3448-13 INSR             IR                             Insulin receptor              #> 10 seq.4719.58 4719-58 PDIA3            Protein disulfide isomerase A3 Protein disulfide-isomerase …"},{"path":"https://stufield.github.io/wranglr/dev/reference/anno.html","id":null,"dir":"Reference","previous_headings":"","what":"Protein Annotations — anno","title":"Protein Annotations — anno","text":"group functions allow simple search access protein annotation information based internal lookup table.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/anno.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Protein Annotations — anno","text":"","code":"get_anno()  grep_anno(pattern)  seq_lookup(seq, tbl = NULL)  seqify(seq)"},{"path":"https://stufield.github.io/wranglr/dev/reference/anno.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Protein Annotations — anno","text":"pattern character(1). Regular expression pattern match. seq character(n). vector SeqIds, strings containing SeqIds. tbl tibble containing annotation data.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/anno.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Protein Annotations — anno","text":"get_anno(): tibble protein annotation information. grep_anno(): tibble subset protein information (annotations) corresponding matching rows pattern. seq_lookup(): tibble, subset tbl, corresponding rows whose SeqIds match values seq. seqify(): wranglr_seq class object.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/anno.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Protein Annotations — anno","text":"Historical features may dropped menu may absent internal lookup table, resulting NA row. cases, can retrieved explicitly passing annotations table corresponding original data prior menu change. easiest way generate \"time-capsuled\" annotations table: 1. via attr(data, \"Col.Meta\")","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/anno.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Protein Annotations — anno","text":"get_anno(): convenient wrapper easily retrieve lookup table (tibble) proteomic annotations keyed SeqId. grep_anno(): pattern matches via regular expression internal \"annotations\" table (tibble). Matches performed (regexpr = \"|\") following: EntrezGeneSymbol TargetFullName Target List SeqId seq_lookup(): conveniently looks annotation keyed vector SeqIds. internal lookup dictionary matched values SeqId column annotations, accesses static internal object. Alternatively, user can explicitly pass annotations table choice. seqify(): converts wranglr_seq object, primarily dispatch S3 print method interactive use.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/anno.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Protein Annotations — anno","text":"Stu Field","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/anno.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Protein Annotations — anno","text":"","code":"get_anno() #> # A tibble: 11,083 × 44 #>    SeqId    TargetFullName     EntrezGeneSymbol ApparentKdM UniProt SomaId #>    <chr>    <chr>              <chr>                  <dbl> <chr>   <chr>  #>  1 10000-28 Beta-crystallin B2 CRYBB2              1.24e-10 P43320  SL019… #>  2 10001-7  RAF proto-oncogen… RAF1                1.18e-11 P04049  SL002… #>  3 10003-15 Zinc finger prote… ZNF41               4.33e-11 P51814  SL019… #>  4 10006-25 ETS domain-contai… ELK1                3.37e-12 P19419  SL019… #>  5 10008-43 Guanylyl cyclase-… GUCA1A              5.26e-11 P43080  SL019… #>  6 10010-10 Beclin-1           BECN1               3.94e-10 Q14457  SL014… #>  7 10011-65 Inositol polyphos… OCRL                7.25e-11 Q01968  SL019… #>  8 10012-5  SAM pointed domai… SPDEF               1.35e-10 O95238  SL014… #>  9 10013-34 Internal Use Only… Igh                NA        Q99LC4  SL025… #> 10 10014-31 Zinc finger prote… SNAI2               1.84e-11 O43623  SL007… #> # ℹ 11,073 more rows #> # ℹ 38 more variables: Organism <chr>, Dilution <chr>, Target <chr>, #> #   Type <chr>, List <chr>, Reason <chr>, `LoDB (RFU)` <dbl>, #> #   `Signal To Noise Plasma` <dbl>, `Intra-Plate CV Plasma` <dbl>, #> #   `Inter-Plate CV Plasma` <dbl>, `Total CV Plasma` <dbl>, #> #   `Correlation Plasma` <dbl>, `F-Statistic Plasma` <dbl>, #> #   `Lower 95% Normal Plasma (RFU)` <dbl>, …  grep_anno(\"^MMP\")     # match EntrezGeneSymbols #> # A tibble: 24 × 44 #>    SeqId    TargetFullName     EntrezGeneSymbol ApparentKdM UniProt SomaId #>    <chr>    <chr>              <chr>                  <dbl> <chr>   <chr>  #>  1 10479-18 Stromelysin-2      MMP10               2.31e-11 P09238  SL000… #>  2 15419-15 Matrix metallopro… MMP20               1.36e-11 O60882  SL012… #>  3 2579-17  Matrix metallopro… MMP9                2.89e-11 P14780  SL000… #>  4 25932-61 Matrix metallopro… MMP23B              2.24e-11 O75900  SL024… #>  5 2788-55  Stromelysin-1      MMP3                4.53e-11 P08254  SL000… #>  6 2789-26  Matrilysin         MMP7                7.89e-12 P09237  SL000… #>  7 2838-53  Matrix metallopro… MMP17               1.88e-10 Q9ULZ9  SL003… #>  8 2954-56  Neutrophil collag… MMP8                1.36e-11 P22894  SL000… #>  9 31177-67 Matrix metallopro… MMP15               3.18e-11 P51511  SL003… #> 10 33871-7  Matrix metallopro… MMP15               1.66e-11 P51511  SL003… #> # ℹ 14 more rows #> # ℹ 38 more variables: Organism <chr>, Dilution <chr>, Target <chr>, #> #   Type <chr>, List <chr>, Reason <chr>, `LoDB (RFU)` <dbl>, #> #   `Signal To Noise Plasma` <dbl>, `Intra-Plate CV Plasma` <dbl>, #> #   `Inter-Plate CV Plasma` <dbl>, `Total CV Plasma` <dbl>, #> #   `Correlation Plasma` <dbl>, `F-Statistic Plasma` <dbl>, #> #   `Lower 95% Normal Plasma (RFU)` <dbl>, … grep_anno(\"^29\")      # match SeqId #> # A tibble: 476 × 44 #>    SeqId     TargetFullName    EntrezGeneSymbol ApparentKdM UniProt SomaId #>    <chr>     <chr>             <chr>                  <dbl> <chr>   <chr>  #>  1 2900-53   C-C motif chemok… CCL14               6.07e-11 Q16627  SL003… #>  2 2906-55   Interleukin-4     IL4                 1.15e-12 P05112  SL000… #>  3 29065-61  Cyclin-dependent… CDK19               1.51e-10 Q9BWU1  SL021… #>  4 29066-34  Myristoylated al… MARCKS              1.42e-11 P29966  SL008… #>  5 29067-43  Protein MICAL-2   MICAL2              3.63e-12 O94851  SL014… #>  6 29068-2   Melanoma-associa… MAGEB6              4.55e-11 Q8N7X4  SL013… #>  7 29069-5   Tubulin beta-4 c… TUBB4A              4.69e-11 P04350  SL007… #>  8 29070-6   TFAR15            PDCD10              1.18e-11 Q9BUL8  SL003… #>  9 29071-219 UGT 1A10          UGT1A10             3.19e-10 Q9HAW8  SL000… #> 10 29072-84  Calcium/calmodul… CAMK1G              1.81e-10 Q96NX5  SL021… #> # ℹ 466 more rows #> # ℹ 38 more variables: Organism <chr>, Dilution <chr>, Target <chr>, #> #   Type <chr>, List <chr>, Reason <chr>, `LoDB (RFU)` <dbl>, #> #   `Signal To Noise Plasma` <dbl>, `Intra-Plate CV Plasma` <dbl>, #> #   `Inter-Plate CV Plasma` <dbl>, `Total CV Plasma` <dbl>, #> #   `Correlation Plasma` <dbl>, `F-Statistic Plasma` <dbl>, #> #   `Lower 95% Normal Plasma (RFU)` <dbl>, … grep_anno(\"^black\")   # Blacklisted #> # A tibble: 363 × 44 #>    SeqId    TargetFullName     EntrezGeneSymbol ApparentKdM UniProt SomaId #>    <chr>    <chr>              <chr>                  <dbl> <chr>   <chr>  #>  1 10013-34 Internal Use Only… Igh                       NA Q99LC4  SL025… #>  2 10021-1  Internal Use Only… Igh                       NA Q99LC4  SL025… #>  3 10034-16 Internal Use Only… Igh                       NA Q99LC4  SL025… #>  4 10416-79 Internal Use Only… Igh                       NA Q99LC4  SL025… #>  5 10427-2  Internal Use Only… Igh                       NA Q99LC4  SL025… #>  6 10452-24 Internal Use Only… Igh                       NA Q99LC4  SL025… #>  7 10461-57 Internal Use Only… Igh                       NA Q99LC4  SL025… #>  8 10467-58 Internal Use Only… Igh                       NA Q99LC4  SL025… #>  9 10471-25 Internal Use Only… Igh                       NA Q99LC4  SL025… #> 10 10476-23 Internal Use Only… Igh                       NA Q99LC4  SL025… #> # ℹ 353 more rows #> # ℹ 38 more variables: Organism <chr>, Dilution <chr>, Target <chr>, #> #   Type <chr>, List <chr>, Reason <chr>, `LoDB (RFU)` <dbl>, #> #   `Signal To Noise Plasma` <dbl>, `Intra-Plate CV Plasma` <dbl>, #> #   `Inter-Plate CV Plasma` <dbl>, `Total CV Plasma` <dbl>, #> #   `Correlation Plasma` <dbl>, `F-Statistic Plasma` <dbl>, #> #   `Lower 95% Normal Plasma (RFU)` <dbl>, …  svec <- c(\"seq.2981.9\", \"seq.5073.30\", \"seq.4429.51\", \"seq.2447.7\") svec #> [1] \"seq.2981.9\"  \"seq.5073.30\" \"seq.4429.51\" \"seq.2447.7\"   seq_lookup(svec) #> # A tibble: 4 × 9 #>   seq        SeqId EntrezGeneSymbol Target TargetFullName Dilution UniProt #>   <chr>      <chr> <chr>            <chr>  <chr>          <chr>    <chr>   #> 1 seq.2981.9 2981… ESAM             ESAM   Endothelial c… 0.5%     Q96AP7  #> 2 seq.5073.… 5073… NA               NA     NA             NA       NA      #> 3 seq.4429.… 4429… CHST6            CHST6  Carbohydrate … 20%      Q9GZX3  #> 4 seq.2447.7 2447… PLA2G2E          GIIE   Group IIE sec… 20%      Q9NZK7  #> # ℹ 2 more variables: List <chr>, Reason <chr>  # print method for class `wranglr_seq` seqify(svec) |> class() #> [1] \"wranglr_seq\" \"character\"    # works with seq.xxxx.xx format seqify(svec) #> ══ SeqId Lookup ══════════════════════════════════════════════════════════ #>   SeqId-Feature     GeneID      Target                                           List     Reason    #> ────────────────────────────────────────────────────────────────────────── #> ▶ seq.2981.9     ❯  ESAM     ❯  Endothelial cell-selective adhesion molecule  ❯  NA    ❯  NA     #> ▶ seq.5073.30    ❯  NA       ❯  NA                                            ❯  NA    ❯  NA     #> ▶ seq.4429.51    ❯  CHST6    ❯  Carbohydrate sulfotransferase 6               ❯        ❯         #> ▶ seq.2447.7     ❯  PLA2G2E  ❯  Group IIE secretory phospholipase A2          ❯        ❯          # also works with pure SeqIds vec <- sub(\"\\\\.\", \"-\", sub(\"^seq\\\\.\", \"\", svec)) vec #> [1] \"2981-9\"  \"5073-30\" \"4429-51\" \"2447-7\"   seqify(vec) #> ══ SeqId Lookup ══════════════════════════════════════════════════════════ #>   SeqId-Feature     GeneID      Target                                           List     Reason    #> ────────────────────────────────────────────────────────────────────────── #> ▶ 2981-9         ❯  ESAM     ❯  Endothelial cell-selective adhesion molecule  ❯  NA    ❯  NA     #> ▶ 5073-30        ❯  NA       ❯  NA                                            ❯  NA    ❯  NA     #> ▶ 4429-51        ❯  CHST6    ❯  Carbohydrate sulfotransferase 6               ❯        ❯         #> ▶ 2447-7         ❯  PLA2G2E  ❯  Group IIE secretory phospholipase A2          ❯        ❯"},{"path":"https://stufield.github.io/wranglr/dev/reference/bind.html","id":null,"dir":"Reference","previous_headings":"","what":"Vertically Combine Data Frames by Intersect — bind","title":"Vertically Combine Data Frames by Intersect — bind","text":"bind_intersect(): rbind() used vertically combine data frames based intersect column names. creates fewer columns original data, best number columns. resulting data frame dimensions: rows: nrow(df1) + nrow(df2) + ... + nrow(df_n) cols: intersect(names(...)) bind_union(): rbind() used vertically merge data frames based union column names. creates columns NAs rows data frame non-overlapping column names. resulting data frame dimensions: rows: nrow(df1) + nrow(df2) + ... + nrow(df_n) cols: union(names(...))","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/bind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vertically Combine Data Frames by Intersect — bind","text":"","code":"bind_intersect(...)  bind_union(...)"},{"path":"https://stufield.github.io/wranglr/dev/reference/bind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vertically Combine Data Frames by Intersect — bind","text":"... Data frames combine. Can also list data frames combine.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/bind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vertically Combine Data Frames by Intersect — bind","text":"single data frame total number rows = sum(sapply(..., nrow)).","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/bind.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Vertically Combine Data Frames by Intersect — bind","text":"Incidentally, default behavior rbind() reorders columns correctly, intersect matches.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/bind.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Vertically Combine Data Frames by Intersect — bind","text":"bind_intersect(), columns combined intersect . bind_union(), ordering rows correspond order supplied.","code":""},{"path":[]},{"path":"https://stufield.github.io/wranglr/dev/reference/bind.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Vertically Combine Data Frames by Intersect — bind","text":"Stu Field","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/bind.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vertically Combine Data Frames by Intersect — bind","text":"","code":"# For `bind_intersect()` spl <- split(mtcars, mtcars$cyl) |> unname() foo <- mapply(spl, -c(11, 10, 9), FUN = function(x, y) x[, y], SIMPLIFY = FALSE) sapply(spl, names) #>       [,1]   [,2]   [,3]   #>  [1,] \"mpg\"  \"mpg\"  \"mpg\"  #>  [2,] \"cyl\"  \"cyl\"  \"cyl\"  #>  [3,] \"disp\" \"disp\" \"disp\" #>  [4,] \"hp\"   \"hp\"   \"hp\"   #>  [5,] \"drat\" \"drat\" \"drat\" #>  [6,] \"wt\"   \"wt\"   \"wt\"   #>  [7,] \"qsec\" \"qsec\" \"qsec\" #>  [8,] \"vs\"   \"vs\"   \"vs\"   #>  [9,] \"am\"   \"am\"   \"am\"   #> [10,] \"gear\" \"gear\" \"gear\" #> [11,] \"carb\" \"carb\" \"carb\" sapply(spl, ncol) #> [1] 11 11 11  # Pass a list bind_intersect(spl) #>                        data  mpg cyl  disp  hp drat    wt  qsec vs am #> Datsun 710          data_01 22.8   4 108.0  93 3.85 2.320 18.61  1  1 #> Merc 240D           data_01 24.4   4 146.7  62 3.69 3.190 20.00  1  0 #> Merc 230            data_01 22.8   4 140.8  95 3.92 3.150 22.90  1  0 #> Fiat 128            data_01 32.4   4  78.7  66 4.08 2.200 19.47  1  1 #> Honda Civic         data_01 30.4   4  75.7  52 4.93 1.615 18.52  1  1 #> Toyota Corolla      data_01 33.9   4  71.1  65 4.22 1.835 19.90  1  1 #> Toyota Corona       data_01 21.5   4 120.1  97 3.70 2.465 20.01  1  0 #> Fiat X1-9           data_01 27.3   4  79.0  66 4.08 1.935 18.90  1  1 #> Porsche 914-2       data_01 26.0   4 120.3  91 4.43 2.140 16.70  0  1 #> Lotus Europa        data_01 30.4   4  95.1 113 3.77 1.513 16.90  1  1 #> Volvo 142E          data_01 21.4   4 121.0 109 4.11 2.780 18.60  1  1 #> Mazda RX4           data_02 21.0   6 160.0 110 3.90 2.620 16.46  0  1 #> Mazda RX4 Wag       data_02 21.0   6 160.0 110 3.90 2.875 17.02  0  1 #> Hornet 4 Drive      data_02 21.4   6 258.0 110 3.08 3.215 19.44  1  0 #> Valiant             data_02 18.1   6 225.0 105 2.76 3.460 20.22  1  0 #> Merc 280            data_02 19.2   6 167.6 123 3.92 3.440 18.30  1  0 #> Merc 280C           data_02 17.8   6 167.6 123 3.92 3.440 18.90  1  0 #> Ferrari Dino        data_02 19.7   6 145.0 175 3.62 2.770 15.50  0  1 #> Hornet Sportabout   data_03 18.7   8 360.0 175 3.15 3.440 17.02  0  0 #> Duster 360          data_03 14.3   8 360.0 245 3.21 3.570 15.84  0  0 #> Merc 450SE          data_03 16.4   8 275.8 180 3.07 4.070 17.40  0  0 #> Merc 450SL          data_03 17.3   8 275.8 180 3.07 3.730 17.60  0  0 #> Merc 450SLC         data_03 15.2   8 275.8 180 3.07 3.780 18.00  0  0 #> Cadillac Fleetwood  data_03 10.4   8 472.0 205 2.93 5.250 17.98  0  0 #> Lincoln Continental data_03 10.4   8 460.0 215 3.00 5.424 17.82  0  0 #> Chrysler Imperial   data_03 14.7   8 440.0 230 3.23 5.345 17.42  0  0 #> Dodge Challenger    data_03 15.5   8 318.0 150 2.76 3.520 16.87  0  0 #> AMC Javelin         data_03 15.2   8 304.0 150 3.15 3.435 17.30  0  0 #> Camaro Z28          data_03 13.3   8 350.0 245 3.73 3.840 15.41  0  0 #> Pontiac Firebird    data_03 19.2   8 400.0 175 3.08 3.845 17.05  0  0 #> Ford Pantera L      data_03 15.8   8 351.0 264 4.22 3.170 14.50  0  1 #> Maserati Bora       data_03 15.0   8 301.0 335 3.54 3.570 14.60  0  1 #>                     gear carb #> Datsun 710             4    1 #> Merc 240D              4    2 #> Merc 230               4    2 #> Fiat 128               4    1 #> Honda Civic            4    2 #> Toyota Corolla         4    1 #> Toyota Corona          3    1 #> Fiat X1-9              4    1 #> Porsche 914-2          5    2 #> Lotus Europa           5    2 #> Volvo 142E             4    2 #> Mazda RX4              4    4 #> Mazda RX4 Wag          4    4 #> Hornet 4 Drive         3    1 #> Valiant                3    1 #> Merc 280               4    4 #> Merc 280C              4    4 #> Ferrari Dino           5    6 #> Hornet Sportabout      3    2 #> Duster 360             3    4 #> Merc 450SE             3    3 #> Merc 450SL             3    3 #> Merc 450SLC            3    3 #> Cadillac Fleetwood     3    4 #> Lincoln Continental    3    4 #> Chrysler Imperial      3    4 #> Dodge Challenger       3    2 #> AMC Javelin            3    2 #> Camaro Z28             3    4 #> Pontiac Firebird       3    2 #> Ford Pantera L         5    4 #> Maserati Bora          5    8  # Can pass either list or via '...' identical(bind_intersect(spl), bind_intersect(spl[[1L]], spl[[2L]], spl[[3L]])) #> [1] TRUE  # Passing a *named* list adds `data` column with those names names(spl) <- letters[1:3L] bind_intersect(spl) #>                     data  mpg cyl  disp  hp drat    wt  qsec vs am gear #> Datsun 710             a 22.8   4 108.0  93 3.85 2.320 18.61  1  1    4 #> Merc 240D              a 24.4   4 146.7  62 3.69 3.190 20.00  1  0    4 #> Merc 230               a 22.8   4 140.8  95 3.92 3.150 22.90  1  0    4 #> Fiat 128               a 32.4   4  78.7  66 4.08 2.200 19.47  1  1    4 #> Honda Civic            a 30.4   4  75.7  52 4.93 1.615 18.52  1  1    4 #> Toyota Corolla         a 33.9   4  71.1  65 4.22 1.835 19.90  1  1    4 #> Toyota Corona          a 21.5   4 120.1  97 3.70 2.465 20.01  1  0    3 #> Fiat X1-9              a 27.3   4  79.0  66 4.08 1.935 18.90  1  1    4 #> Porsche 914-2          a 26.0   4 120.3  91 4.43 2.140 16.70  0  1    5 #> Lotus Europa           a 30.4   4  95.1 113 3.77 1.513 16.90  1  1    5 #> Volvo 142E             a 21.4   4 121.0 109 4.11 2.780 18.60  1  1    4 #> Mazda RX4              b 21.0   6 160.0 110 3.90 2.620 16.46  0  1    4 #> Mazda RX4 Wag          b 21.0   6 160.0 110 3.90 2.875 17.02  0  1    4 #> Hornet 4 Drive         b 21.4   6 258.0 110 3.08 3.215 19.44  1  0    3 #> Valiant                b 18.1   6 225.0 105 2.76 3.460 20.22  1  0    3 #> Merc 280               b 19.2   6 167.6 123 3.92 3.440 18.30  1  0    4 #> Merc 280C              b 17.8   6 167.6 123 3.92 3.440 18.90  1  0    4 #> Ferrari Dino           b 19.7   6 145.0 175 3.62 2.770 15.50  0  1    5 #> Hornet Sportabout      c 18.7   8 360.0 175 3.15 3.440 17.02  0  0    3 #> Duster 360             c 14.3   8 360.0 245 3.21 3.570 15.84  0  0    3 #> Merc 450SE             c 16.4   8 275.8 180 3.07 4.070 17.40  0  0    3 #> Merc 450SL             c 17.3   8 275.8 180 3.07 3.730 17.60  0  0    3 #> Merc 450SLC            c 15.2   8 275.8 180 3.07 3.780 18.00  0  0    3 #> Cadillac Fleetwood     c 10.4   8 472.0 205 2.93 5.250 17.98  0  0    3 #> Lincoln Continental    c 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3 #> Chrysler Imperial      c 14.7   8 440.0 230 3.23 5.345 17.42  0  0    3 #> Dodge Challenger       c 15.5   8 318.0 150 2.76 3.520 16.87  0  0    3 #> AMC Javelin            c 15.2   8 304.0 150 3.15 3.435 17.30  0  0    3 #> Camaro Z28             c 13.3   8 350.0 245 3.73 3.840 15.41  0  0    3 #> Pontiac Firebird       c 19.2   8 400.0 175 3.08 3.845 17.05  0  0    3 #> Ford Pantera L         c 15.8   8 351.0 264 4.22 3.170 14.50  0  1    5 #> Maserati Bora          c 15.0   8 301.0 335 3.54 3.570 14.60  0  1    5 #>                     carb #> Datsun 710             1 #> Merc 240D              2 #> Merc 230               2 #> Fiat 128               1 #> Honda Civic            2 #> Toyota Corolla         1 #> Toyota Corona          1 #> Fiat X1-9              1 #> Porsche 914-2          2 #> Lotus Europa           2 #> Volvo 142E             2 #> Mazda RX4              4 #> Mazda RX4 Wag          4 #> Hornet 4 Drive         1 #> Valiant                1 #> Merc 280               4 #> Merc 280C              4 #> Ferrari Dino           6 #> Hornet Sportabout      2 #> Duster 360             4 #> Merc 450SE             3 #> Merc 450SL             3 #> Merc 450SLC            3 #> Cadillac Fleetwood     4 #> Lincoln Continental    4 #> Chrysler Imperial      4 #> Dodge Challenger       2 #> AMC Javelin            2 #> Camaro Z28             4 #> Pontiac Firebird       2 #> Ford Pantera L         4 #> Maserati Bora          8  # For `bind_union()` bind_union(spl) #>                     data  mpg cyl  disp  hp drat    wt  qsec vs am gear #> Datsun 710             a 22.8   4 108.0  93 3.85 2.320 18.61  1  1    4 #> Merc 240D              a 24.4   4 146.7  62 3.69 3.190 20.00  1  0    4 #> Merc 230               a 22.8   4 140.8  95 3.92 3.150 22.90  1  0    4 #> Fiat 128               a 32.4   4  78.7  66 4.08 2.200 19.47  1  1    4 #> Honda Civic            a 30.4   4  75.7  52 4.93 1.615 18.52  1  1    4 #> Toyota Corolla         a 33.9   4  71.1  65 4.22 1.835 19.90  1  1    4 #> Toyota Corona          a 21.5   4 120.1  97 3.70 2.465 20.01  1  0    3 #> Fiat X1-9              a 27.3   4  79.0  66 4.08 1.935 18.90  1  1    4 #> Porsche 914-2          a 26.0   4 120.3  91 4.43 2.140 16.70  0  1    5 #> Lotus Europa           a 30.4   4  95.1 113 3.77 1.513 16.90  1  1    5 #> Volvo 142E             a 21.4   4 121.0 109 4.11 2.780 18.60  1  1    4 #> Mazda RX4              b 21.0   6 160.0 110 3.90 2.620 16.46  0  1    4 #> Mazda RX4 Wag          b 21.0   6 160.0 110 3.90 2.875 17.02  0  1    4 #> Hornet 4 Drive         b 21.4   6 258.0 110 3.08 3.215 19.44  1  0    3 #> Valiant                b 18.1   6 225.0 105 2.76 3.460 20.22  1  0    3 #> Merc 280               b 19.2   6 167.6 123 3.92 3.440 18.30  1  0    4 #> Merc 280C              b 17.8   6 167.6 123 3.92 3.440 18.90  1  0    4 #> Ferrari Dino           b 19.7   6 145.0 175 3.62 2.770 15.50  0  1    5 #> Hornet Sportabout      c 18.7   8 360.0 175 3.15 3.440 17.02  0  0    3 #> Duster 360             c 14.3   8 360.0 245 3.21 3.570 15.84  0  0    3 #> Merc 450SE             c 16.4   8 275.8 180 3.07 4.070 17.40  0  0    3 #> Merc 450SL             c 17.3   8 275.8 180 3.07 3.730 17.60  0  0    3 #> Merc 450SLC            c 15.2   8 275.8 180 3.07 3.780 18.00  0  0    3 #> Cadillac Fleetwood     c 10.4   8 472.0 205 2.93 5.250 17.98  0  0    3 #> Lincoln Continental    c 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3 #> Chrysler Imperial      c 14.7   8 440.0 230 3.23 5.345 17.42  0  0    3 #> Dodge Challenger       c 15.5   8 318.0 150 2.76 3.520 16.87  0  0    3 #> AMC Javelin            c 15.2   8 304.0 150 3.15 3.435 17.30  0  0    3 #> Camaro Z28             c 13.3   8 350.0 245 3.73 3.840 15.41  0  0    3 #> Pontiac Firebird       c 19.2   8 400.0 175 3.08 3.845 17.05  0  0    3 #> Ford Pantera L         c 15.8   8 351.0 264 4.22 3.170 14.50  0  1    5 #> Maserati Bora          c 15.0   8 301.0 335 3.54 3.570 14.60  0  1    5 #>                     carb #> Datsun 710             1 #> Merc 240D              2 #> Merc 230               2 #> Fiat 128               1 #> Honda Civic            2 #> Toyota Corolla         1 #> Toyota Corona          1 #> Fiat X1-9              1 #> Porsche 914-2          2 #> Lotus Europa           2 #> Volvo 142E             2 #> Mazda RX4              4 #> Mazda RX4 Wag          4 #> Hornet 4 Drive         1 #> Valiant                1 #> Merc 280               4 #> Merc 280C              4 #> Ferrari Dino           6 #> Hornet Sportabout      2 #> Duster 360             4 #> Merc 450SE             3 #> Merc 450SL             3 #> Merc 450SLC            3 #> Cadillac Fleetwood     4 #> Lincoln Continental    4 #> Chrysler Imperial      4 #> Dodge Challenger       2 #> AMC Javelin            2 #> Camaro Z28             4 #> Pontiac Firebird       2 #> Ford Pantera L         4 #> Maserati Bora          8 bind_union(spl[[1L]], spl[[2L]]) #>                   data  mpg cyl  disp  hp drat    wt  qsec vs am gear #> Datsun 710     data_01 22.8   4 108.0  93 3.85 2.320 18.61  1  1    4 #> Merc 240D      data_01 24.4   4 146.7  62 3.69 3.190 20.00  1  0    4 #> Merc 230       data_01 22.8   4 140.8  95 3.92 3.150 22.90  1  0    4 #> Fiat 128       data_01 32.4   4  78.7  66 4.08 2.200 19.47  1  1    4 #> Honda Civic    data_01 30.4   4  75.7  52 4.93 1.615 18.52  1  1    4 #> Toyota Corolla data_01 33.9   4  71.1  65 4.22 1.835 19.90  1  1    4 #> Toyota Corona  data_01 21.5   4 120.1  97 3.70 2.465 20.01  1  0    3 #> Fiat X1-9      data_01 27.3   4  79.0  66 4.08 1.935 18.90  1  1    4 #> Porsche 914-2  data_01 26.0   4 120.3  91 4.43 2.140 16.70  0  1    5 #> Lotus Europa   data_01 30.4   4  95.1 113 3.77 1.513 16.90  1  1    5 #> Volvo 142E     data_01 21.4   4 121.0 109 4.11 2.780 18.60  1  1    4 #> Mazda RX4      data_02 21.0   6 160.0 110 3.90 2.620 16.46  0  1    4 #> Mazda RX4 Wag  data_02 21.0   6 160.0 110 3.90 2.875 17.02  0  1    4 #> Hornet 4 Drive data_02 21.4   6 258.0 110 3.08 3.215 19.44  1  0    3 #> Valiant        data_02 18.1   6 225.0 105 2.76 3.460 20.22  1  0    3 #> Merc 280       data_02 19.2   6 167.6 123 3.92 3.440 18.30  1  0    4 #> Merc 280C      data_02 17.8   6 167.6 123 3.92 3.440 18.90  1  0    4 #> Ferrari Dino   data_02 19.7   6 145.0 175 3.62 2.770 15.50  0  1    5 #>                carb #> Datsun 710        1 #> Merc 240D         2 #> Merc 230          2 #> Fiat 128          1 #> Honda Civic       2 #> Toyota Corolla    1 #> Toyota Corona     1 #> Fiat X1-9         1 #> Porsche 914-2     2 #> Lotus Europa      2 #> Volvo 142E        2 #> Mazda RX4         4 #> Mazda RX4 Wag     4 #> Hornet 4 Drive    1 #> Valiant           1 #> Merc 280          4 #> Merc 280C         4 #> Ferrari Dino      6 bind_union(spl[[1L]], spl[[2L]], spl[[3L]]) #>                        data  mpg cyl  disp  hp drat    wt  qsec vs am #> Datsun 710          data_01 22.8   4 108.0  93 3.85 2.320 18.61  1  1 #> Merc 240D           data_01 24.4   4 146.7  62 3.69 3.190 20.00  1  0 #> Merc 230            data_01 22.8   4 140.8  95 3.92 3.150 22.90  1  0 #> Fiat 128            data_01 32.4   4  78.7  66 4.08 2.200 19.47  1  1 #> Honda Civic         data_01 30.4   4  75.7  52 4.93 1.615 18.52  1  1 #> Toyota Corolla      data_01 33.9   4  71.1  65 4.22 1.835 19.90  1  1 #> Toyota Corona       data_01 21.5   4 120.1  97 3.70 2.465 20.01  1  0 #> Fiat X1-9           data_01 27.3   4  79.0  66 4.08 1.935 18.90  1  1 #> Porsche 914-2       data_01 26.0   4 120.3  91 4.43 2.140 16.70  0  1 #> Lotus Europa        data_01 30.4   4  95.1 113 3.77 1.513 16.90  1  1 #> Volvo 142E          data_01 21.4   4 121.0 109 4.11 2.780 18.60  1  1 #> Mazda RX4           data_02 21.0   6 160.0 110 3.90 2.620 16.46  0  1 #> Mazda RX4 Wag       data_02 21.0   6 160.0 110 3.90 2.875 17.02  0  1 #> Hornet 4 Drive      data_02 21.4   6 258.0 110 3.08 3.215 19.44  1  0 #> Valiant             data_02 18.1   6 225.0 105 2.76 3.460 20.22  1  0 #> Merc 280            data_02 19.2   6 167.6 123 3.92 3.440 18.30  1  0 #> Merc 280C           data_02 17.8   6 167.6 123 3.92 3.440 18.90  1  0 #> Ferrari Dino        data_02 19.7   6 145.0 175 3.62 2.770 15.50  0  1 #> Hornet Sportabout   data_03 18.7   8 360.0 175 3.15 3.440 17.02  0  0 #> Duster 360          data_03 14.3   8 360.0 245 3.21 3.570 15.84  0  0 #> Merc 450SE          data_03 16.4   8 275.8 180 3.07 4.070 17.40  0  0 #> Merc 450SL          data_03 17.3   8 275.8 180 3.07 3.730 17.60  0  0 #> Merc 450SLC         data_03 15.2   8 275.8 180 3.07 3.780 18.00  0  0 #> Cadillac Fleetwood  data_03 10.4   8 472.0 205 2.93 5.250 17.98  0  0 #> Lincoln Continental data_03 10.4   8 460.0 215 3.00 5.424 17.82  0  0 #> Chrysler Imperial   data_03 14.7   8 440.0 230 3.23 5.345 17.42  0  0 #> Dodge Challenger    data_03 15.5   8 318.0 150 2.76 3.520 16.87  0  0 #> AMC Javelin         data_03 15.2   8 304.0 150 3.15 3.435 17.30  0  0 #> Camaro Z28          data_03 13.3   8 350.0 245 3.73 3.840 15.41  0  0 #> Pontiac Firebird    data_03 19.2   8 400.0 175 3.08 3.845 17.05  0  0 #> Ford Pantera L      data_03 15.8   8 351.0 264 4.22 3.170 14.50  0  1 #> Maserati Bora       data_03 15.0   8 301.0 335 3.54 3.570 14.60  0  1 #>                     gear carb #> Datsun 710             4    1 #> Merc 240D              4    2 #> Merc 230               4    2 #> Fiat 128               4    1 #> Honda Civic            4    2 #> Toyota Corolla         4    1 #> Toyota Corona          3    1 #> Fiat X1-9              4    1 #> Porsche 914-2          5    2 #> Lotus Europa           5    2 #> Volvo 142E             4    2 #> Mazda RX4              4    4 #> Mazda RX4 Wag          4    4 #> Hornet 4 Drive         3    1 #> Valiant                3    1 #> Merc 280               4    4 #> Merc 280C              4    4 #> Ferrari Dino           5    6 #> Hornet Sportabout      3    2 #> Duster 360             3    4 #> Merc 450SE             3    3 #> Merc 450SL             3    3 #> Merc 450SLC            3    3 #> Cadillac Fleetwood     3    4 #> Lincoln Continental    3    4 #> Chrysler Imperial      3    4 #> Dodge Challenger       3    2 #> AMC Javelin            3    2 #> Camaro Z28             3    4 #> Pontiac Firebird       3    2 #> Ford Pantera L         5    4 #> Maserati Bora          5    8"},{"path":"https://stufield.github.io/wranglr/dev/reference/calc_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate CV Decomposition — calc_cv","title":"Calculate CV Decomposition — calc_cv","text":"Calculate appropriate within assay run variance decomposition prior calculating %CV reproducibility study assay run.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/calc_cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate CV Decomposition — calc_cv","text":"","code":"calc_cv(x)"},{"path":"https://stufield.github.io/wranglr/dev/reference/calc_cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate CV Decomposition — calc_cv","text":"x list numeric vectors, representing separate assay run, .e. technical replicate. entries vectors replicates intra-run assay variation. Important!: sure remove NAs, present, beforehand.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/calc_cv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate CV Decomposition — calc_cv","text":"named vector CV decomposition replicates.","code":""},{"path":[]},{"path":"https://stufield.github.io/wranglr/dev/reference/calc_cv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate CV Decomposition — calc_cv","text":"Stu Field","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/calc_cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate CV Decomposition — calc_cv","text":"","code":"# Example 1 example <- list(A = c(5785.1, 5005.6, 5686.3, 5990.8,                       5235.4, 5340.6, 5272.6, 5905.2),                 B = c(5708.0, 5300.7, 5339.8, 5393.0,                       5762.0, 5553.4, 6081.4, 5473.5),                 C = c(5409.4, 5353.6, 5398.0, 5631.2,                       5646.1, 5073.4, 5879.2, 5617.5)) example #> $A #> [1] 5785.1 5005.6 5686.3 5990.8 5235.4 5340.6 5272.6 5905.2 #>  #> $B #> [1] 5708.0 5300.7 5339.8 5393.0 5762.0 5553.4 6081.4 5473.5 #>  #> $C #> [1] 5409.4 5353.6 5398.0 5631.2 5646.1 5073.4 5879.2 5617.5 #>   calc_cv(example) #>       Intra       Inter       Total  #> 0.050656604 0.005763662 0.050983441   # Example 2 (dummy `simdata` example) # look at how the intra, inter, and total variance. # We assume `simdata` contains *only* replicate samples # and assume the `SiteId` represents assay \"runs\". # We can then `lapply()` over each feature, calculating # the `CVdecomp` for each and store to a data frame split_on <- simdata$SiteId  # split data site_split <- feature_matrix(simdata) |> data.frame() |>   lapply(split, f = split_on)  # iterate over list/analytes; each contains multiple (4x) \"runs\" coeffVar <- lapply(site_split, calc_cv) coeffVar <- do.call(rbind, coeffVar) |> data.frame()"},{"path":"https://stufield.github.io/wranglr/dev/reference/cast_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Table Entries to Numeric — cast_numeric","title":"Convert Table Entries to Numeric — cast_numeric","text":"Selectively convert R object numeric vector result warning. typically case character string contains symbol coerced cleanly. following rules apply conversion: characters converted warnings triggered integers never converted logical vectors always converted 0 1 factors optionally converted numeric","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/cast_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Table Entries to Numeric — cast_numeric","text":"","code":"cast_numeric(x, ...)  # S3 method for class 'character' cast_numeric(x, ...)  # S3 method for class 'factor' cast_numeric(x, ..., coerce_factor = TRUE)  # S3 method for class 'integer' cast_numeric(x, ...)  # S3 method for class 'logical' cast_numeric(x, ...)  # S3 method for class 'list' cast_numeric(x, ..., coerce_factor = TRUE)  # S3 method for class 'data.frame' cast_numeric(x, ..., coerce_factor = TRUE)"},{"path":"https://stufield.github.io/wranglr/dev/reference/cast_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Table Entries to Numeric — cast_numeric","text":"x object S3 dispatch. Usually character, data frame, tibble, named list containing convertible columns. ... Additional arguments allow extensibility S3 methods. coerce_factor logical(1). factor types converted corresponding numeric?","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/cast_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Table Entries to Numeric — cast_numeric","text":"object coerced numeric rules can followed. data frame, tibble, list returns class object function applied element (column).","code":""},{"path":[]},{"path":"https://stufield.github.io/wranglr/dev/reference/cast_numeric.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert Table Entries to Numeric — cast_numeric","text":"Stu Field","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/cast_numeric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Table Entries to Numeric — cast_numeric","text":"","code":"tbl <- tibble::tibble(   id     = 1:20,                            # NO   chr_id = as.character(1:20),              # YES   logic  = sample(c(TRUE, FALSE), 20, replace = TRUE), # YES   fact   = factor(letters[1:20]),           # YES or NO depending on coerce.factor   num    = rnorm(20),                       # YES   x      = rep(c(\"foo\", \"bar\"), each = 10), # NO   y      = c(as.character(runif(19)), NA),  # YES; only 1 NA, 5% total   z      = as.character(rnorm(20))          # YES ) cast_numeric(tbl) #> # A tibble: 20 × 8 #>       id chr_id logic  fact     num x           y         z #>  * <int>  <dbl> <dbl> <dbl>   <dbl> <chr>   <dbl>     <dbl> #>  1     1      1     1     1 -0.554  foo    0.825  -0.293    #>  2     2      2     1     2  0.629  foo    0.274   0.255    #>  3     3      3     0     3  2.07   foo    0.570  -0.553    #>  4     4      4     1     4 -1.63   foo    0.336   1.41     #>  5     5      5     1     5  0.512  foo    0.596  -0.795    #>  6     6      6     0     6 -1.86   foo    0.192  -1.57     #>  7     7      7     1     7 -0.522  foo    0.948  -1.04     #>  8     8      8     1     8 -0.0526 foo    0.542   1.02     #>  9     9      9     1     9  0.543  foo    0.545  -0.702    #> 10    10     10     0    10 -0.914  foo    0.279   0.973    #> 11    11     11     0    11  0.468  bar    0.447  -0.0768   #> 12    12     12     1    12  0.363  bar    0.372   0.893    #> 13    13     13     1    13 -1.30   bar    0.0281 -0.778    #> 14    14     14     1    14  0.738  bar    0.466   0.437    #> 15    15     15     1    15  1.89   bar    0.390   0.413    #> 16    16     16     0    16 -0.0974 bar    0.0201  0.976    #> 17    17     17     1    17 -0.936  bar    0.377   1.15     #> 18    18     18     1    18 -0.0160 bar    0.560   1.22     #> 19    19     19     0    19 -0.827  bar    0.857   0.000480 #> 20    20     20     0    20 -1.51   bar   NA       0.755"},{"path":"https://stufield.github.io/wranglr/dev/reference/center_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Center and/or Scale Data — center_scale","title":"Center and/or Scale Data — center_scale","text":"function center /scale data matrix.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/center_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Center and/or Scale Data — center_scale","text":"","code":"center_scale(data, par_tbl = NULL, feat = NULL, center = TRUE, scale = TRUE)  is_center_scaled(data)  undo_center_scale(data, feat = NULL)"},{"path":"https://stufield.github.io/wranglr/dev/reference/center_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Center and/or Scale Data — center_scale","text":"data tibble, data.frame, matrix object named data variables center /scale. matrix, contain numeric data. par_tbl tibble containing mean standard deviations use processing data. Must also contain feature column synchronize features corresponding scaling parameters. NULL, parameter table generated based data, .e. data reference. feat character(n). vector indicating variables center/scale. center logical(1). Whether variables shifted zero centered (\\(\\mu = 0\\)). scale logical(1). Whether variables scaled unit variance (\\(\\sigma = 1\\)).","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/center_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Center and/or Scale Data — center_scale","text":"center/scaled object class data. features specified feat modified.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/center_scale.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Center and/or Scale Data — center_scale","text":"is_center_scaled(): tests presence par_tbl entry attributes contains appropriate parameter information can used centering scaling data. undo_center_scale(): inverse center_scale(). Undo transformation.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/center_scale.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Center and/or Scale Data — center_scale","text":"Stu Field","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/center_scale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Center and/or Scale Data — center_scale","text":"","code":"scaled <- center_scale(mtcars) apply(feature_matrix(scaled), 2, mean) |> sum()  # mean ~ 0 #> [1] -1.653191e-15 apply(feature_matrix(scaled), 2, sd)             # sd ~ 1 #>  mpg  cyl disp   hp drat   wt qsec   vs   am gear carb  #>    1    1    1    1    1    1    1    1    1    1    1   idx <- withr::with_seed(1,   sample(1:nrow(mtcars), size = nrow(mtcars) / 2) ) train <- mtcars[idx, ] test  <- mtcars[-idx, ]  # Pass `par_tbl` as reference ft <- c(\"disp\", \"hp\", \"drat\") par <- tibble::tibble(feature = ft,                       means   = colMeans(feature_matrix(train, ft)),                       sds     = apply(feature_matrix(train, ft), 2, sd)) cs <- center_scale(test, par_tbl = par) # Logical test is_center_scaled(cs) #> [1] TRUE # Example of `undo_center_scale()`; reverse above old <- undo_center_scale(cs)  # check values are reverted all.equal(test, old) #> [1] \"Attributes: < Component “class”: Lengths (1, 2) differ (string compare on first 1) >\" #> [2] \"Attributes: < Component “class”: 1 string mismatch >\""},{"path":"https://stufield.github.io/wranglr/dev/reference/create_kfold.html","id":null,"dir":"Reference","previous_headings":"","what":"Create k-Fold Partitioning — create_kfold","title":"Create k-Fold Partitioning — create_kfold","text":"Adaptation rsample::vfold_cv() function utilities. Modified simplicity accommodate two-level stratification. 2 levels stratification can specified breaks parameter: stratification: breaks = NULL One level stratification: breaks list(1), name list element specifies stratification variable value element specifies stratification. Two level stratification: breaks list(2), list names specify stratification variables corresponding values specify stratification.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/create_kfold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create k-Fold Partitioning — create_kfold","text":"","code":"create_kfold(data, k = 10L, repeats = 1L, breaks = NULL, ...)  is.x_split(x)  analysis(object, i = NULL)  assessment(object, i = NULL)"},{"path":"https://stufield.github.io/wranglr/dev/reference/create_kfold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create k-Fold Partitioning — create_kfold","text":"data data.frame containing data subset. k integer(1). number partitions (folds) create. repeats integer(1)number times repeat k-fold partitioning. breaks Stratification control. Either NULL named list. NULL, stratification performed. See Details. ... Parameters passed stratification step. Currently limited depth. number stratification bins based min(5, floor(n / depth)), n = length(x). x R object test. object x_split object. integer(1) NULL. integer, split corresponding analysis assessment data retrieved, otherwise list data splits.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/create_kfold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create k-Fold Partitioning — create_kfold","text":"x_split object. Element data contains original data. Element splits tibble row corresponds individual split. split column contains lists named either \"analysis\" \"assessment\" containing indices data used fold category. Columns Fold Repeat provide fold repeat indices corresponding split. .x_split(): Logical. TRUE x inherits class x_split. analysis(): list data frames corresponding analysis indices. assessment(): list data frames corresponding assessment indices.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/create_kfold.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create k-Fold Partitioning — create_kfold","text":"stratification variables factor, character, discrete 5 fewer unique levels, stratification structure set NULL. example, status binary variable, breaks = list(status = NULL). stratification variable 5 unique levels, stratification structure can specified either number quantile-based stratification bins numeric vector providing bin boundaries (must fully span range stratification variable). example, continuous variable [0,1], breaks = list(x = 4) indicates stratification 4 bins, boundaries determined internally using   breaks = list(x = c(0.0, 0.25, 0.75, 1.0)) specifies 3 bin structure: [0, 0.25], (0.25, 0.75], (0.75, 1.0]. Note: lowest bin always inclusive.","code":"quantile(x, probs = seq(0.0, 1.0, length.out = 5))"},{"path":"https://stufield.github.io/wranglr/dev/reference/create_kfold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create k-Fold Partitioning — create_kfold","text":"","code":"# no stratification no_strat <- create_kfold(mtcars, k = 4L, repeats = 2L)  # stratification on 1 discrete variable sample_one <- create_kfold(mtcars, k = 4L, repeats = 2L,                            breaks = list(vs = NULL))  # stratification on 2 variables; 1 continuous + 1 discrete sample_two <- create_kfold(mtcars, k = 4L, repeats = 2L,                            breaks = list(gear = 4L, vs = NULL))  # retrieve analysis data for 2nd split an_2 <- analysis(no_strat, 2L)  # retrieve all splits an_all <- analysis(no_strat)  # retrieve assessment data for 2nd split ass_2 <- assessment(no_strat, 2L)  # retrieve all splits ass_all <- assessment(no_strat)"},{"path":"https://stufield.github.io/wranglr/dev/reference/create_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pre-processing Analysis Data — create_recipe","title":"Pre-processing Analysis Data — create_recipe","text":"Relative recipes package, recipes::recipe() recipes::prep() functions combined.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/create_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pre-processing Analysis Data — create_recipe","text":"","code":"create_recipe(   data,   feat = NULL,   log10 = TRUE,   center = TRUE,   scale = TRUE,   ... )  bake_recipe(x, data)  is.baked(data)  convert_recipe(object)"},{"path":"https://stufield.github.io/wranglr/dev/reference/create_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pre-processing Analysis Data — create_recipe","text":"data data.frame pre-processed according x. feat character(n). vector indicating variables center/scale. log10 logical(1). features data log10-transformed? center logical(1). Whether variables shifted zero centered (\\(\\mu = 0\\)). scale logical(1). Whether variables scaled unit variance (\\(\\sigma = 1\\)). ... Optional arguments form variable = function() specifying function applied specified column. Anonymous functions can used take vector input return vector equal length. See Examples. also center/scaling, ... transformation takes place center-scale step. x rcp class object instructions pre-processing. object recipe class object recipes package 3 pre-processing steps described .","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/create_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pre-processing Analysis Data — create_recipe","text":"rcp class object containing information recipe steps.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/create_recipe.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pre-processing Analysis Data — create_recipe","text":"order recipe steps always: log10-transform center scale","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/create_recipe.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Pre-processing Analysis Data — create_recipe","text":"bake_recipe(): executes recipe instructions defined via create_recipe(). .baked(): tests presence baked entry attributes, indicating data already baked via bake_recipe(). convert_recipe(): converts existing recipe object recipes package rcp object. Note conversions possible intended use case 3 step conversion: log10-transform centered scaled","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/create_recipe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pre-processing Analysis Data — create_recipe","text":"","code":"# create a pre-processing recipe rcp <- create_recipe(mtcars) rcp #> ══ Pre-processing recipe ═════════════════════════════════════════════════ #>  #> ─── Training data: #> ✓ Data containing 32 samples used in recipe #> ✓ RFU features ( n = 11 ) will be processed by: #>  #> ─── Steps: #> • log10-transformed      ✓ #> • Centered (mean = 0)    ✓ #> • Scaled (sd = 1)        ✓ #>  #> ══════════════════════════════════════════════════════════════════════════  rcp2 <- create_recipe(mtcars,                       feat = c(\"mpg\", \"disp\", \"drat\", \"wt\"),                       disp = abs,                       hp   = log10,                       qsec = function(x) round(x / 10))  # apply recipe to orig/own data set new_data <- bake_recipe(rcp, mtcars)  # Logical test is.baked(new_data) #> [1] TRUE  # converting recipes library(recipes) #>  #> Attaching package: ‘recipes’ #> The following object is masked from ‘package:stats’: #>  #>     step rec <- recipe(Species ~ ., data = iris) |>   step_log(all_predictors(), base = 10) |>   step_center(all_predictors()) |>   step_scale(all_predictors()) |>   prep()  convert_recipe(rec) #> ══ Pre-processing recipe ═════════════════════════════════════════════════ #>  #> ─── Training data: #> ✓ Data containing 150 samples used in recipe #> ✓ RFU features ( n = 4 ) will be processed by: #>  #> ─── Steps: #> • log10-transformed      ✓ #> • Centered (mean = 0)    ✓ #> • Scaled (sd = 1)        ✓ #>  #> ══════════════════════════════════════════════════════════════════════════"},{"path":"https://stufield.github.io/wranglr/dev/reference/create_summ_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Create A Summary Table — create_summ_tbl","title":"Create A Summary Table — create_summ_tbl","text":"Create summary table feature data based grouping variable meta data. Defaults summary statistics include: min median mean sd  (standard deviation) mad (median absolute deviation) max","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/create_summ_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create A Summary Table — create_summ_tbl","text":"","code":"create_summ_tbl(   data,   group_var,   .funs = c(\"min\", \"median\", \"mean\", \"sd\", \"mad\", \"max\") )"},{"path":"https://stufield.github.io/wranglr/dev/reference/create_summ_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create A Summary Table — create_summ_tbl","text":"data data.frame tibble object containing data summary. group_var character(1). unquoted (quoted) string containing indices group statistics, e.g. Group. missing, ungrouped statistics returned. .funs character(n). String(s) functions used summarize data. function must take vector data input return summary scalar, e.g. mean().","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/create_summ_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create A Summary Table — create_summ_tbl","text":"tibble object rows (features) columns summary statistics listed .funs.","code":""},{"path":[]},{"path":"https://stufield.github.io/wranglr/dev/reference/create_summ_tbl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create A Summary Table — create_summ_tbl","text":"Stu Field","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/create_summ_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create A Summary Table — create_summ_tbl","text":"","code":"create_summ_tbl(simdata) #> # A tibble: 40 × 7 #>    Feature       min median  mean    sd   mad   max #>    <chr>       <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 seq.2802.68 1393.  2805. 2798.  515.  495. 4325. #>  2 seq.9251.29 1598.  2801. 2807.  546.  624. 3986. #>  3 seq.1942.70 1543.  2668. 2710.  556.  603. 3882. #>  4 seq.5751.80 1496   2727. 2739.  561.  576. 3948. #>  5 seq.9608.12 1056.  2708. 2753.  642.  553. 4905. #>  6 seq.3459.49 1232.  2496. 2500.  504.  528. 3800. #>  7 seq.3865.56  865.  2487. 2500   501.  526. 3631. #>  8 seq.3363.21 1179.  2489. 2500.  493.  477. 3999. #>  9 seq.4487.88 1304.  2501. 2500   509.  465. 3752. #> 10 seq.5994.84 1297   2508. 2500.  509.  498. 4231. #> # ℹ 30 more rows create_summ_tbl(simdata, gender) #> # A tibble: 40 × 13 #>    Feature   min_F min_M median_F median_M mean_F mean_M  sd_F  sd_M mad_F #>    <chr>     <dbl> <dbl>    <dbl>    <dbl>  <dbl>  <dbl> <dbl> <dbl> <dbl> #>  1 seq.2802… 1393. 1765.    2710.    2891.  2730.  2869.  568.  449.  433. #>  2 seq.9251… 1738. 1598.    2758     2824.  2736.  2881.  535.  553.  598. #>  3 seq.1942… 1543. 1668.    2594.    2714.  2658.  2765.  580.  529.  576. #>  4 seq.5751… 1766. 1496     2651.    2783.  2697.  2782.  546.  580.  618. #>  5 seq.9608… 1056. 1357.    2854.    2501.  2914.  2585.  671.  571.  598. #>  6 seq.3459… 1461. 1232.    2434.    2610   2446.  2556.  529.  475.  486. #>  7 seq.3865… 1607.  865.    2497.    2486   2545.  2453.  506.  498.  486. #>  8 seq.3363… 1179. 1536.    2493.    2484.  2511.  2489.  543.  441.  490. #>  9 seq.4487… 1304. 1455.    2514.    2487.  2501.  2499.  549.  469.  479. #> 10 seq.5994… 1527. 1297     2524.    2468.  2509.  2490.  549.  470.  514. #> # ℹ 30 more rows #> # ℹ 3 more variables: mad_M <dbl>, max_F <dbl>, max_M <dbl>  # Arbitrary 3 groupings simdata$group <- sample(1:3, nrow(simdata), replace = TRUE) create_summ_tbl(simdata, \"group\") #> # A tibble: 40 × 19 #>    Feature     min_1 min_2 min_3 median_1 median_2 median_3 mean_1 mean_2 #>    <chr>       <dbl> <dbl> <dbl>    <dbl>    <dbl>    <dbl>  <dbl>  <dbl> #>  1 seq.2802.68 1393. 2082. 1798.    2702.    2880.    2799.  2721.  2871. #>  2 seq.9251.29 1862. 1598. 1873.    2819.    2812.    2760.  2821.  2820. #>  3 seq.1942.70 2159. 1543. 1680.    2831.    2611.    2558.  2810.  2687. #>  4 seq.5751.80 1496  1766. 1808.    2737.    2633.    2774.  2756.  2687. #>  5 seq.9608.12 1056. 1500. 1907.    2596     2756     2693.  2696.  2817. #>  6 seq.3459.49 1461. 1232. 1508.    2517.    2570.    2396.  2580.  2490. #>  7 seq.3865.56  865. 1819. 1607.    2668.    2486.    2433.  2568.  2518. #>  8 seq.3363.21 1984. 1179. 1627.    2603.    2549.    2445.  2647.  2443. #>  9 seq.4487.88 1455. 1448  1304.    2378.    2619     2501.  2512.  2556. #> 10 seq.5994.84 1625  1297  1566.    2420.    2508.    2502.  2512.  2500. #> # ℹ 30 more rows #> # ℹ 10 more variables: mean_3 <dbl>, sd_1 <dbl>, sd_2 <dbl>, sd_3 <dbl>, #> #   mad_1 <dbl>, mad_2 <dbl>, mad_3 <dbl>, max_1 <dbl>, max_2 <dbl>, #> #   max_3 <dbl>"},{"path":"https://stufield.github.io/wranglr/dev/reference/distinct_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Select Distinct Rows — distinct_rows","title":"Select Distinct Rows — distinct_rows","text":"Extract distinct rows selection variables. Additional arguments allow specification variables combined checked uniqueness.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/distinct_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select Distinct Rows — distinct_rows","text":"","code":"distinct_rows(x, ...)"},{"path":"https://stufield.github.io/wranglr/dev/reference/distinct_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select Distinct Rows — distinct_rows","text":"x data frame tibble object. ... Additional arguments dplyr::select().","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/distinct_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select Distinct Rows — distinct_rows","text":"data frame tibble object, class x.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/distinct_rows.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Select Distinct Rows — distinct_rows","text":"Stu Field","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/distinct_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select Distinct Rows — distinct_rows","text":"","code":"withr::with_seed(111, {   df <- tibble::tibble(     a_ie = sample(letters[1:3L], 20, replace = TRUE),     b_ie = sample(1:3, 20, replace = TRUE),     var  = runif(20)   ) }) df #> # A tibble: 20 × 3 #>    a_ie   b_ie      var #>    <chr> <int>    <dbl> #>  1 b         3 0.548    #>  2 c         1 0.576    #>  3 c         3 0.456    #>  4 c         1 0.0966   #>  5 a         1 0.806    #>  6 c         3 0.000925 #>  7 a         1 0.467    #>  8 c         3 0.173    #>  9 b         3 0.259    #> 10 a         2 0.919    #> 11 a         1 0.232    #> 12 a         1 0.0526   #> 13 b         3 0.304    #> 14 c         2 0.0117   #> 15 b         2 0.301    #> 16 b         1 0.878    #> 17 a         1 0.665    #> 18 c         1 0.454    #> 19 a         2 0.0533   #> 20 c         1 0.631     distinct_rows(df, a_ie, b_ie) #> # A tibble: 8 × 3 #>   a_ie   b_ie    var #>   <chr> <int>  <dbl> #> 1 b         3 0.548  #> 2 c         1 0.576  #> 3 c         3 0.456  #> 4 a         1 0.806  #> 5 a         2 0.919  #> 6 c         2 0.0117 #> 7 b         2 0.301  #> 8 b         1 0.878   # or with tidyselect-helpers distinct_rows(df, ends_with(\"ie\")) #> # A tibble: 8 × 3 #>   a_ie   b_ie    var #>   <chr> <int>  <dbl> #> 1 b         3 0.548  #> 2 c         1 0.576  #> 3 c         3 0.456  #> 4 a         1 0.806  #> 5 a         2 0.919  #> 6 c         2 0.0117 #> 7 b         2 0.301  #> 8 b         1 0.878"},{"path":"https://stufield.github.io/wranglr/dev/reference/feature_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Select the Feature Matrix — feature_matrix","title":"Select the Feature Matrix — feature_matrix","text":"Selects feature (variables) data data.frame object returns data matrix feature (usually numeric) data. Particularly useful selecting prior stats::predict() methods require named, numeric data matrix input.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/feature_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select the Feature Matrix — feature_matrix","text":"","code":"feature_matrix(data, feat = NULL)"},{"path":"https://stufield.github.io/wranglr/dev/reference/feature_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select the Feature Matrix — feature_matrix","text":"data data.frame object containing numeric feature data. feat charcter(n). vector column names corresponding features.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/feature_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select the Feature Matrix — feature_matrix","text":"numeric data.matrix object containing data matrix values features.","code":""},{"path":[]},{"path":"https://stufield.github.io/wranglr/dev/reference/feature_matrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Select the Feature Matrix — feature_matrix","text":"Stu Field","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/feature_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select the Feature Matrix — feature_matrix","text":"","code":"dim(simdata) #> [1] 100  55 class(simdata) #> [1] \"soma_adat\"  \"data.frame\"  feature_matrix(simdata) |> dim() #> [1] 100  40 feature_matrix(simdata) |> class() #> [1] \"matrix\" \"array\""},{"path":"https://stufield.github.io/wranglr/dev/reference/get_recipe_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Parameters From A Recipe — get_recipe_params","title":"Get Parameters From A Recipe — get_recipe_params","text":"Get mean standard deviations used center/scale data prepped recipe.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/get_recipe_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Parameters From A Recipe — get_recipe_params","text":"","code":"get_recipe_params(recipe, param)"},{"path":"https://stufield.github.io/wranglr/dev/reference/get_recipe_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Parameters From A Recipe — get_recipe_params","text":"recipe Prepped recipe rcp class object. param character(1). Possible values center scale.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/get_recipe_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Parameters From A Recipe — get_recipe_params","text":"named numeric vector means (step = 'center') standard deviations (step = scale'). Names correspond recipe predictors.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/get_recipe_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Parameters From A Recipe — get_recipe_params","text":"","code":"test  <- simdata feats <- wranglr:::get_analytes(test) rec <-  recipes::recipe(~ ., data = dplyr::select(test, dplyr::all_of(feats))) |>  recipes::step_log(recipes::all_predictors(), base = 10) |>  recipes::step_center(recipes::all_predictors()) |>  recipes::step_scale(recipes::all_predictors()) |>  recipes::prep(training = test) get_recipe_params(rec, \"scale\") #> seq.2802.68 seq.9251.29 seq.1942.70 seq.5751.80 seq.9608.12 seq.3459.49  #>  0.08495106  0.08735526  0.09188577  0.09188018  0.10634567  0.09348696  #> seq.3865.56 seq.3363.21 seq.4487.88 seq.5994.84 seq.9011.72 seq.2902.23  #>  0.09575663  0.09103747  0.09282479  0.09005451  0.08922376  0.10315964  #> seq.2260.48 seq.4936.96 seq.2277.95 seq.2953.31 seq.3032.11  seq.4330.4  #>  0.09214161  0.09374182  0.09969196  0.07875422  0.09379076  0.08887630  #> seq.4914.10  seq.3896.5  seq.5002.7  seq.3476.4 seq.1130.49 seq.6356.60  #>  0.09248241  0.08995053  0.08732796  0.09252996  0.08751564  0.09146692  #> seq.4579.40 seq.8344.24 seq.8441.53 seq.9360.55  seq.7841.8 seq.8142.63  #>  0.09139596  0.09874588  0.09255668  0.09234006  0.08733651  0.09262342  #> seq.4461.56 seq.9297.97 seq.9396.38 seq.3300.26 seq.2772.14 seq.6615.18  #>  0.08873767  0.08925680  0.08993740  0.09374001  0.08576509  0.08677730  #> seq.8797.98 seq.9879.88 seq.8993.16 seq.9373.82  #>  0.10461108  0.08302976  0.09531872  0.08283751  get_recipe_params(rec, \"center\") #> seq.2802.68 seq.9251.29 seq.1942.70 seq.5751.80 seq.9608.12 seq.3459.49  #>    3.438979    3.439728    3.423638    3.428196    3.427512    3.388480  #> seq.3865.56 seq.3363.21 seq.4487.88 seq.5994.84 seq.9011.72 seq.2902.23  #>    3.388280    3.388948    3.388497    3.388886    3.388982    3.387285  #> seq.2260.48 seq.4936.96 seq.2277.95 seq.2953.31 seq.3032.11  seq.4330.4  #>    3.388674    3.388382    3.387792    3.399252    3.381620    3.385452  #> seq.4914.10  seq.3896.5  seq.5002.7  seq.3476.4 seq.1130.49 seq.6356.60  #>    3.382065    3.385052    3.388270    3.384922    3.388647    3.382381  #> seq.4579.40 seq.8344.24 seq.8441.53 seq.9360.55  seq.7841.8 seq.8142.63  #>    3.383859    3.395858    3.381571    3.381561    3.394183    3.384688  #> seq.4461.56 seq.9297.97 seq.9396.38 seq.3300.26 seq.2772.14 seq.6615.18  #>    3.387160    3.410809    3.388310    3.387717    3.397427    3.380865  #> seq.8797.98 seq.9879.88 seq.8993.16 seq.9373.82  #>    3.390829    3.394751    3.392975    3.394166   rcp <- create_recipe(test) #> Warning: NaNs produced get_recipe_params(rec, \"center\") #> seq.2802.68 seq.9251.29 seq.1942.70 seq.5751.80 seq.9608.12 seq.3459.49  #>    3.438979    3.439728    3.423638    3.428196    3.427512    3.388480  #> seq.3865.56 seq.3363.21 seq.4487.88 seq.5994.84 seq.9011.72 seq.2902.23  #>    3.388280    3.388948    3.388497    3.388886    3.388982    3.387285  #> seq.2260.48 seq.4936.96 seq.2277.95 seq.2953.31 seq.3032.11  seq.4330.4  #>    3.388674    3.388382    3.387792    3.399252    3.381620    3.385452  #> seq.4914.10  seq.3896.5  seq.5002.7  seq.3476.4 seq.1130.49 seq.6356.60  #>    3.382065    3.385052    3.388270    3.384922    3.388647    3.382381  #> seq.4579.40 seq.8344.24 seq.8441.53 seq.9360.55  seq.7841.8 seq.8142.63  #>    3.383859    3.395858    3.381571    3.381561    3.394183    3.384688  #> seq.4461.56 seq.9297.97 seq.9396.38 seq.3300.26 seq.2772.14 seq.6615.18  #>    3.387160    3.410809    3.388310    3.387717    3.397427    3.380865  #> seq.8797.98 seq.9879.88 seq.8993.16 seq.9373.82  #>    3.390829    3.394751    3.392975    3.394166   get_recipe_params(rcp, \"scale\") #> seq.2802.68 seq.9251.29 seq.1942.70 seq.5751.80 seq.9608.12 seq.3459.49  #>  0.08495106  0.08735526  0.09188577  0.09188018  0.10634567  0.09348696  #> seq.3865.56 seq.3363.21 seq.4487.88 seq.5994.84 seq.9011.72 seq.2902.23  #>  0.09575663  0.09103747  0.09282479  0.09005451  0.08922376  0.10315964  #> seq.2260.48 seq.4936.96 seq.2277.95 seq.2953.31 seq.3032.11  seq.4330.4  #>  0.09214161  0.09374182  0.09969196  0.07875422  0.09379076  0.08887630  #> seq.4914.10  seq.3896.5  seq.5002.7  seq.3476.4 seq.1130.49 seq.6356.60  #>  0.09248241  0.08995053  0.08732796  0.09252996  0.08751564  0.09146692  #> seq.4579.40 seq.8344.24 seq.8441.53 seq.9360.55  seq.7841.8 seq.8142.63  #>  0.09139596  0.09874588  0.09255668  0.09234006  0.08733651  0.09262342  #> seq.4461.56 seq.9297.97 seq.9396.38 seq.3300.26 seq.2772.14 seq.6615.18  #>  0.08873767  0.08925680  0.08993740  0.09374001  0.08576509  0.08677730  #> seq.8797.98 seq.9879.88 seq.8993.16 seq.9373.82  #>  0.10461108  0.08302976  0.09531872  0.08283751"},{"path":"https://stufield.github.io/wranglr/dev/reference/group_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Grouping Labels — group_labels","title":"Return Grouping Labels — group_labels","text":"Returns tibble grouping labels (usually class labels) corresponding grouped_df class object.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/group_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Grouping Labels — group_labels","text":"","code":"group_labels(x)"},{"path":"https://stufield.github.io/wranglr/dev/reference/group_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Grouping Labels — group_labels","text":"x data frame, tibble grouped tibble.","code":""},{"path":[]},{"path":"https://stufield.github.io/wranglr/dev/reference/group_labels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return Grouping Labels — group_labels","text":"Stu Field","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/group_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return Grouping Labels — group_labels","text":"","code":"df <- dplyr::group_by(mtcars, cyl) class(df) #> [1] \"grouped_df\" \"tbl_df\"     \"tbl\"        \"data.frame\" dplyr::group_data(df) #> # A tibble: 3 × 2 #>     cyl       .rows #>   <dbl> <list<int>> #> 1     4        [11] #> 2     6         [7] #> 3     8        [14] dplyr::group_vars(df) #> [1] \"cyl\"  # 1 variable group_labels(df) #> # A tibble: 3 × 1 #>     cyl #>   <dbl> #> 1     4 #> 2     6 #> 3     8  # 2 variables df <- dplyr::group_by(mtcars, cyl, vs) group_labels(df) #> # A tibble: 5 × 2 #>     cyl    vs #>   <dbl> <dbl> #> 1     4     0 #> 2     4     1 #> 3     6     0 #> 4     6     1 #> 5     8     0"},{"path":"https://stufield.github.io/wranglr/dev/reference/imputeNAs.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute NAs — imputeNAs","title":"Impute NAs — imputeNAs","text":"Imputes NAs median value. Must numeric data . factor character class allowed.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/imputeNAs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute NAs — imputeNAs","text":"","code":"imputeNAs(x)"},{"path":"https://stufield.github.io/wranglr/dev/reference/imputeNAs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute NAs — imputeNAs","text":"x data.frame, matrix, numeric vector.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/imputeNAs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute NAs — imputeNAs","text":"object dimension class x NA values replaced median corresponding vector.","code":""},{"path":[]},{"path":"https://stufield.github.io/wranglr/dev/reference/imputeNAs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Impute NAs — imputeNAs","text":"Stu Field","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/imputeNAs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Impute NAs — imputeNAs","text":"","code":"adat <- simdata imputeNAs(adat) #>             id class_response reg_response       time status SampleId #> 51966571_1 001        control  -366.358530 0.17938352      1      001 #> 28704098_1 002        control   619.948320 0.16790617      1      002 #> 81969215_1 003        control   132.687007 2.84663191      1      003 #> 68668418_1 004        control  -731.871589 0.06264351      1      004 #> 38935826_1 005        control  -478.352170 0.74376815      1      005 #> 74703475_1 006        control  1058.027731 0.45642321      0      006 #> 36178605_1 007        control  -397.326624 0.26077075      1      007 #> 93904282_1 008        control  1255.940199 1.67379540      0      008 #> 79223225_1 009        control  -148.889393 2.69187321      0      009 #> 68004202_1 010        control   -48.586856 2.05521107      1      010 #> 51134040_1 011        control    48.805940 2.37070639      0      011 #> 18037091_1 012        control     1.539332 1.09891326      0      012 #> 48915223_1 013        control   521.891434 0.38698780      1      013 #> 59046590_1 014        control  -591.406271 0.35353969      0      014 #> 22440191_1 015        control   377.668511 0.60909382      1      015 #> 93503102_1 016        control   223.590179 0.24184832      0      016 #> 10117155_1 017        control    65.130025 0.84508708      1      017 #> 33801297_1 018        control   369.143664 1.74198131      1      018 #> 34887902_1 019        control   690.762266 0.40544055      1      019 #> 56899633_1 020        control    47.792071 0.03857401      0      020 #> 30132003_1 021        control   409.345075 0.01348947      1      021 #> 46713227_1 022        control   567.176472 0.03049982      1      022 #> 65338817_1 023        control  -263.844274 0.25094150      1      023 #> 29347638_1 024        control   170.583015 0.29549647      1      024 #> 69694117_1 025        control   186.122261 0.20317024      1      025 #> 97975242_1 026        control   768.928966 2.57088188      1      026 #> 18797344_1 027        control  -180.631160 1.20413797      0      027 #> 65073939_1 028        control   397.612384 0.93024509      1      028 #> 57485678_1 029        control   936.614710 0.36478432      1      029 #> 83562904_1 030        control  -303.143049 4.05929715      0      030 #> 28728820_1 031        control  -594.032425 0.65710657      0      031 #> 66083414_1 032        control    52.433887 2.19800882      0      032 #> 94112835_1 033        control   329.986005 6.00000000      0      033 #> 26463627_1 034        control    61.624509 6.00000000      0      034 #> 45366525_1 035        control    27.328429 6.00000000      0      035 #> 40869963_1 036        control  1059.778769 0.91009484      1      036 #> 94637211_1 037        control  -243.647544 0.08909227      1      037 #> 95354565_1 038        control   366.942422 1.46872076      1      038 #> 46557342_1 039        control   552.385804 0.42474271      1      039 #> 76936509_1 040        control   308.884189 0.21813831      1      040 #> 91024793_1 041        control   563.661951 1.08514556      1      041 #> 35984450_1 042        control  1278.191185 2.62817379      1      042 #> 54659281_1 043        control   863.139311 0.89050075      0      043 #> 88834253_1 044        control   414.076764 1.21578473      1      044 #> 41009299_1 045        control   368.000629 6.00000000      0      045 #> 33721484_1 046        control  -247.114664 2.34236305      1      046 #> 55789326_1 047        control   256.476993 0.12957692      1      047 #> 25885578_1 048        control   847.788656 1.19069573      1      048 #> 96338158_1 049        control  -111.054888 0.15712049      0      049 #> 19400953_1 050        control   619.894703 3.65505721      1      050 #> 22069839_1 051        disease    21.935977 1.59762411      1      051 #> 16041777_1 052        disease  -318.784940 5.57928833      0      052 #> 23001489_1 053        disease   210.524166 2.33091910      1      053 #> 41068710_1 054        disease  -396.765845 0.04459283      0      054 #> 97703295_1 055        disease   463.475918 6.00000000      0      055 #> 35274802_1 056        disease    43.923120 0.16127635      1      056 #> 75398329_1 057        disease -1013.176358 0.01117662      0      057 #> 42005783_1 058        disease   631.805876 1.79550186      0      058 #> 11949409_1 059        disease   978.133900 0.21124236      1      059 #> 87556508_1 060        disease  -979.031872 4.23236262      1      060 #> 94064776_1 061        disease  1311.695886 1.37694509      1      061 #> 99784020_1 062        disease   323.618907 0.32004800      0      062 #> 84916413_1 063        disease  -467.051325 4.26811450      1      063 #> 68369767_1 064        disease  -771.793855 1.05232750      1      064 #> 15409464_1 065        disease   305.209525 1.14096845      1      065 #> 14727850_1 066        disease   280.023987 0.07449288      1      066 #> 29761404_1 067        disease  -397.568212 3.58416693      1      067 #> 21873937_1 068        disease   745.017674 0.36873582      0      068 #> 90667501_1 069        disease   212.400450 0.30180726      1      069 #> 38278439_1 070        disease   331.981087 4.05281688      1      070 #> 69925630_1 071        disease   456.971156 0.12681748      1      071 #> 54693511_1 072        disease   365.901283 0.29483695      0      072 #> 82074546_1 073        disease  -107.961320 0.37617684      1      073 #> 70477393_1 074        disease   520.955153 1.79466564      0      074 #> 31800607_1 075        disease    94.471364 0.97628145      1      075 #> 65263757_1 076        disease   350.170751 2.74479286      1      076 #> 52672763_1 077        disease  -190.205458 1.13856230      1      077 #> 92815264_1 078        disease   357.325543 4.32927442      1      078 #> 71305641_1 079        disease   476.398020 0.76171477      1      079 #> 88325979_1 080        disease   369.306029 1.38864233      1      080 #> 67769607_1 081        disease   288.647017 6.00000000      0      081 #> 71016048_1 082        disease    -8.869702 0.99076989      1      082 #> 34248161_1 083        disease  -519.153727 0.39097012      0      083 #> 83316951_1 084        disease   511.753572 0.65128739      0      084 #> 63149125_1 085        disease   889.654110 1.71963200      1      085 #> 35094240_1 086        disease  -194.944530 0.05443740      0      086 #> 45697493_1 087        disease  1188.484966 2.27756562      1      087 #> 36965772_1 088        disease  -281.987158 0.06461511      0      088 #> 75692351_1 089        disease   -64.469201 1.71840883      1      089 #> 32994766_1 090        disease  -481.272710 0.37202070      1      090 #> 12262397_1 091        disease   706.061216 1.97756977      1      091 #> 74369248_1 092        disease   -69.400393 0.58784590      1      092 #> 32815252_1 093        disease  -271.458819 3.42300521      1      093 #> 62668101_1 094        disease   371.819090 4.02834213      1      094 #> 65054205_1 095        disease    60.341213 0.72030714      0      095 #> 29655282_1 096        disease   444.759910 2.04826263      1      096 #> 64533397_1 097        disease  -322.819543 4.79924684      1      097 #> 52258642_1 098        disease   531.329183 4.31557334      1      098 #> 33494702_1 099        disease   484.857000 0.11999613      1      099 #> 43721936_1 100        disease   414.117589 3.65114312      1      100 #>             SlideId Subarray    SiteId age gender HybControlNormScale #> 51966571_1 51966571        1  Isengard  56      M           0.6687581 #> 28704098_1 28704098        1 Rivendell  40      F           1.9342019 #> 81969215_1 81969215        1     Shire  19      F           0.8500042 #> 68668418_1 68668418        1     Rohan  59      M           0.8109994 #> 38935826_1 38935826        1    Mordor  21      M           2.0235602 #> 74703475_1 74703475        1    Mordor  41      F           2.0788480 #> 36178605_1 36178605        1     Rohan  20      M           0.4692595 #> 93904282_1 93904282        1    Mordor  22      M           0.5557886 #> 79223225_1 79223225        1  Isengard  50      F           0.9854340 #> 68004202_1 68004202        1  Isengard  39      F           0.4800973 #> 51134040_1 51134040        1    Mordor  37      M           1.7756260 #> 18037091_1 18037091        1  Isengard  25      M           1.2289821 #> 48915223_1 48915223        1     Shire  63      M           0.9798411 #> 59046590_1 59046590        1     Shire  18      F           0.9060018 #> 22440191_1 22440191        1     Shire  40      F           0.5661948 #> 93503102_1 93503102        1     Rohan  49      M           2.0030241 #> 10117155_1 10117155        1 Rivendell  53      M           1.6642666 #> 33801297_1 33801297        1  Isengard  31      M           2.4339930 #> 34887902_1 34887902        1    Mordor  63      M           0.5403746 #> 56899633_1 56899633        1  Isengard  53      F           0.9332586 #> 30132003_1 30132003        1    Mordor  45      M           1.4481293 #> 46713227_1 46713227        1     Shire  29      M           0.6111657 #> 65338817_1 65338817        1     Rohan  30      M           1.8143705 #> 29347638_1 29347638        1     Shire  54      F           1.3149467 #> 69694117_1 69694117        1 Rivendell  62      F           1.2816271 #> 97975242_1 97975242        1 Rivendell  34      F           1.0792600 #> 18797344_1 18797344        1 Rivendell  26      F           0.6114874 #> 65073939_1 65073939        1 Rivendell  32      M           0.6450591 #> 57485678_1 57485678        1     Shire  76      M           1.6141793 #> 83562904_1 83562904        1  Isengard  68      F           0.9410562 #> 28728820_1 28728820        1 Rivendell  75      M           0.7930269 #> 66083414_1 66083414        1    Mordor  57      F           0.8097385 #> 94112835_1 94112835        1     Shire  55      F           0.7725525 #> 26463627_1 26463627        1  Isengard  36      F           1.9137944 #> 45366525_1 45366525        1  Isengard  76      M           1.1196075 #> 40869963_1 40869963        1  Isengard  33      F           1.1286664 #> 94637211_1 94637211        1    Mordor  25      F           0.4649681 #> 95354565_1 95354565        1     Rohan  77      F           2.1177481 #> 46557342_1 46557342        1 Rivendell  42      M           2.1399950 #> 76936509_1 76936509        1 Rivendell  77      M           2.1191111 #> 91024793_1 91024793        1 Rivendell  25      F           0.5702240 #> 35984450_1 35984450        1 Rivendell  64      F           0.7470255 #> 54659281_1 54659281        1  Isengard  20      M           0.4772654 #> 88834253_1 88834253        1  Isengard  19      F           2.0762276 #> 41009299_1 41009299        1    Mordor  40      F           1.7784957 #> 33721484_1 33721484        1     Shire  27      M           0.4781957 #> 55789326_1 55789326        1     Shire  78      M           0.5659031 #> 25885578_1 25885578        1  Isengard  51      F           1.5066016 #> 96338158_1 96338158        1     Rohan  61      F           0.7437863 #> 19400953_1 19400953        1  Isengard  61      F           1.4470800 #> 22069839_1 22069839        1    Mordor  53      M           0.9707410 #> 16041777_1 16041777        1    Mordor  73      M           2.0855649 #> 23001489_1 23001489        1 Rivendell  20      M           1.1102863 #> 41068710_1 41068710        1     Rohan  70      M           0.8432067 #> 97703295_1 97703295        1    Mordor  56      M           1.0737715 #> 35274802_1 35274802        1     Rohan  79      M           1.7568511 #> 75398329_1 75398329        1  Isengard  23      F           1.1287563 #> 42005783_1 42005783        1 Rivendell  52      M           0.7266363 #> 11949409_1 11949409        1     Shire  68      M           2.1992974 #> 87556508_1 87556508        1     Shire  76      F           1.6989137 #> 94064776_1 94064776        1     Rohan  80      F           0.4473520 #> 99784020_1 99784020        1    Mordor  50      F           0.7241925 #> 84916413_1 84916413        1     Shire  53      F           2.1386117 #> 68369767_1 68369767        1    Mordor  54      F           1.6066611 #> 15409464_1 15409464        1 Rivendell  22      M           0.8018099 #> 14727850_1 14727850        1     Shire  59      F           1.7758474 #> 29761404_1 29761404        1  Isengard  23      F           0.8784832 #> 21873937_1 21873937        1 Rivendell  56      M           0.4149355 #> 90667501_1 90667501        1 Rivendell  18      M           1.7321902 #> 38278439_1 38278439        1    Mordor  67      F           0.4513353 #> 69925630_1 69925630        1  Isengard  67      M           0.6218382 #> 54693511_1 54693511        1 Rivendell  49      M           1.8017714 #> 82074546_1 82074546        1     Rohan  60      M           0.7622283 #> 70477393_1 70477393        1  Isengard  77      F           1.9670845 #> 31800607_1 31800607        1 Rivendell  61      M           0.6560524 #> 65263757_1 65263757        1  Isengard  40      M           0.5731941 #> 52672763_1 52672763        1    Mordor  76      F           0.5753140 #> 92815264_1 92815264        1  Isengard  54      F           0.8714542 #> 71305641_1 71305641        1 Rivendell  20      F           2.1855410 #> 88325979_1 88325979        1  Isengard  56      M           1.7953168 #> 67769607_1 67769607        1    Mordor  75      F           0.5256544 #> 71016048_1 71016048        1     Shire  21      F           0.8495099 #> 34248161_1 34248161        1  Isengard  80      F           1.0181898 #> 83316951_1 83316951        1     Shire  51      F           0.8925308 #> 63149125_1 63149125        1     Shire  65      F           1.7510944 #> 35094240_1 35094240        1  Isengard  34      M           1.3152895 #> 45697493_1 45697493        1     Shire  19      F           1.6122018 #> 36965772_1 36965772        1     Shire  58      M           0.7502424 #> 75692351_1 75692351        1 Rivendell  51      M           0.6467586 #> 32994766_1 32994766        1 Rivendell  21      F           0.4591955 #> 12262397_1 12262397        1    Mordor  33      M           1.7918281 #> 74369248_1 74369248        1  Isengard  28      F           1.1108191 #> 32815252_1 32815252        1    Mordor  63      M           0.6682448 #> 62668101_1 62668101        1    Mordor  43      M           0.7472938 #> 65054205_1 65054205        1     Rohan  67      F           1.0610141 #> 29655282_1 29655282        1    Mordor  61      M           0.4070036 #> 64533397_1 64533397        1     Shire  27      F           0.9686046 #> 52258642_1 52258642        1     Rohan  19      F           0.9180056 #> 33494702_1 33494702        1     Rohan  39      M           1.2199588 #> 43721936_1 43721936        1    Mordor  76      F           1.7706666 #>            NormScale_40 NormScale_0_005 NormScale_1 seq.2802.68 #> 51966571_1    1.8977914       0.5510880   0.4316258      2186.8 #> 28704098_1    0.5486117       0.9991240   0.5249539      2591.8 #> 81969215_1    0.7303309       0.4749328   0.5173271      2082.2 #> 68668418_1    0.9150234       0.5462104   1.4652089      3297.6 #> 38935826_1    0.4714962       0.5765177   0.7677587      2664.8 #> 74703475_1    0.7958873       1.2270788   1.0426147      2089.8 #> 36178605_1    0.8878818       0.8771649   2.1669951      2743.7 #> 93904282_1    0.8090488       1.5859510   0.9810348      2869.2 #> 79223225_1    0.8350034       0.4550038   0.5446087      2787.9 #> 68004202_1    1.8692704       1.8277151   1.6157940      2347.3 #> 51134040_1    1.5700662       1.2384780   1.3697496      3255.9 #> 18037091_1    0.5690058       1.4721471   2.1938602      2694.9 #> 48915223_1    1.5530041       1.4052996   1.8017545      2189.4 #> 59046590_1    0.7116108       2.0980595   0.8787269      1392.7 #> 22440191_1    0.5740497       1.0512883   1.1969357      3062.5 #> 93503102_1    0.5603863       0.4237175   0.7158650      2477.5 #> 10117155_1    0.6145297       1.2315381   0.8297476      2491.9 #> 33801297_1    0.5994277       0.4297792   2.3574975      2971.9 #> 34887902_1    0.9043101       2.1032705   2.4514256      2910.6 #> 56899633_1    2.3957467       0.4226262   1.9684478      2797.0 #> 30132003_1    0.7805167       0.8081675   1.0467492      2959.5 #> 46713227_1    0.7725000       0.8013179   1.0183998      2891.1 #> 65338817_1    1.3366064       0.9539156   1.1823144      2537.3 #> 29347638_1    1.3062585       0.8515563   1.2175329      1505.3 #> 69694117_1    0.6852852       1.6742044   2.2210623      2809.9 #> 97975242_1    0.5953375       0.5292483   0.4131328      2471.9 #> 18797344_1    0.4094503       0.5171408   0.7046463      2422.1 #> 65073939_1    0.5467793       0.5334354   1.3409469      1764.6 #> 57485678_1    2.1051071       1.5051524   1.0031141      2260.9 #> 83562904_1    0.7557492       0.4401761   1.3229184      2709.0 #> 28728820_1    1.3492198       1.2645423   1.2934154      3179.3 #> 66083414_1    1.9991294       2.4081095   2.0612513      2448.6 #> 94112835_1    0.6084518       0.4080271   2.4161006      2693.8 #> 26463627_1    1.5128235       2.4876635   0.4359054      2473.1 #> 45366525_1    1.1953518       0.7506631   0.4627864      1811.5 #> 40869963_1    0.4468874       0.4803878   0.4696507      2292.5 #> 94637211_1    0.6885944       1.9696700   2.0374532      2302.9 #> 95354565_1    0.8397504       1.7347271   1.4640219      2470.3 #> 46557342_1    0.4669787       1.9205994   1.6245755      3050.0 #> 76936509_1    1.1821205       0.7475338   1.4406259      2881.6 #> 91024793_1    0.7467050       0.5018319   0.8637865      2417.7 #> 35984450_1    0.7953232       0.6086084   2.0121635      2373.3 #> 54659281_1    1.9277735       0.5460819   1.0720982      2848.5 #> 88834253_1    1.3443178       0.8154008   2.0235663      2778.3 #> 41009299_1    1.8223111       0.6445314   0.4157281      2155.6 #> 33721484_1    1.5949111       1.8792440   0.4441524      2146.3 #> 55789326_1    0.6376180       0.9097808   0.4287579      2682.3 #> 25885578_1    2.4017821       2.1508376   0.4600155      2884.3 #> 96338158_1    1.3867042       1.2375893   1.0494184      2443.8 #> 19400953_1    0.6079925       1.1526422   0.7543813      2940.6 #> 22069839_1    0.5794985       1.7179557   0.4897451      3068.1 #> 16041777_1    0.8815106       0.4632374   0.9959771      3203.6 #> 23001489_1    0.4374603       0.5032618   2.2510820      2965.2 #> 41068710_1    0.7228580       0.7566437   1.4592699      2876.2 #> 97703295_1    0.8387142       2.2544367   0.8619811      3347.8 #> 35274802_1    1.5020578       1.7027729   0.4339579      3573.1 #> 75398329_1    0.6110612       0.9077030   1.3415048      1798.5 #> 42005783_1    1.5315099       0.9248395   1.6246729      3286.4 #> 11949409_1    1.2308628       0.9169315   0.7752558      3187.4 #> 87556508_1    1.9364167       1.7160714   1.3883724      2787.4 #> 94064776_1    0.4043261       1.0910113   2.2509567      3475.5 #> 99784020_1    1.2319403       2.1938794   0.4422558      2805.4 #> 84916413_1    1.4747811       1.1509465   0.5143650      2857.8 #> 68369767_1    1.1896802       1.2511581   1.0471276      3428.7 #> 15409464_1    0.7672162       2.1955839   0.6005902      3859.8 #> 14727850_1    0.9456065       0.5057598   1.0910528      3135.0 #> 29761404_1    0.8366912       0.4114276   0.4054073      2788.9 #> 21873937_1    0.5350332       0.4082586   1.8451487      2405.4 #> 90667501_1    0.5194985       2.4525675   0.6349020      2834.5 #> 38278439_1    0.9945041       1.7063888   1.0318632      2530.1 #> 69925630_1    1.1471238       1.8564287   0.5666301      2870.5 #> 54693511_1    1.7009291       0.8413793   1.2386178      3197.2 #> 82074546_1    0.6231734       2.2175381   0.8348325      2574.1 #> 70477393_1    2.3944497       2.0579852   0.9611063      4324.6 #> 31800607_1    0.9606968       0.9679947   0.5565318      3078.0 #> 65263757_1    0.4552439       0.6711795   0.8811510      3565.1 #> 52672763_1    1.0034597       0.5023806   1.0608425      1855.4 #> 92815264_1    0.4816295       0.6556569   1.1902483      3370.5 #> 71305641_1    1.4329103       2.4505974   0.9412683      2341.9 #> 88325979_1    0.8615478       0.4408286   0.6626439      3459.9 #> 67769607_1    0.8452157       1.4558284   0.7488953      3199.1 #> 71016048_1    1.1801826       1.8925982   1.5132458      2796.2 #> 34248161_1    0.7023509       0.8988669   1.6036853      3662.1 #> 83316951_1    2.3381840       0.7324480   0.7057951      2649.4 #> 63149125_1    1.8111468       0.5399757   1.3951093      2709.7 #> 35094240_1    1.3554078       2.4542748   2.2364297      2499.5 #> 45697493_1    1.7550484       0.4253552   1.8542275      2665.9 #> 36965772_1    0.6125173       0.7028809   0.4117599      3472.6 #> 75692351_1    0.4409188       2.3630621   0.4582291      3216.9 #> 32994766_1    1.7986195       0.6824833   1.9745890      3502.6 #> 12262397_1    0.7446670       0.4517726   1.0121388      2804.9 #> 74369248_1    1.2518454       0.9214535   1.8684741      3188.2 #> 32815252_1    1.2376328       2.4536312   0.8703057      3122.1 #> 62668101_1    0.8709562       1.3321447   0.6183020      2286.9 #> 65054205_1    0.7034331       0.4844343   1.5180832      3889.2 #> 29655282_1    1.3821059       2.0272198   0.8524708      3067.2 #> 64533397_1    1.1303578       0.5502213   1.9579061      3382.8 #> 52258642_1    2.0213632       1.9021509   1.2274735      3477.6 #> 33494702_1    0.4537811       0.6920954   0.9789458      2974.7 #> 43721936_1    2.4595364       1.1665982   1.4883103      2847.1 #>            seq.9251.29 seq.1942.70 seq.5751.80 seq.9608.12 seq.3459.49 #> 51966571_1      2699.1      2189.8      2725.1      2704.7      2304.2 #> 28704098_1      2194.0      2521.1      2490.7      3344.4      2826.8 #> 81969215_1      2670.6      2044.5      2341.0      3293.3      1786.5 #> 68668418_1      1935.3      2579.0      2035.3      2334.5      2564.3 #> 38935826_1      3216.5      2172.7      1756.3      1357.4      1892.5 #> 74703475_1      3490.2      3383.6      1962.4      3748.8      2952.7 #> 36178605_1      2316.4      2858.4      3000.0      2833.5      2522.5 #> 93904282_1      1977.9      2955.1      2189.4      2770.7      2985.7 #> 79223225_1      2784.9      2692.1      1807.8      2493.3      3169.0 #> 68004202_1      2432.5      3341.1      3434.6      2755.1      2323.1 #> 51134040_1      3700.8      2182.1      2712.6      2417.8      2837.9 #> 18037091_1      2480.4      2269.2      2380.7      2710.3      2944.5 #> 48915223_1      2844.9      3216.1      3029.2      2299.9      2723.8 #> 59046590_1      2514.0      2174.7      2943.2      1814.9      1460.9 #> 22440191_1      2128.4      2396.3      2190.4      2993.9      2432.0 #> 93503102_1      2594.4      2303.6      3603.1      3259.9      2667.5 #> 10117155_1      1597.5      2340.0      2372.5      2345.6      2610.0 #> 33801297_1      3232.8      2360.4      1787.8      1873.4      2034.8 #> 34887902_1      2576.6      2747.1      2427.8      2821.1      2293.5 #> 56899633_1      3586.3      2411.3      2603.8      2477.6      2512.7 #> 30132003_1      2737.8      2247.0      3654.0      1633.4      2865.2 #> 46713227_1      2145.0      3171.5      2552.9      2501.1      2382.1 #> 65338817_1      2805.4      2392.7      2728.5      2184.8      2424.5 #> 29347638_1      2033.0      2410.2      2461.4      2329.5      2699.2 #> 69694117_1      1873.2      2449.9      2333.0      1921.7      2895.3 #> 97975242_1      2645.7      2856.3      2482.6      3401.6      2457.4 #> 18797344_1      2278.4      2463.2      2893.8      2334.4      2117.7 #> 65073939_1      2500.6      2481.2      3537.6      1697.2      2684.0 #> 57485678_1      2537.2      2159.2      3013.7      2598.6      3126.6 #> 83562904_1      2205.2      2337.9      3104.0      2631.6      1727.4 #> 28728820_1      2215.7      2530.1      1884.3      2007.1      1972.8 #> 66083414_1      2432.4      2205.6      2991.9      1055.5      2338.3 #> 94112835_1      3089.0      2765.7      2610.0      2179.8      2011.0 #> 26463627_1      1738.2      1740.8      1766.4      2785.3      3253.2 #> 45366525_1      2797.0      2653.3      2760.5      2470.1      2705.9 #> 40869963_1      2666.5      1731.8      2420.6      2450.9      3800.2 #> 94637211_1      3031.5      2349.5      3232.3      2780.4      2153.3 #> 95354565_1      2347.9      2235.9      2117.0      1906.8      3395.8 #> 46557342_1      2685.0      2174.0      2284.9      3048.4      3047.1 #> 76936509_1      2633.5      2471.6      2036.9      2497.3      2698.2 #> 91024793_1      2228.7      1542.8      2411.4      2853.7      2894.6 #> 35984450_1      3103.9      3088.3      2701.0      3017.1      3711.7 #> 54659281_1      3080.2      1667.5      2134.1      2611.7      3099.8 #> 88834253_1      2850.1      2268.2      2915.2      2060.6      2434.1 #> 41009299_1      3293.4      1942.0      1896.0      3081.5      2107.1 #> 33721484_1      2779.2      2124.6      1976.0      1499.9      2390.4 #> 55789326_1      1861.7      3543.6      3220.6      2227.6      3060.7 #> 25885578_1      2213.4      2508.7      1992.1      2372.2      2828.0 #> 96338158_1      1887.7      1856.8      2706.0      2416.9      1965.1 #> 19400953_1      2263.3      1679.7      2309.5      3010.2      2188.0 #> 22069839_1      3446.8      3736.9      3537.2      3480.8      2470.7 #> 16041777_1      2476.4      3338.6      3947.8      2697.8      1324.7 #> 23001489_1      3985.7      3190.0      2698.5      2623.6      2417.1 #> 41068710_1      2808.2      2903.6      2804.6      2222.2      2455.3 #> 97703295_1      3827.1      3788.9      2791.9      2273.1      1952.3 #> 35274802_1      3756.1      3298.1      2812.2      3028.2      2377.2 #> 75398329_1      3041.5      2413.2      2816.7      3254.7      2415.8 #> 42005783_1      3283.6      2922.2      2852.2      1951.1      3309.3 #> 11949409_1      2487.7      2040.5      3720.9      2497.8      3163.8 #> 87556508_1      3161.5      2902.4      2651.2      3267.9      2107.3 #> 94064776_1      3521.8      1703.8      2805.9      2773.5      2592.4 #> 99784020_1      3049.5      3657.0      3326.3      4082.7      2168.2 #> 84916413_1      2772.9      2682.2      3562.4      3622.9      1728.4 #> 68369767_1      2672.1      2785.0      2613.9      3297.7      1777.2 #> 15409464_1      2982.0      2915.3      2746.0      3002.4      2103.9 #> 14727850_1      3534.6      3306.1      3261.8      3139.7      2927.2 #> 29761404_1      2758.0      3339.2      3508.9      2647.0      2036.9 #> 21873937_1      2939.5      3284.0      2874.4      3314.0      2997.7 #> 90667501_1      2352.9      2713.7      2285.0      3740.1      2922.6 #> 38278439_1      3247.2      2318.4      3854.6      3541.7      1865.9 #> 69925630_1      3654.0      2805.6      3717.5      2593.4      2754.1 #> 54693511_1      3748.5      3139.0      2644.8      2190.6      2511.9 #> 82074546_1      3407.4      2588.5      2967.5      2945.2      2248.2 #> 70477393_1      2065.1      2965.6      2120.3      3220.4      2499.4 #> 31800607_1      3241.0      2416.2      3284.9      3675.5      2832.7 #> 65263757_1      3228.1      2995.8      3806.2      2340.7      2087.1 #> 52672763_1      2823.3      3064.4      2181.4      3182.2      1508.2 #> 92815264_1      3085.2      2927.1      2610.2      3116.7      2876.0 #> 71305641_1      2568.0      2918.0      2679.4      3597.0      3036.0 #> 88325979_1      3339.6      3881.8      2659.4      2986.0      3520.4 #> 67769607_1      2836.4      3381.3      1983.4      2821.4      2207.0 #> 71016048_1      2215.5      3555.7      3250.5      2426.6      2762.1 #> 34248161_1      2816.3      2538.4      2234.1      2741.3      2640.9 #> 83316951_1      3682.2      3082.2      2987.5      2818.9      2189.5 #> 63149125_1      2832.9      3577.4      3296.5      4175.3      2465.0 #> 35094240_1      3366.4      2971.7      2900.9      4223.3      2912.9 #> 45697493_1      3473.3      1935.3      3446.0      2916.6      2664.6 #> 36965772_1      3002.2      3172.4      2987.1      2478.2      1714.2 #> 75692351_1      2823.8      2047.5      2676.2      2013.5      1231.8 #> 32994766_1      2735.2      2594.4      3323.2      3257.3      2493.1 #> 12262397_1      3369.8      3662.0      2783.1      2454.7      2928.8 #> 74369248_1      2468.3      3307.8      3886.3      4142.3      2574.7 #> 32815252_1      3123.1      3545.8      2990.9      2557.2      2382.4 #> 62668101_1      2855.3      3153.3      3426.4      3055.6      2156.2 #> 65054205_1      1867.6      2944.9      3102.6      4905.1      1533.3 #> 29655282_1      2295.6      2537.8      1496.0      2445.5      2748.4 #> 64533397_1      3458.0      3796.5      2316.9      3153.8      2400.6 #> 52258642_1      2904.4      3022.5      2787.9      2446.6      2072.5 #> 33494702_1      3401.6      2642.4      3118.4      3173.8      2897.6 #> 43721936_1      3943.7      3432.6      1828.6      2563.4      2756.6 #>            seq.3865.56 seq.3363.21 seq.4487.88 seq.5994.84 seq.9011.72 #> 51966571_1       865.1      1984.3      1702.9      2256.7      2240.4 #> 28704098_1      2197.1      2328.6      2591.1      2870.7      1911.3 #> 81969215_1      2400.6      2823.5      2406.5      2515.3      2805.0 #> 68668418_1      2100.2      2073.9      2304.8      2273.7      2517.0 #> 38935826_1      2323.4      2371.2      2103.2      1964.7      2553.2 #> 74703475_1      3255.8      2590.7      3185.4      4230.9      2516.7 #> 36178605_1      1343.5      2438.9      1454.8      2210.4      2649.1 #> 93904282_1      2979.9      3378.8      2735.1      2580.7      2356.0 #> 79223225_1      1729.9      2359.8      2275.5      2561.1      2592.1 #> 68004202_1      1607.2      2254.4      1303.5      2278.5      2293.3 #> 51134040_1      2668.8      2353.3      2818.3      2412.0      2107.0 #> 18037091_1      2307.6      1801.2      2737.4      2501.6      1993.3 #> 48915223_1      2870.6      2484.4      3172.2      2733.1      2180.3 #> 59046590_1      1650.1      2163.6      1701.8      1778.8      2216.5 #> 22440191_1      2655.0      2837.0      2665.0      2061.5      3438.3 #> 93503102_1      2134.8      1627.1      2468.5      2062.3      2121.7 #> 10117155_1      2252.2      3192.3      2637.4      2880.2      2005.0 #> 33801297_1      2902.6      2904.3      3215.3      2427.7      2556.5 #> 34887902_1      3264.6      2951.2      2679.8      2801.5      2586.4 #> 56899633_1      3280.8      3034.5      2795.7      2485.8      2059.3 #> 30132003_1      2164.8      2869.8      2629.9      2086.7      2132.2 #> 46713227_1      2856.1      2751.8      3310.7      3110.6      1635.4 #> 65338817_1      2106.6      2068.5      2150.1      2316.0      2760.9 #> 29347638_1      2668.5      2736.8      3302.2      2555.4      2441.6 #> 69694117_1      2670.3      1830.6      2705.8      3303.1      3075.5 #> 97975242_1      3520.4      3251.2      3751.8      2583.7      2334.1 #> 18797344_1      2944.4      2436.1      2172.7      1871.9      2989.7 #> 65073939_1      2554.7      2649.0      2164.9      2281.9      2796.1 #> 57485678_1      2385.9      3400.9      2694.3      2783.0      2991.5 #> 83562904_1      2395.0      2156.4      2875.3      2067.4      3235.2 #> 28728820_1      2137.9      2323.6      1622.4      1625.0      2082.6 #> 66083414_1      2666.6      2278.2      2211.2      2114.1      2393.9 #> 94112835_1      2126.5      2092.3      2072.4      3002.4      2943.5 #> 26463627_1      1860.0      2932.6      1586.8      2073.2      3259.4 #> 45366525_1      2625.5      1718.7      2644.0      2444.6      3761.5 #> 40869963_1      2874.9      2720.6      2608.1      2807.1      3345.8 #> 94637211_1      2470.6      1969.7      1733.6      2558.9      2586.5 #> 95354565_1      2914.3      2131.4      2654.4      2844.0      2307.8 #> 46557342_1      2486.0      2702.8      3020.9      2545.1      2400.7 #> 76936509_1      2561.1      2434.4      2249.6      1996.0      2096.5 #> 91024793_1      2393.2      2359.3      2236.5      2186.8      3001.2 #> 35984450_1      3421.6      3274.8      3462.5      3503.0      1623.3 #> 54659281_1      2959.3      3145.5      2198.9      3000.7      1988.3 #> 88834253_1      3121.3      2538.8      3373.0      2524.3      1862.9 #> 41009299_1      2486.9      2795.4      2450.2      2960.3      3011.0 #> 33721484_1      2858.6      2653.6      3523.7      2589.5      2315.4 #> 55789326_1      3130.8      2376.9      2931.2      2151.2      2288.1 #> 25885578_1      3602.9      1674.1      2993.5      2430.3      3763.4 #> 96338158_1      2384.8      2456.4      2513.8      3187.8      2096.1 #> 19400953_1      2497.4      3999.1      3064.5      3418.3      3403.5 #> 22069839_1      2129.9      2777.5      1949.1      1297.0      2532.8 #> 16041777_1      3040.0      2138.2      3135.3      2706.1      2661.1 #> 23001489_1      2486.8      2484.5      2374.6      2758.5      2640.4 #> 41068710_1      2330.0      1536.3      2913.5      2467.8      1838.1 #> 97703295_1      2075.2      2635.3      3066.7      3121.1      2407.2 #> 35274802_1      3113.0      2574.1      3030.6      2443.4      2487.0 #> 75398329_1      1995.1      2466.2      2110.1      1566.1      1921.8 #> 42005783_1      3042.2      2587.6      2268.9      2898.7      1740.2 #> 11949409_1      1625.4      2974.0      1788.7      2972.3      2023.1 #> 87556508_1      1819.3      1178.9      1910.4      2678.6      2224.5 #> 94064776_1      2463.6      2507.0      2766.1      2901.6      2970.4 #> 99784020_1      2773.7      2779.6      2336.9      2927.0      2323.8 #> 84916413_1      2041.7      2139.9      1972.1      1649.4      3344.7 #> 68369767_1      2839.5      2650.2      2190.6      2136.7      1843.4 #> 15409464_1      2185.3      2587.6      1815.6      3511.4      2907.3 #> 14727850_1      2080.7      1369.8      2401.1      3292.0      2033.0 #> 29761404_1      2236.8      1950.0      2333.9      2278.5      2647.9 #> 21873937_1      2517.4      2660.6      2271.3      2582.3      2412.0 #> 90667501_1      2419.2      2658.6      2860.1      3745.3      2971.0 #> 38278439_1      2184.6      2654.1      2374.9      2859.2      3257.7 #> 69925630_1      2696.4      2618.1      2665.8      3234.4      2278.8 #> 54693511_1      2179.5      2171.0      2223.4      2137.5      2181.5 #> 82074546_1      2884.7      2361.6      2208.4      1957.7      3000.7 #> 70477393_1      3050.1      3269.3      2866.5      2532.0      2154.7 #> 31800607_1      1955.7      2978.6      1924.7      2571.8      3349.8 #> 65263757_1      2900.5      1831.0      2571.5      2717.2      2841.6 #> 52672763_1      2171.8      2628.2      1701.6      2655.5      3245.9 #> 92815264_1      2972.7      3095.9      2674.9      1842.8      2771.3 #> 71305641_1      3630.8      2752.7      3720.1      2207.6      2316.0 #> 88325979_1      3310.5      2015.8      2971.5      2830.3      2008.1 #> 67769607_1      2588.6      2411.0      1895.0      2255.9      2429.4 #> 71016048_1      2188.9      3421.9      2300.1      2297.5      2878.7 #> 34248161_1      1895.1      2077.4      1448.0      2196.6      3304.8 #> 83316951_1      2169.3      2493.1      1972.6      2439.9      2310.6 #> 63149125_1      2712.2      3267.2      2595.4      2845.4      3264.7 #> 35094240_1      2705.4      2378.0      2380.7      2172.6      1616.1 #> 45697493_1      2040.2      3075.6      2592.0      2614.1      2483.6 #> 36965772_1      1862.6      2038.8      2487.4      1633.1      1785.8 #> 75692351_1      2846.0      2205.5      2631.0      2321.7      2121.9 #> 32994766_1      2243.6      2583.9      2450.1      1714.5      1416.6 #> 12262397_1      1897.5      2959.5      2691.8      2586.7      2635.4 #> 74369248_1      2617.5      1472.5      2987.3      1527.1      2996.3 #> 32815252_1      2195.8      2065.1      2404.4      2406.2      2488.3 #> 62668101_1      1956.4      2749.9      1806.8      2841.3      2164.5 #> 65054205_1      2658.5      1988.0      2836.2      3218.6      1549.4 #> 29655282_1      2159.4      3028.9      2430.7      2083.0      2163.9 #> 64533397_1      2806.9      2222.7      2701.2      1921.1      2484.3 #> 52258642_1      2771.7      2459.5      2726.1      1992.1      2232.7 #> 33494702_1      2837.9      2281.4      2421.9      1988.5      2837.7 #> 43721936_1      3057.7      3104.8      2979.3      2654.9      2877.4 #>            seq.2902.23 seq.2260.48 seq.4936.96 seq.2277.95 seq.2953.31 #> 51966571_1      2543.3      2775.9      2758.1      1212.2      2608.4 #> 28704098_1      3077.6      2131.6      2443.0      3062.4      2228.8 #> 81969215_1      2809.5      2075.5      1346.7      2688.0      2945.6 #> 68668418_1      2872.8      3087.1      3240.3      1722.1      2798.0 #> 38935826_1      2835.6      2302.6      2719.9      2800.1      3317.8 #> 74703475_1      3690.1      2378.7      2955.7      3081.6      2844.6 #> 36178605_1      2979.5      2528.6      2225.5      2007.9      1859.4 #> 93904282_1      2320.8      2317.3      2917.6      2181.1      2393.4 #> 79223225_1      2283.9      2681.3      2044.0      1706.9      3448.3 #> 68004202_1      2055.7      2476.5      1899.1      2314.4      3388.4 #> 51134040_1      2942.9      2917.9      3216.2      2563.9      2783.3 #> 18037091_1      2833.0      3291.2      2636.6      2908.8      2507.9 #> 48915223_1      3214.8      2965.7      3113.1      3010.7      2691.5 #> 59046590_1      2543.4      2034.2      2974.5      1649.3      2477.4 #> 22440191_1      2721.7      1480.7      2339.8      2205.6      2517.2 #> 93503102_1      2190.1      3032.0      1993.5      1270.9      2584.5 #> 10117155_1      2611.5      4059.5      2276.9      3322.4      3082.5 #> 33801297_1      2685.3      1886.1      1935.6      2829.1      2477.9 #> 34887902_1      2525.2      2112.5      2440.2      2796.6      2449.8 #> 56899633_1      2398.9      2639.1      2924.8      2601.2      2358.3 #> 30132003_1      2555.6      2873.4      2762.6      2905.5      3270.4 #> 46713227_1      2792.3      2716.9      2792.7      2557.8      2582.6 #> 65338817_1      3117.2      2143.2      2600.5      2818.6      3153.8 #> 29347638_1      2669.9      2327.2      3054.9      2805.5      3144.1 #> 69694117_1      3143.9      2686.0      3422.3      3056.0      2796.4 #> 97975242_1      1907.2      2434.3      2884.2      2349.7      2358.5 #> 18797344_1      2468.5      1260.1      2697.5      2235.2      3127.9 #> 65073939_1      2075.7      2500.4      3073.3      2999.7      2954.9 #> 57485678_1      1817.0      2758.4      2840.6      2441.3      2036.0 #> 83562904_1      2182.8      2498.2      2636.5      2119.0      3120.1 #> 28728820_1      2621.5      2531.3      2245.1      2511.0      2576.7 #> 66083414_1      2366.0      2075.2      2287.5      2345.2      3026.0 #> 94112835_1      2882.0      3247.8      2618.6      2984.8      2122.9 #> 26463627_1      2114.3      2842.0      2027.4      3002.6      1758.9 #> 45366525_1      2767.0      3135.7      2374.7      3270.0      2930.6 #> 40869963_1      2706.4      2393.7      3089.7      2214.2      2297.7 #> 94637211_1      2290.6      1756.3      2538.1      3431.2      2386.3 #> 95354565_1      2362.1      2124.7      1518.8      1993.9      2967.0 #> 46557342_1      1695.1      2028.2      3465.2      3171.1      2267.1 #> 76936509_1      1947.7      2048.5      2405.3      2138.0      2181.2 #> 91024793_1      3014.1      1999.1      3212.5      1969.2      3171.9 #> 35984450_1      1775.5      2577.3      2276.2      2802.3      2590.8 #> 54659281_1      2936.9      2780.8      1516.0      2592.8      3146.3 #> 88834253_1      3244.9      2126.9      1796.9      2575.5      1656.0 #> 41009299_1      1776.8      3409.2      2092.6      2329.0      2089.5 #> 33721484_1      2367.8      2457.8      2322.4      2142.2      2068.9 #> 55789326_1      2304.5      1701.0      1971.3      2266.8      2549.4 #> 25885578_1      2586.1      2474.8      3191.3      2999.3      2312.2 #> 96338158_1      2669.6      1165.5      2493.6      2394.1      2862.0 #> 19400953_1      2591.0      2302.9      2720.6      2699.0      1601.3 #> 22069839_1      2204.7      3173.0      3277.4      2133.5      2168.1 #> 16041777_1      2407.2      3144.7      1770.7      2784.7      2188.1 #> 23001489_1      1821.6      2619.5      2453.0      1981.5      2460.2 #> 41068710_1      2905.8      2669.6      2043.2      2280.3      2717.8 #> 97703295_1      1927.0      2667.6      2083.7      3821.0      3485.5 #> 35274802_1      2505.1      2121.2      3233.9      2458.7      2201.6 #> 75398329_1      2681.3      2395.7      2705.7      2864.8      2223.7 #> 42005783_1      2691.0      2159.8      2249.6      2499.3      2848.0 #> 11949409_1      2730.5      2159.9      2743.6      2373.4      2422.2 #> 87556508_1      3435.6      2239.9      2387.0      2873.1      3174.4 #> 94064776_1      2871.8      2053.6      2252.1      3262.4      1965.7 #> 99784020_1      2755.0      2659.7      3287.7      2894.0      3032.2 #> 84916413_1      2600.8      2803.0      1846.5      3012.1      1843.6 #> 68369767_1      1730.4      2435.4      2425.2      2312.3      3531.8 #> 15409464_1      2985.7      2365.8      1944.8      2530.0      2565.7 #> 14727850_1      2336.2      1658.2      2741.7      2003.0      2384.2 #> 29761404_1      2744.1      2980.5      2352.4      1836.6      2301.3 #> 21873937_1      2283.3      2188.4      2480.5      2781.0      2944.7 #> 90667501_1      2743.5      2333.3      2334.9      1677.1      2763.1 #> 38278439_1      2208.3      3205.5      2421.5      2830.2      2414.4 #> 69925630_1      2693.7      1988.2      2462.8      2283.3      2579.3 #> 54693511_1      2444.7      2931.9      2744.6      2472.3      2257.2 #> 82074546_1      3370.0      3433.5      2347.4      1917.7      2020.5 #> 70477393_1      3274.0      3065.6      2590.5      2360.5      2590.3 #> 31800607_1      3182.7      2777.3      2156.4       826.3      2860.9 #> 65263757_1      2117.3      3680.1      3264.5      2906.6      2315.2 #> 52672763_1      1839.4      2388.8      2776.8      2585.9      2618.8 #> 92815264_1      2049.4      1961.6      2787.2      2224.6      2167.0 #> 71305641_1      3075.7      2865.8      3592.2      2715.7      2101.6 #> 88325979_1      2793.4      3113.8      2730.2      2264.2      2474.2 #> 67769607_1       729.8      2810.4      3605.6      2149.1      3143.5 #> 71016048_1      2296.0      1950.0      3077.1      2709.5      2392.9 #> 34248161_1      2848.6      2052.2      2500.7      2605.9      2212.6 #> 83316951_1      2627.0      3051.9      2538.4      2646.4      1764.6 #> 63149125_1      1499.1      2563.7      1337.6      2620.1      1983.6 #> 35094240_1      2824.3      1905.5      2026.2      1595.3      1846.7 #> 45697493_1      2847.7      2362.9      1734.8      2393.7      2080.9 #> 36965772_1      1606.3      2704.1      2218.2      1809.6      1934.7 #> 75692351_1      2303.6      2452.6      1302.3      2296.7      2684.4 #> 32994766_1      2522.5      2489.0      2580.7      2870.5      2399.1 #> 12262397_1      1629.6      2318.9      2188.9      2709.0      1861.2 #> 74369248_1      2793.7      3024.9      2684.7      1833.1      2101.0 #> 32815252_1      2984.3      2721.6      2086.4      3055.1      2579.5 #> 62668101_1      2141.2      2482.5      2682.5      2458.9      2807.4 #> 65054205_1      1963.0      2794.9      2212.0      2574.6      2844.0 #> 29655282_1      1086.5      1980.6      2046.6      2404.8      2476.5 #> 64533397_1      1939.1      1773.3      2401.0      2515.7      3665.2 #> 52258642_1      2341.2      3224.6      1887.9      2881.6      2211.2 #> 33494702_1      2885.9      1908.9      3162.5      2799.2      2984.2 #> 43721936_1      2835.9      2635.9      1908.2      3249.2      2361.2 #>            seq.3032.11 seq.4330.4 seq.4914.10 seq.3896.5 seq.5002.7 #> 51966571_1      2842.4     3107.4      1080.2     1908.9     1677.7 #> 28704098_1      2442.4     1726.1      3255.7     2728.1     2090.0 #> 81969215_1      2321.8     2348.9      3221.2     2380.9     1660.9 #> 68668418_1      2447.1     3019.6      2752.7     2906.1     2712.1 #> 38935826_1      2522.4     2116.1      2121.4     2134.7     2325.6 #> 74703475_1      1636.9     3262.3      2624.6     1402.9     2473.8 #> 36178605_1      3277.9     1289.0      2341.6     3000.8     2362.7 #> 93904282_1      2888.2     2778.2      2551.5     3083.7     2757.7 #> 79223225_1      1950.7     3052.8      2394.2     2884.8     1847.2 #> 68004202_1      1636.0     2583.2      2635.3     3294.0     3349.6 #> 51134040_1      2713.8     2387.3      2346.5     2675.7     2248.7 #> 18037091_1      2872.3     2385.8      2944.9     2232.8     2347.5 #> 48915223_1      2932.6     2373.4      2694.0     2357.6     2172.6 #> 59046590_1      2652.7     3534.1      1362.8     2473.6     2636.8 #> 22440191_1      2443.0     3291.6      2225.0     2532.2     1637.9 #> 93503102_1      2711.8     1978.7      2665.2     2210.7     2255.2 #> 10117155_1      2101.1     2495.8      2200.9     2493.7     2432.0 #> 33801297_1      2197.9     1833.0      1869.0     2952.8     2296.5 #> 34887902_1      3357.5     2573.3      2881.6     2244.6     3276.2 #> 56899633_1      2142.0     2106.1      2920.5     2607.8     2932.7 #> 30132003_1      2433.4     2355.5      2579.1     2208.1     2674.3 #> 46713227_1      2000.1     2833.4      3023.2     1891.5     1870.8 #> 65338817_1      3436.9     2431.7      2173.6     2585.1     2737.9 #> 29347638_1      2331.3     2612.0      2019.6     2565.5     2936.5 #> 69694117_1      2986.6     3058.6      2399.4     2380.2     2228.2 #> 97975242_1      2993.9     1780.8      2846.8     2216.8     2597.2 #> 18797344_1      2029.4     2817.2      2001.0     2519.5     2699.4 #> 65073939_1      2674.6     2250.4      2000.2     1544.4     2565.3 #> 57485678_1      2202.8     3063.1      2318.3     2487.5     2202.7 #> 83562904_1      1308.9     2449.9      3028.8     2832.5     2850.9 #> 28728820_1      3039.0     1945.1      3039.5     3161.4     2423.0 #> 66083414_1      2834.1     2829.0      3119.0     4087.1     2793.0 #> 94112835_1      2017.7     2478.4      2927.1     1565.7     3083.9 #> 26463627_1      1512.4     2814.2      2093.2     1825.9     1348.7 #> 45366525_1      2207.6     2031.6      2316.1     3651.8     2910.1 #> 40869963_1      2984.6     2321.3      3058.8     2627.7     2861.1 #> 94637211_1      2776.1     2477.5      2556.9     2934.2     2548.8 #> 95354565_1      2458.9     2326.0      2277.7     2677.9     3318.8 #> 46557342_1      1661.6     2320.5      1777.1     1927.3     2230.3 #> 76936509_1      3106.3     2697.8      2307.8     2647.9     2273.7 #> 91024793_1      3000.2     2008.0      2796.6     2152.0     1878.9 #> 35984450_1      2859.7     2488.6      2622.5     3092.5     2522.1 #> 54659281_1      2077.8     2057.7      1627.1     3262.6     2503.5 #> 88834253_1      2811.0     2742.5      2531.2     2710.4     2003.2 #> 41009299_1      2138.7     2084.2      1957.0     3279.6     2857.6 #> 33721484_1      2275.3     3086.6      2446.2     3314.2     2800.1 #> 55789326_1      1902.2     2530.5      2725.6     2586.6     2472.5 #> 25885578_1      2695.2     2578.4      3047.2     2330.4     2848.9 #> 96338158_1      2241.8     2734.5      2953.0     1861.4     2907.2 #> 19400953_1      2954.9     2772.6      2001.2     2530.2     1339.7 #> 22069839_1      2938.5     2697.8      2142.1     1932.8     2056.6 #> 16041777_1      2091.9     2039.3      2711.3     2468.3     2818.5 #> 23001489_1      3269.6     2161.7      2716.5     2133.7     3249.5 #> 41068710_1      3187.3     1528.1      2542.3     3037.0     1749.4 #> 97703295_1      2258.4     2560.0      2776.0     3239.4     3845.4 #> 35274802_1      2775.2     3133.0      2231.1     1233.5     2488.2 #> 75398329_1      2071.3     1951.0      2562.9     2090.1     2379.8 #> 42005783_1      2146.5     2719.0      3001.9     2659.4     2053.0 #> 11949409_1      1451.5     2808.2      3035.9     2014.9     2728.7 #> 87556508_1      3049.7     2508.9      2274.8     2306.9     2300.3 #> 94064776_1      2671.0     1880.4      2979.2     2481.9     3083.8 #> 99784020_1      2745.4     2247.9      2952.2     2893.7     2063.3 #> 84916413_1      2034.0     3158.4      1884.3     2714.6     2782.0 #> 68369767_1      1786.1     2897.2      2354.8     2828.2     2970.1 #> 15409464_1      2987.9     2742.5      1673.9     2125.8     2016.2 #> 14727850_1      1726.8     3685.5      2518.7     2505.9     2754.3 #> 29761404_1      2508.9     2359.1      1478.7     2196.6     1874.8 #> 21873937_1      2112.6     2599.5      2555.6     3203.0     2575.0 #> 90667501_1      2385.3     2905.1      2655.6     2185.0     2652.6 #> 38278439_1      2362.8     2438.9      2180.5     2062.7     2351.4 #> 69925630_1      3398.0     3003.9      2966.4     1903.5     2067.3 #> 54693511_1      2260.9     2758.8      2363.7     2683.8     2036.2 #> 82074546_1      2202.6     2385.0      3120.9     2150.0     3606.8 #> 70477393_1      1371.0     2416.2      1969.7     2287.3     2672.1 #> 31800607_1      3341.3     1262.0      3444.1     3006.9     2635.0 #> 65263757_1      2536.1     2199.4      1916.0     2710.3     1952.0 #> 52672763_1      2280.0     2515.8      2709.5     3162.7     2070.1 #> 92815264_1      2813.3     3113.1      1673.8     3022.2     2064.1 #> 71305641_1      2100.1     2150.4      2588.5     2173.5     2050.1 #> 88325979_1      1936.0     1747.9      2428.0     1670.1     3163.7 #> 67769607_1      1987.5     2387.4      3681.4     1745.0     2763.3 #> 71016048_1      2535.5     2495.5      3108.5     2656.4     2741.5 #> 34248161_1      2690.9     1760.8      2701.6     1551.2     2580.7 #> 83316951_1      1688.7     1576.1      2818.8     2197.4     2375.7 #> 63149125_1      3450.3     2077.0      2055.5     2324.5     2102.9 #> 35094240_1      2141.9     3127.9      1842.4     1994.8     3413.9 #> 45697493_1      2690.2     1824.7      2589.1     2275.8     2909.1 #> 36965772_1      2720.4     2661.9      1788.1     2934.0     2862.7 #> 75692351_1      2628.7     2559.4      1748.2     2539.6     2406.0 #> 32994766_1      2410.3     2824.8      1962.3     2166.7     2840.0 #> 12262397_1      2154.9     2840.8      2570.9     2446.3     2757.6 #> 74369248_1      2499.8     3758.8      2631.1     2737.6     2463.0 #> 32815252_1      2782.8     2651.3      3097.0     2081.6     3059.4 #> 62668101_1      1895.6     2168.1      1656.6     2714.1     2836.8 #> 65054205_1      2326.9     2531.5      2620.0     2177.0     1878.8 #> 29655282_1      2174.9     1906.2      1937.7     2788.3     2224.5 #> 64533397_1      2055.2     2289.7      2074.9     2454.6     2876.4 #> 52258642_1      3238.5     2126.2      2330.6     2413.6     1593.3 #> 33494702_1      1902.3     2436.8      2470.1     2270.3     2357.7 #> 43721936_1      3375.2     1990.7      2423.1     2209.2     2319.8 #>            seq.3476.4 seq.1130.49 seq.6356.60 seq.4579.40 seq.8344.24 #> 51966571_1     1423.4      2780.6      2187.7      2071.7      2588.3 #> 28704098_1     2213.6      2253.7      2997.0      2916.6      3344.5 #> 81969215_1     2870.5      2964.4      1741.5      2650.7      1826.3 #> 68668418_1     2383.6      2080.4      2492.1      2519.8      3037.8 #> 38935826_1     1826.6      2819.4      1900.2      1785.4      2271.9 #> 74703475_1     2099.1      2395.7      2611.7      2811.1      2159.3 #> 36178605_1     3302.4      2407.1      2765.9      2259.8      2468.7 #> 93904282_1     3049.4      2505.9      2382.3      2338.5      3328.1 #> 79223225_1     1992.0      1643.1      2460.9      1669.8      2404.4 #> 68004202_1     2524.0      2345.0      2417.9      2747.9      2385.5 #> 51134040_1     2885.7      2176.3      2997.2      2301.2      2566.3 #> 18037091_1     2858.9      2194.2      2618.1      3143.4      2694.7 #> 48915223_1     2782.0      2643.7      2234.7      3034.5      2424.4 #> 59046590_1     2379.5      2659.7      2653.7      2884.3      2739.9 #> 22440191_1     1467.5      3212.0      2559.4      2569.2      2223.9 #> 93503102_1     3162.5      2436.4      3326.5      2455.0      2226.8 #> 10117155_1     2872.0      2875.9      1952.0      2746.2      2903.7 #> 33801297_1     2358.6      2177.5      1869.7      2977.1      2506.1 #> 34887902_1     2304.5      1748.5      2266.8      3666.6      2930.2 #> 56899633_1     2295.6      2279.2      1316.4      2515.5      1633.1 #> 30132003_1     2250.7      3174.4      2391.9      2683.9      2140.8 #> 46713227_1     2940.9      3062.4      2215.8      1931.1      2266.8 #> 65338817_1     2789.1      2840.8      3001.6      2465.5      1444.1 #> 29347638_1     2514.4      2568.9      3545.0      1822.5      3078.2 #> 69694117_1     3031.6      2396.8      1966.5      2454.7      2590.7 #> 97975242_1     2371.1      1521.6      2278.1      2468.8      2351.9 #> 18797344_1     2156.5      2655.6      2188.0      2369.2      1993.6 #> 65073939_1     1379.3      3369.1      2904.5      1938.0      2090.5 #> 57485678_1     2515.1      2557.5      2814.2      2314.7      2178.1 #> 83562904_1     2718.9      3724.6      2394.3      1728.9      2734.1 #> 28728820_1     2248.5      2200.1      2900.7      2844.2      2208.3 #> 66083414_1     2727.1      2465.2      1701.3      1803.1      2082.3 #> 94112835_1     2689.9      2871.5      3029.2      2984.2      3144.7 #> 26463627_1     1921.9      2229.9      2391.2      2647.1      1892.5 #> 45366525_1     3019.4      2577.3      2705.9      2373.7      2489.9 #> 40869963_1     3081.2      2152.8      3318.4      3056.9      2998.0 #> 94637211_1     2315.5      1852.8      2476.8      1572.5      1229.2 #> 95354565_1     2671.8      2075.6      2559.2      3284.9      2542.1 #> 46557342_1     2585.4      3256.4      3336.1      2508.7      1940.4 #> 76936509_1     2888.6      3006.6      2404.5      1760.4      3231.6 #> 91024793_1     1919.3      2978.4      2431.2      3096.8      2209.5 #> 35984450_1     2597.4      2724.1      2394.6      2184.2      3017.1 #> 54659281_1     2629.8      1999.7      2620.8      3031.8      2671.7 #> 88834253_1     2248.9      2783.7      2286.2      1734.0      2959.8 #> 41009299_1     2521.7      3584.2      2543.9      2629.8      2488.6 #> 33721484_1     1333.5      2118.4      3261.4      1963.6      2379.6 #> 55789326_1     2097.1      3693.9      2119.8      1843.5      3771.1 #> 25885578_1     2912.3      2218.9      2536.3      2205.5      2554.1 #> 96338158_1     1702.5      2881.5      1583.8      2028.5      3279.1 #> 19400953_1     3248.1      2743.8      1866.5      1621.5      2742.5 #> 22069839_1     2649.4      2220.5      2633.2      2557.0      2690.0 #> 16041777_1     2528.0      2714.2      2659.7      2399.3      2877.7 #> 23001489_1     2460.7      3020.6      2238.8      2906.0      1383.7 #> 41068710_1     2180.1      2987.4      2940.1      2937.7      2950.8 #> 97703295_1     2332.1      2068.2      2224.5      3011.0      1890.9 #> 35274802_1     2529.9      2247.6      2321.6      2821.1      2916.9 #> 75398329_1     3181.2      2859.9      3114.3      2208.3      2709.1 #> 42005783_1     2253.5      2642.8      2219.9      1791.0      2916.3 #> 11949409_1     1929.0      2207.8      1737.5      2911.0      2106.8 #> 87556508_1     2751.2      2754.5      2625.7      1611.6      2749.2 #> 94064776_1     2634.0      1997.8      3117.8      2551.5      2667.5 #> 99784020_1     3548.9      2272.6      3351.6      2662.6      3667.2 #> 84916413_1     2699.5      2333.1      1962.3      2281.2      1859.5 #> 68369767_1     3295.2      2622.3      2777.5      2785.4      2897.8 #> 15409464_1     2446.4      1897.3      1943.2      3138.2      2729.5 #> 14727850_1     2870.2      1770.3      2281.0      1563.0      2322.7 #> 29761404_1     2460.7      2687.1      2893.9      3195.5      3029.5 #> 21873937_1     2670.6      2583.1      2187.9      2350.1      3032.1 #> 90667501_1     1514.3      3198.5      2178.5      2285.2      2171.3 #> 38278439_1     2438.7      1989.8      2822.5      1301.5      2493.2 #> 69925630_1     2956.4      2644.5      2587.9      3040.2      3139.9 #> 54693511_1     2688.8      3479.4      2657.5      2073.0      2105.1 #> 82074546_1     2279.7      2508.1      2314.3      2586.7      1986.6 #> 70477393_1     3273.0      1288.3      1702.3      2291.4      2350.1 #> 31800607_1     3253.5      1755.3      1879.9      2453.3      3327.9 #> 65263757_1     2692.6      2232.8      2619.8      2377.8      1771.0 #> 52672763_1     2717.9      2458.0      3762.7      2417.0      2155.2 #> 92815264_1     1765.9      2584.4      2611.3      2050.5      2849.8 #> 71305641_1     2163.4      2400.5      1460.3      2667.2      2256.0 #> 88325979_1     1925.3      3123.9      3331.6      1275.9      2602.6 #> 67769607_1     2350.8      2716.4      1558.8      2035.2      2763.3 #> 71016048_1     2635.4      2461.8      2449.0      2855.2      2670.8 #> 34248161_1     2709.7      2430.3      2498.3      2909.2      2290.5 #> 83316951_1     2049.5      2379.4      2285.2      3407.4      2629.9 #> 63149125_1     2873.5      2102.7      2554.3      2796.4      2880.5 #> 35094240_1     3185.7      2976.7      3060.9      2249.3      2501.2 #> 45697493_1     2891.4      1974.1      1828.6      2648.7      2643.1 #> 36965772_1     1200.7      2103.7      2556.9      2376.0      2353.9 #> 75692351_1     1777.2      3698.4      2319.7      2722.2      3156.4 #> 32994766_1     2552.4      1951.9      1972.2      2379.5      2978.7 #> 12262397_1     2602.0      2666.0      3177.2      2644.3      3058.2 #> 74369248_1     2185.6      1805.9      3054.6      2671.7      2290.1 #> 32815252_1     1964.9      3107.1      1937.8      2700.3      3596.9 #> 62668101_1     2040.6      1996.9      2777.9      2542.5      2487.7 #> 65054205_1     2426.7      2217.1      2433.5      2149.6       987.9 #> 29655282_1     2841.6      2532.6      1905.0      2694.3      1883.2 #> 64533397_1     2022.9      2008.3      1876.0      3156.2      2989.1 #> 52258642_1     2382.9      1750.3      2962.3      2461.0      2343.6 #> 33494702_1     2184.5      2288.1      1474.1      2795.3      3926.7 #> 43721936_1     2706.9      1989.5      2619.7      2978.8      2375.1 #>            seq.8441.53 seq.9360.55 seq.7841.8 seq.8142.63 seq.4461.56 #> 51966571_1      1934.0      2516.7     3183.7      2022.1      2129.6 #> 28704098_1      2198.4      1770.8     2986.6      2190.0      2406.5 #> 81969215_1      2447.4      3529.1     2112.7      2433.6      2432.9 #> 68668418_1      1561.4      2449.3     2724.4      3251.9      2028.9 #> 38935826_1      2783.2      3030.0     2937.2      1823.8      2325.3 #> 74703475_1       862.9      2248.4     3356.2      2125.7      3278.4 #> 36178605_1      2127.8      2329.0     2729.3      2553.4      2412.3 #> 93904282_1      2215.3      2208.7     2227.4      2898.6      2804.2 #> 79223225_1      2583.1      2442.9     2848.4      3473.5      2370.6 #> 68004202_1      2658.9      2752.5     2535.7      2729.5      2495.3 #> 51134040_1      2619.2      1538.0     1803.0      2420.5      2282.9 #> 18037091_1      2025.4      2285.6     2591.4      1080.6      2928.0 #> 48915223_1      2514.8      3006.9     2210.5      3395.2      1795.3 #> 59046590_1      2804.6      3041.1     1791.6      1547.1      1672.4 #> 22440191_1      2010.5      2668.4     2017.3      2136.9      2056.2 #> 93503102_1      2444.7      2400.4     2483.0      2359.3      3021.7 #> 10117155_1      2425.6      2427.2     2544.1      2606.8      2485.5 #> 33801297_1      2266.3      1798.1     2378.3      1865.8      2398.1 #> 34887902_1      3067.9      3338.4     2017.1      1830.9      3100.6 #> 56899633_1      2632.0      2373.7     2907.5      1741.7      3197.1 #> 30132003_1      1883.2      2133.3     2554.2      2895.7      2981.0 #> 46713227_1      2868.6      3405.6     2518.2      2162.9      2702.6 #> 65338817_1      2724.6      2444.0     2871.8      1629.5      2194.5 #> 29347638_1      3003.9      3131.1     2464.2      3673.1      2051.8 #> 69694117_1      2282.8      2934.6     2946.8      1797.3      3057.6 #> 97975242_1      2972.7      2130.5     3339.2      2924.5      2919.9 #> 18797344_1      2030.8      3177.9     2417.2      3325.0      1540.8 #> 65073939_1      2277.0      2734.1     1896.1      2389.4      2035.6 #> 57485678_1      3423.9      2432.2     2073.4      1597.2      2958.5 #> 83562904_1      2802.8      2612.1     3214.3      2203.5      3494.8 #> 28728820_1      2919.1      2749.6     2329.3      2594.8      2492.6 #> 66083414_1      1766.5      2303.2     2117.2      2192.8      2985.1 #> 94112835_1      2379.1      2574.6     2714.0      2326.0      2585.2 #> 26463627_1      3230.6      2091.2     1360.0      2673.8      3426.2 #> 45366525_1      1717.4      1879.0     3164.3      2266.4      2758.0 #> 40869963_1      2698.4      1890.7     2008.7      1982.3      2429.5 #> 94637211_1      2661.3      1875.1     2444.5      3432.1      2702.3 #> 95354565_1      2897.1      1903.5     2347.4      2282.6      2612.5 #> 46557342_1      2326.3      2716.5     1811.4      2568.2      2851.5 #> 76936509_1      2580.5      2476.3     1799.8      2136.2      3150.8 #> 91024793_1      3007.9      3220.5     2702.2      2437.3      2806.2 #> 35984450_1      1657.1      2284.9     3039.9      3102.0      2425.2 #> 54659281_1      2747.6      2382.6     2737.8      3619.0      2098.3 #> 88834253_1      2627.1      2599.8     2981.3      2589.7      1857.1 #> 41009299_1      2633.9      2336.6     2844.2      2894.0      2772.7 #> 33721484_1      2981.1      2666.7     2513.1      2070.0      2242.2 #> 55789326_1      2388.7      2086.8     1978.4      1702.9      2247.3 #> 25885578_1      2052.0      3182.7     2603.4      2166.0      2876.1 #> 96338158_1      2924.4      2526.3     3383.1      2306.7      2884.5 #> 19400953_1      2224.3      2481.0     3176.2      2020.2      1937.7 #> 22069839_1      1560.8      3420.8     3028.6      2605.4      1936.9 #> 16041777_1      3252.6      1722.6     2345.7      2361.5      2501.8 #> 23001489_1      1705.3      2663.7     2428.0      1753.6      2332.2 #> 41068710_1      2291.0      1309.3     2494.6      2293.6      2663.0 #> 97703295_1      3687.9      2161.9     2532.4      1884.3      2276.9 #> 35274802_1      2944.6      2740.3     3280.5      2797.3      2632.9 #> 75398329_1      2881.7      2190.2     2150.4      3064.1      2924.4 #> 42005783_1      2660.7      1690.3     2664.4      2817.5      2031.3 #> 11949409_1      3069.0      1746.2     2465.5      3473.1      2427.6 #> 87556508_1      1935.4      3049.9     2712.2      1917.4      1790.9 #> 94064776_1      2346.4      1449.9     3135.8      3106.2      2962.0 #> 99784020_1      2296.8      2685.1     2527.8      2328.8      2015.5 #> 84916413_1      2343.7      2462.5     2137.1      2872.0      2418.6 #> 68369767_1      3008.4      3234.5     3252.8      2030.1      2899.3 #> 15409464_1      2717.4      2174.4     2760.2      2971.7      2271.0 #> 14727850_1      1820.3      2329.4     2777.8      2641.7      2186.8 #> 29761404_1      2217.2      2374.2     2202.4      3102.9      3288.5 #> 21873937_1      2465.9      1576.6     1570.3      2158.7      1918.6 #> 90667501_1      2382.3      1774.0     2698.5      2366.6      1678.4 #> 38278439_1      2037.4      3711.7     2160.1      2531.1      2292.8 #> 69925630_1      3566.5      3054.6     2468.7      2507.9      2963.9 #> 54693511_1      1899.9      2629.6     2081.8      1997.6      2238.9 #> 82074546_1      2544.5      2133.2     2877.9      2991.0      2856.1 #> 70477393_1      2957.3      2564.8     2682.3      2309.2      1761.0 #> 31800607_1      2311.7      2271.0     1326.6      2767.1      2867.9 #> 65263757_1      2311.2      3097.3     2751.4      2360.2      2602.2 #> 52672763_1      2438.3      1841.1     2049.3      2956.5      2157.1 #> 92815264_1      2721.4      2400.2     2545.2      2772.8      2312.0 #> 71305641_1      2304.3      2255.9     2872.8      2457.2      2387.0 #> 88325979_1      2097.1      2288.2     2887.6      2742.0      3687.7 #> 67769607_1      2695.4      2621.9     2463.2      3162.1      2622.6 #> 71016048_1      1545.7      2224.4     2327.8      2685.6      2775.0 #> 34248161_1      2845.3      2271.8     2160.4      1905.5      3429.7 #> 83316951_1      2287.4      1941.4     2841.8      2906.9      3007.2 #> 63149125_1      1632.0      2346.0     2573.6      2635.9      2616.2 #> 35094240_1      2659.6      2627.6     3002.1      2685.5      2141.4 #> 45697493_1      2220.8      2467.5     2773.4      3273.2      1957.8 #> 36965772_1      2296.5      2154.1     2861.5      1867.4      2092.7 #> 75692351_1      2549.7      1747.3     1841.4      1962.0      1650.6 #> 32994766_1      2019.0      2004.1     2450.0      2650.8      2543.3 #> 12262397_1      2556.2      3071.0     2063.6      2247.2      2697.5 #> 74369248_1      2680.1      2080.3     1484.6      2299.5      1752.0 #> 32815252_1      2148.1      3704.3     3401.7      2439.8      2687.2 #> 62668101_1      2261.1      3363.2     2631.3      2555.9      3242.6 #> 65054205_1      2166.8      2084.6     3568.6      2826.9      1690.3 #> 29655282_1      2648.0      2151.7     2117.8      2443.8      3058.6 #> 64533397_1      3286.3      2920.5     1706.9      2481.8      1358.9 #> 52258642_1      2523.8      2236.7     2570.3      3045.9      1674.3 #> 33494702_1      2744.1      2248.9     2411.9      2218.0      2625.5 #> 43721936_1      2380.1      3312.2     2743.1      2129.7      2206.6 #>            seq.9297.97 seq.9396.38 seq.3300.26 seq.2772.14 seq.6615.18 #> 51966571_1      2573.8      2292.4      2245.9      3097.3      1802.8 #> 28704098_1      2638.4      2890.1      3326.9      1459.0      2525.6 #> 81969215_1      1996.0      2800.8      3319.1      2652.0      3048.5 #> 68668418_1      2303.2      2265.7      2497.2      2224.4      2398.5 #> 38935826_1      2441.8      3156.8      2168.3      3683.8      2286.1 #> 74703475_1      2881.8      2679.5      1970.4      3192.2      2285.7 #> 36178605_1      2444.2      2491.9      2360.4      2183.2      2226.7 #> 93904282_1      2393.6      2916.3      2583.5      3325.0      2003.7 #> 79223225_1      2327.4      2886.7      1689.6      1987.2      2970.6 #> 68004202_1      2519.6      1633.3      2705.9      2229.4      2874.4 #> 51134040_1      3131.0      2315.9      1589.5      2922.8      1730.8 #> 18037091_1      3085.9      2682.2      2588.7      2040.3      2769.6 #> 48915223_1      2813.2      2080.8      1877.4      2693.5      3328.2 #> 59046590_1      2709.1      3308.3      2134.9      2209.3      2682.9 #> 22440191_1      2743.7      2553.7      2352.6      2490.7      2314.6 #> 93503102_1      2228.9      1732.2      1688.7      2007.3      3003.9 #> 10117155_1      2294.5      2228.5      2767.7      2927.0      2101.2 #> 33801297_1      2545.8      2818.8      2448.4      1802.6      2212.2 #> 34887902_1      2355.3      2289.7      1865.2      2672.6      2961.7 #> 56899633_1      3288.5      2093.8      2752.3      3296.7      2730.5 #> 30132003_1      3002.1      2529.5      2216.5      3784.7      1904.5 #> 46713227_1      3033.6      2775.4      2464.5      2749.1      1586.5 #> 65338817_1      3057.8      2499.0      3010.5      2955.3      2364.3 #> 29347638_1      3103.2      2629.8      2479.8      2078.4      2328.8 #> 69694117_1      3434.1      2442.8      3076.1      2179.6      2965.1 #> 97975242_1      2816.0      2459.8      2019.2      2452.6      2266.5 #> 18797344_1      1660.6      2791.5      2516.8      2389.5      2444.4 #> 65073939_1      3298.0      2517.5      1339.3      2171.4      2072.9 #> 57485678_1      3289.0      2126.5      2745.7      3415.4      1873.4 #> 83562904_1      2778.2      2733.4      2205.7      2513.1      3405.3 #> 28728820_1      3165.8      3051.0      2274.1      2726.2      1935.0 #> 66083414_1      3077.4      1704.3      1278.5      1814.0      1926.8 #> 94112835_1       913.3      2726.0      3702.8      2820.4      2618.9 #> 26463627_1      1970.6      2139.4      2635.7      2937.2      2409.3 #> 45366525_1      3328.6      1765.9      2820.6      3039.1      2112.9 #> 40869963_1      3266.5      1595.5      1953.3      2676.8      2877.5 #> 94637211_1      2375.2      2371.5      3061.4      2427.4      2443.4 #> 95354565_1      2090.0      1729.2      2687.2      2634.6      1484.7 #> 46557342_1      1704.3      2497.2      2254.9      2385.4      2414.1 #> 76936509_1      2308.8      2362.9      2549.5      3317.1      2779.4 #> 91024793_1      2368.9      3137.3      2856.8      2445.8      2449.5 #> 35984450_1      2279.7      3806.5      3339.7      2277.9      2239.7 #> 54659281_1      2317.7      2807.4      2052.8      2084.8      1890.7 #> 88834253_1      2458.1      3302.3      2583.4      2708.5      2752.8 #> 41009299_1      3072.8      2978.3      1679.7      2620.5      2884.7 #> 33721484_1      2435.7      2478.4      1754.5      2826.4      2748.4 #> 55789326_1      2477.6      3326.1      1859.7      2469.2      2872.3 #> 25885578_1      2515.2      2514.7      3043.9      2767.0      2630.7 #> 96338158_1      2703.4      2922.4      2941.4      3056.0      2906.9 #> 19400953_1      2081.0      2610.9      2360.0      2211.6      2079.7 #> 22069839_1      2447.7      2238.9      3132.7      3100.9      2388.5 #> 16041777_1      2070.5      1787.5      1983.3      3097.3      2746.9 #> 23001489_1      3509.5      3046.5      2175.1      2237.1      3005.3 #> 41068710_1      2570.2      2938.7      3009.6      2558.8      2800.4 #> 97703295_1      1622.3      2565.7      2946.1      1563.4      2351.4 #> 35274802_1      2208.7      2801.4      1992.6      2974.6      2655.6 #> 75398329_1      2577.9      1698.8      2483.1      3047.3      2288.8 #> 42005783_1      2849.9      3059.8      3236.3      2637.3      2539.5 #> 11949409_1      3214.7      2944.3      1715.2      2853.8      2711.7 #> 87556508_1      2016.2      2831.8      2708.1      2281.7      2480.4 #> 94064776_1      3047.5      2322.5      1899.7      2550.8      1842.7 #> 99784020_1      1675.6      1592.8      2592.7      2464.8      2365.3 #> 84916413_1      2803.4      2277.1      2590.8      2419.8      2309.2 #> 68369767_1      2292.7      2305.2      2320.0      2779.3      2736.0 #> 15409464_1      2355.3      2439.6      2880.1      2626.9      2731.8 #> 14727850_1      3007.0      2494.0      2485.3      3509.9      2696.2 #> 29761404_1      3049.0      2540.2      3235.2      1798.8      2376.4 #> 21873937_1      2514.2      1949.1      2686.2      2819.8      1877.0 #> 90667501_1      2538.2      1955.0      2361.0      2276.9      2897.2 #> 38278439_1      3300.6      2216.8      2730.8      2548.2      3095.3 #> 69925630_1      2085.4      2799.6      3307.6      2219.2      2294.8 #> 54693511_1      3228.6      2664.3      2102.7      2173.4      2867.0 #> 82074546_1      2324.6      2832.5      2791.8      2518.2      2821.5 #> 70477393_1      2458.2      2468.5      3025.7      1895.0      1455.7 #> 31800607_1      2695.3      2230.7      2567.2      2283.6      2188.2 #> 65263757_1      2845.9      2964.4      2554.4      3011.9      3014.2 #> 52672763_1      2647.2      3165.9      1779.0      2488.1      2762.0 #> 92815264_1      3730.2      2396.1      3674.1      2832.6      2664.7 #> 71305641_1      2973.5      1903.2      2508.6      3615.4      2350.4 #> 88325979_1      3155.1      3043.8      2024.7      1977.2      2778.4 #> 67769607_1      2384.5      2089.3      2529.1      2333.2      2082.8 #> 71016048_1      2486.5      2053.6      2136.2      3059.7      2065.9 #> 34248161_1      2034.4      2339.7      3207.8      2069.2      2724.6 #> 83316951_1      2323.3      2400.6      1862.2      2232.2      2131.0 #> 63149125_1      2539.1      2341.4      2256.0      1752.9      1503.6 #> 35094240_1      2906.0      2004.5      2262.7      2384.4      2929.4 #> 45697493_1      2896.5      1608.6      2618.2      1379.7      2874.7 #> 36965772_1      2463.5      2491.9      2762.8      2255.2      2236.9 #> 75692351_1      2996.2      2988.4      2984.5      1912.3      2427.4 #> 32994766_1      2583.1      2473.0      1847.0      2348.0      2478.5 #> 12262397_1      2166.7      3051.6      2149.0      3037.5      2222.3 #> 74369248_1      3684.7      1520.7      3918.3      2755.4      1389.1 #> 32815252_1      2833.3      3325.8      3158.3      3384.1      3290.0 #> 62668101_1      3341.4      1691.6      2507.7      2074.8      2896.0 #> 65054205_1      2401.6      1614.8      2503.2      2459.5      2080.3 #> 29655282_1      3100.1      2150.3      2324.0      2061.0      2235.0 #> 64533397_1      2073.6      3816.4      2333.4      2872.3      3157.5 #> 52258642_1      2272.8      2015.5      2788.7      2621.1      1363.7 #> 33494702_1      2307.3      2437.0      3111.7      2180.4      3002.9 #> 43721936_1      2805.8      3274.5      2247.6      2089.8      1793.7 #>            seq.8797.98 seq.9879.88 seq.8993.16 seq.9373.82 #> 51966571_1      3272.2      2324.8      2770.5      2355.7 #> 28704098_1      2539.6      2216.5      1371.0      1242.2 #> 81969215_1      2429.9      3034.8      3015.5      2987.9 #> 68668418_1      2080.8      2766.8      2551.7      3367.1 #> 38935826_1      2224.4      2748.9      2001.3      2350.8 #> 74703475_1      3124.3      3337.8      2522.4      2614.3 #> 36178605_1      3088.4      1965.3      2593.0      1973.4 #> 93904282_1      2464.1      2449.6      1827.6      2546.5 #> 79223225_1      1974.7      2485.6      2607.5      2936.1 #> 68004202_1      1990.4      1844.2      3147.1      2275.0 #> 51134040_1      2114.1      2106.3      2563.3      1486.6 #> 18037091_1      2781.9      2445.5      2997.2      2958.2 #> 48915223_1      2414.5      2771.8      3206.0      3338.0 #> 59046590_1      3040.7      3321.9      2650.7      2342.0 #> 22440191_1      2131.9      1951.3      2013.8      2496.7 #> 93503102_1      2935.7      2860.6      2499.9      2647.9 #> 10117155_1      1892.1      3315.6      2741.9      2705.7 #> 33801297_1      3978.2      2126.5      2152.1      2762.9 #> 34887902_1      1998.9      1667.0      2650.0      1914.9 #> 56899633_1      3429.2      2032.2      2118.7      2189.0 #> 30132003_1      2742.5      2134.6      3179.0      2828.7 #> 46713227_1      2734.0      2976.8      1183.0      2481.4 #> 65338817_1      2984.1      3077.8      2041.5      2271.3 #> 29347638_1      2512.7      3146.9      3034.4      2453.5 #> 69694117_1      2265.5      3200.0      3320.6      2319.3 #> 97975242_1      2594.8      3232.1      2344.6      2369.5 #> 18797344_1      2073.6      2885.7      3280.7      2810.2 #> 65073939_1      2752.1      2645.4      2258.0      2652.7 #> 57485678_1      2480.5      2686.3      2464.5      2570.6 #> 83562904_1      3262.1      2658.3      1945.9      2415.1 #> 28728820_1      2406.3      2214.0      2185.5      3654.5 #> 66083414_1      1937.3      2224.2      2715.2      2674.2 #> 94112835_1      2556.5      2488.8      2470.9      2227.6 #> 26463627_1      2283.3      1816.6      1954.1      2699.1 #> 45366525_1      2572.1      3042.1      2173.8      2250.2 #> 40869963_1      3003.3      2454.6      1505.1      3025.9 #> 94637211_1      2040.7      2412.2      2413.5      3384.9 #> 95354565_1      3591.9      1628.3      2599.9      2666.8 #> 46557342_1      3043.2      1815.8      1807.9      2573.0 #> 76936509_1      2384.7      2419.9      2892.2      2443.4 #> 91024793_1      2105.6      2047.3      2643.4      2832.8 #> 35984450_1      2805.9      1972.0      1828.1      1773.4 #> 54659281_1      1528.0      2444.3      3067.8      2226.1 #> 88834253_1      3159.6      1842.4      2898.3      2462.8 #> 41009299_1      1918.8      2793.2      2337.1      2988.7 #> 33721484_1      2420.4      3958.0      2140.3      2117.7 #> 55789326_1      2397.2      1967.5      2310.7      2720.8 #> 25885578_1      3437.6      2565.5      2706.3      2987.2 #> 96338158_1      1720.9      2869.7      3495.9      2424.1 #> 19400953_1      2763.8      2285.9      3158.8      2277.1 #> 22069839_1      2094.6      2511.5      2306.8      2274.6 #> 16041777_1      1362.1      2442.8      2877.5      1836.0 #> 23001489_1      1874.0      3111.6      2321.6      2735.6 #> 41068710_1      2130.1      2326.0      2828.5      2957.3 #> 97703295_1      1459.8      2363.5      3202.0      2978.1 #> 35274802_1      2829.6      3123.8      2672.4      2154.7 #> 75398329_1      1599.2      2418.4      2486.5      2654.4 #> 42005783_1      2363.8      1574.8      2315.2      1904.6 #> 11949409_1      1879.0      2695.3      1657.7      3674.5 #> 87556508_1      2456.8      2777.4      1441.9      1561.8 #> 94064776_1      2868.3      2914.5      2307.5      2571.8 #> 99784020_1      3095.5      3261.4      3211.6      2833.0 #> 84916413_1      2348.7      3231.4      2736.3      2465.8 #> 68369767_1      2553.8      2845.2      2267.9      2642.1 #> 15409464_1      3356.5      2938.0      2542.8      1967.1 #> 14727850_1      2398.3      2774.4      2613.2      2106.6 #> 29761404_1      2435.0      2064.9      2642.6      2541.0 #> 21873937_1      3562.3      2306.4      2578.1      1839.7 #> 90667501_1      2550.4      2757.6      2043.4      2679.9 #> 38278439_1      3424.7      2903.0      1655.1      2719.0 #> 69925630_1      3322.7      2535.6      1922.6      3451.8 #> 54693511_1      2943.4      2654.5      2358.9      3133.3 #> 82074546_1      3126.6      2834.7      3544.9      2864.0 #> 70477393_1      2510.4      2075.3      2851.0      2572.9 #> 31800607_1      2306.0      2770.4      2708.8      2481.1 #> 65263757_1      2866.7      2685.5      1610.7      1862.1 #> 52672763_1      1876.0      2128.6      3559.3      2338.4 #> 92815264_1      2967.9      2500.6      2433.9      2118.6 #> 71305641_1      3105.1      2149.8      3132.1      2222.4 #> 88325979_1      2956.4      1628.7      2219.6      2148.0 #> 67769607_1      3198.0      2233.9      2020.0      2600.7 #> 71016048_1      1546.7      2883.6      2692.2      2283.9 #> 34248161_1      1871.3      2596.4      2341.0      3786.1 #> 83316951_1      2817.4      2598.4      2706.1      1858.6 #> 63149125_1      2934.6      2055.3      2968.7      2233.9 #> 35094240_1      1634.0      2302.9      3072.9      2292.5 #> 45697493_1      1703.7      2114.0      3146.0      2422.2 #> 36965772_1      2160.3      2599.5      3081.9      2551.1 #> 75692351_1      1863.0      2458.9      2519.2      2014.9 #> 32994766_1      3007.6      2302.6      2658.7      2795.9 #> 12262397_1      1330.6      2092.6      1982.4      2977.8 #> 74369248_1      2638.3      2526.4      2716.7      1837.9 #> 32815252_1      2908.2      3437.4      2560.5      3235.9 #> 62668101_1      2663.8      2001.2      3572.3      2891.8 #> 65054205_1      2874.1      3668.1      2091.6      2303.3 #> 29655282_1      2980.3      2828.1      2300.6      2329.1 #> 64533397_1      2957.7      2022.6      2797.2      2681.4 #> 52258642_1      2899.3      2687.5      1846.9      2721.7 #> 33494702_1      1279.1      1857.4      3047.0      2711.7 #> 43721936_1      2461.4      2394.2      3257.1      2297.2  idx <- 25L  # random 25th column imputeNAs(adat[[idx]]) #>   [1] 2256.7 2870.7 2515.3 2273.7 1964.7 4230.9 2210.4 2580.7 2561.1 #>  [10] 2278.5 2412.0 2501.6 2733.1 1778.8 2061.5 2062.3 2880.2 2427.7 #>  [19] 2801.5 2485.8 2086.7 3110.6 2316.0 2555.4 3303.1 2583.7 1871.9 #>  [28] 2281.9 2783.0 2067.4 1625.0 2114.1 3002.4 2073.2 2444.6 2807.1 #>  [37] 2558.9 2844.0 2545.1 1996.0 2186.8 3503.0 3000.7 2524.3 2960.3 #>  [46] 2589.5 2151.2 2430.3 3187.8 3418.3 1297.0 2706.1 2758.5 2467.8 #>  [55] 3121.1 2443.4 1566.1 2898.7 2972.3 2678.6 2901.6 2927.0 1649.4 #>  [64] 2136.7 3511.4 3292.0 2278.5 2582.3 3745.3 2859.2 3234.4 2137.5 #>  [73] 1957.7 2532.0 2571.8 2717.2 2655.5 1842.8 2207.6 2830.3 2255.9 #>  [82] 2297.5 2196.6 2439.9 2845.4 2172.6 2614.1 1633.1 2321.7 1714.5 #>  [91] 2586.7 1527.1 2406.2 2841.3 3218.6 2083.0 1921.1 1992.1 1988.5 #> [100] 2654.9  # test the S3 method all.equal(imputeNAs(adat[[idx]]), imputeNAs(adat)[[idx]]) #> [1] TRUE  x <- adat[[idx]] x[seq(1, nrow(adat), 10L)] <- NA_real_ x #>   [1]     NA 2870.7 2515.3 2273.7 1964.7 4230.9 2210.4 2580.7 2561.1 #>  [10] 2278.5     NA 2501.6 2733.1 1778.8 2061.5 2062.3 2880.2 2427.7 #>  [19] 2801.5 2485.8     NA 3110.6 2316.0 2555.4 3303.1 2583.7 1871.9 #>  [28] 2281.9 2783.0 2067.4     NA 2114.1 3002.4 2073.2 2444.6 2807.1 #>  [37] 2558.9 2844.0 2545.1 1996.0     NA 3503.0 3000.7 2524.3 2960.3 #>  [46] 2589.5 2151.2 2430.3 3187.8 3418.3     NA 2706.1 2758.5 2467.8 #>  [55] 3121.1 2443.4 1566.1 2898.7 2972.3 2678.6     NA 2927.0 1649.4 #>  [64] 2136.7 3511.4 3292.0 2278.5 2582.3 3745.3 2859.2     NA 2137.5 #>  [73] 1957.7 2532.0 2571.8 2717.2 2655.5 1842.8 2207.6 2830.3     NA #>  [82] 2297.5 2196.6 2439.9 2845.4 2172.6 2614.1 1633.1 2321.7 1714.5 #>  [91]     NA 1527.1 2406.2 2841.3 3218.6 2083.0 1921.1 1992.1 1988.5 #> [100] 2654.9  median(x, na.rm = TRUE) #> [1] 2528.15  imputeNAs(x) #>   [1] 2528.15 2870.70 2515.30 2273.70 1964.70 4230.90 2210.40 2580.70 #>   [9] 2561.10 2278.50 2528.15 2501.60 2733.10 1778.80 2061.50 2062.30 #>  [17] 2880.20 2427.70 2801.50 2485.80 2528.15 3110.60 2316.00 2555.40 #>  [25] 3303.10 2583.70 1871.90 2281.90 2783.00 2067.40 2528.15 2114.10 #>  [33] 3002.40 2073.20 2444.60 2807.10 2558.90 2844.00 2545.10 1996.00 #>  [41] 2528.15 3503.00 3000.70 2524.30 2960.30 2589.50 2151.20 2430.30 #>  [49] 3187.80 3418.30 2528.15 2706.10 2758.50 2467.80 3121.10 2443.40 #>  [57] 1566.10 2898.70 2972.30 2678.60 2528.15 2927.00 1649.40 2136.70 #>  [65] 3511.40 3292.00 2278.50 2582.30 3745.30 2859.20 2528.15 2137.50 #>  [73] 1957.70 2532.00 2571.80 2717.20 2655.50 1842.80 2207.60 2830.30 #>  [81] 2528.15 2297.50 2196.60 2439.90 2845.40 2172.60 2614.10 1633.10 #>  [89] 2321.70 1714.50 2528.15 1527.10 2406.20 2841.30 3218.60 2083.00 #>  [97] 1921.10 1992.10 1988.50 2654.90  table(imputeNAs(x)) |> sort() |> tail() #>  #>    3503  3511.4  3745.3  4230.9  2278.5 2528.15  #>       1       1       1       1       2      10"},{"path":"https://stufield.github.io/wranglr/dev/reference/impute_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute Outlier Values — impute_outliers","title":"Impute Outlier Values — impute_outliers","text":"Given numeric vector, function imputes outlier values, defined \\(3 \\times \\sigma\\) mean, back robustly calculated Gaussian. Gaussian parameters (\\(\\mu + \\sigma\\)) robustly calculated.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/impute_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute Outlier Values — impute_outliers","text":"","code":"impute_outliers(x, n_sigma = 3)"},{"path":"https://stufield.github.io/wranglr/dev/reference/impute_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute Outlier Values — impute_outliers","text":"x vector values, approximating Gaussian distribution containing (possibly) outlier samples. n_sigma numeric(1). number standard deviations mean n_sigma threshold outliers. Ignored type = \"nonparametric\".","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/impute_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute Outlier Values — impute_outliers","text":"vector values approximating Gaussian distribution outlier samples imputed back robust Gaussian fit.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/impute_outliers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Impute Outlier Values — impute_outliers","text":"maximum value, .e. \\(100^{th}\\) percentile, pushed back \\(3 \\times \\sigma\\) value Gaussian.","code":""},{"path":[]},{"path":"https://stufield.github.io/wranglr/dev/reference/impute_outliers.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Impute Outlier Values — impute_outliers","text":"Stu Field","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/impute_outliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Impute Outlier Values — impute_outliers","text":"","code":"# Gaussian with 4 outliers (2hi, 2lo) vec  <- withr::with_seed(101, c(2, 2.5, rnorm(26, 15, 2), 25, 25.9)) pars <- attributes(helpr::get_outliers(vec, n_sigma = 3, type = \"para\")) pars #> $mu #> [1] 14.66106 #>  #> $sigma #> [1] 2.237713 #>  #> $crit #> [1]  7.947922 21.374201 #>   impute_outliers(vec) #>  [1]  7.947922 11.302062 14.347927 16.104924 13.650112 15.428719 15.621538 #>  [8] 17.347933 16.237580 14.774531 16.834057 14.553481 16.052896 13.410311 #> [15] 17.855511 12.066361 14.526633 14.613324 13.300491 15.116931 13.364659 #> [22] 10.899384 14.672489 16.417044 14.464039 12.072156 16.488872 12.179220 #> [29] 18.764836 21.374201  # Plot what is happening: # original `vec` and critical 3*sd cutoffs in `red` library(ggplot2) range <- seq(min(vec), max(vec), length.out = 100) fit_data <- data.frame(   x = range,   y = stats::pnorm(range, mean = pars$mu, sd = pars$sigma) ) ggplot(data.frame(x = vec), aes(x = x)) +   stat_ecdf(color = \"blue\") +   stat_ecdf(data = data.frame(x = impute_outliers(vec)),             aes(x = x), color = \"purple\") +   geom_line(data = fit_data, aes(x = x, y = y),             colour = \"black\", linetype = \"longdash\") +   geom_vline(xintercept = pars$crit, colour = \"red\", linetype = \"dashed\") +   ggtitle(\"Outlier Cutoffs (3*sigma) in Red\")"},{"path":"https://stufield.github.io/wranglr/dev/reference/impute_predictors.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute Predictor Variables — impute_predictors","title":"Impute Predictor Variables — impute_predictors","text":"Threshold numeric values model predictors according set training ranges. Typically involves capping values threshold.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/impute_predictors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute Predictor Variables — impute_predictors","text":"","code":"impute_predictors(data, extrm_vals)"},{"path":"https://stufield.github.io/wranglr/dev/reference/impute_predictors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute Predictor Variables — impute_predictors","text":"data data.frame, tibble object. extrm_vals tibble following 5 fields: Feature: feature name matching fields data xtrm_min: minimum acceptable value feature xtrm_max: maximum acceptable value feature impute_min: value assign xtrm_min impute_max: value assign xtrm_max Use NA impute, use dplyr::filter() remove entire row neither min max desired given feature.","code":""},{"path":[]},{"path":"https://stufield.github.io/wranglr/dev/reference/impute_predictors.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Impute Predictor Variables — impute_predictors","text":"Stu Field","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/impute_predictors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Impute Predictor Variables — impute_predictors","text":"","code":"x   <- data.frame(a = 1:3L, b = 4:6L, c = 7:9L, d = c(1.23, 4.56, 7.89)) tbl <- tibble::tribble(   ~ Feature,  ~ xtrm_max, ~ impute_max, ~ xtrm_min, ~ impute_min,     \"a\",         NA,        NA,           NA,         NA,     \"b\",         5,         5,            0,          1,     \"c\",         9,         7,            7.1,        7.1 ) impute_predictors(x, tbl) #>   a b   c    d #> 1 1 4 7.1 1.23 #> 2 2 5 8.0 4.56 #> 3 3 5 9.0 7.89"},{"path":"https://stufield.github.io/wranglr/dev/reference/match_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Match Two Data Frames Based on Sample ID — match_samples","title":"Match Two Data Frames Based on Sample ID — match_samples","text":"Given two data frames, function matches rows based intersection unique sample identifier column, idcol. returned data frames ordered idcol containing rows based intersection idcol values.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/match_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match Two Data Frames Based on Sample ID — match_samples","text":"","code":"match_samples(x, y, idcol = \"SampleId\")"},{"path":"https://stufield.github.io/wranglr/dev/reference/match_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match Two Data Frames Based on Sample ID — match_samples","text":"x, y two data frames match samples . idcol character(1). name column containing sample identifiers x y.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/match_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match Two Data Frames Based on Sample ID — match_samples","text":"named list x y, matched ordered based idcol.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/match_samples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match Two Data Frames Based on Sample ID — match_samples","text":"","code":"df    <- head(simdata, 25L) train <- withr::with_seed(1, dplyr::sample_n(df, 15L)) new   <- withr::with_seed(2, dplyr::sample_n(df, 15L)) intersect(train$SampleId, new$SampleId)  # overlapping IDs exist #> [1] \"001\" \"002\" \"011\" \"022\" \"016\" \"006\" \"023\"  dfs <- match_samples(train, new) dfs #> $train #>             id class_response reg_response       time status SampleId #> 51966571_1 001        control   -366.35853 0.17938352      1      001 #> 28704098_1 002        control    619.94832 0.16790617      1      002 #> 74703475_1 006        control   1058.02773 0.45642321      0      006 #> 51134040_1 011        control     48.80594 2.37070639      0      011 #> 93503102_1 016        control    223.59018 0.24184832      0      016 #> 46713227_1 022        control    567.17647 0.03049982      1      022 #> 65338817_1 023        control   -263.84427 0.25094150      1      023 #>             SlideId Subarray    SiteId age gender HybControlNormScale #> 51966571_1 51966571        1  Isengard  56      M           0.6687581 #> 28704098_1 28704098        1 Rivendell  40      F           1.9342019 #> 74703475_1 74703475        1    Mordor  41      F           2.0788480 #> 51134040_1 51134040        1    Mordor  37      M           1.7756260 #> 93503102_1 93503102        1     Rohan  49      M           2.0030241 #> 46713227_1 46713227        1     Shire  29      M           0.6111657 #> 65338817_1 65338817        1     Rohan  30      M           1.8143705 #>            NormScale_40 NormScale_0_005 NormScale_1 seq.2802.68 #> 51966571_1    1.8977914       0.5510880   0.4316258      2186.8 #> 28704098_1    0.5486117       0.9991240   0.5249539      2591.8 #> 74703475_1    0.7958873       1.2270788   1.0426147      2089.8 #> 51134040_1    1.5700662       1.2384780   1.3697496      3255.9 #> 93503102_1    0.5603863       0.4237175   0.7158650      2477.5 #> 46713227_1    0.7725000       0.8013179   1.0183998      2891.1 #> 65338817_1    1.3366064       0.9539156   1.1823144      2537.3 #>            seq.9251.29 seq.1942.70 seq.5751.80 seq.9608.12 seq.3459.49 #> 51966571_1      2699.1      2189.8      2725.1      2704.7      2304.2 #> 28704098_1      2194.0      2521.1      2490.7      3344.4      2826.8 #> 74703475_1      3490.2      3383.6      1962.4      3748.8      2952.7 #> 51134040_1      3700.8      2182.1      2712.6      2417.8      2837.9 #> 93503102_1      2594.4      2303.6      3603.1      3259.9      2667.5 #> 46713227_1      2145.0      3171.5      2552.9      2501.1      2382.1 #> 65338817_1      2805.4      2392.7      2728.5      2184.8      2424.5 #>            seq.3865.56 seq.3363.21 seq.4487.88 seq.5994.84 seq.9011.72 #> 51966571_1       865.1      1984.3      1702.9      2256.7      2240.4 #> 28704098_1      2197.1      2328.6      2591.1      2870.7      1911.3 #> 74703475_1      3255.8      2590.7      3185.4      4230.9      2516.7 #> 51134040_1      2668.8      2353.3      2818.3      2412.0      2107.0 #> 93503102_1      2134.8      1627.1      2468.5      2062.3      2121.7 #> 46713227_1      2856.1      2751.8      3310.7      3110.6      1635.4 #> 65338817_1      2106.6      2068.5      2150.1      2316.0      2760.9 #>            seq.2902.23 seq.2260.48 seq.4936.96 seq.2277.95 seq.2953.31 #> 51966571_1      2543.3      2775.9      2758.1      1212.2      2608.4 #> 28704098_1      3077.6      2131.6      2443.0      3062.4      2228.8 #> 74703475_1      3690.1      2378.7      2955.7      3081.6      2844.6 #> 51134040_1      2942.9      2917.9      3216.2      2563.9      2783.3 #> 93503102_1      2190.1      3032.0      1993.5      1270.9      2584.5 #> 46713227_1      2792.3      2716.9      2792.7      2557.8      2582.6 #> 65338817_1      3117.2      2143.2      2600.5      2818.6      3153.8 #>            seq.3032.11 seq.4330.4 seq.4914.10 seq.3896.5 seq.5002.7 #> 51966571_1      2842.4     3107.4      1080.2     1908.9     1677.7 #> 28704098_1      2442.4     1726.1      3255.7     2728.1     2090.0 #> 74703475_1      1636.9     3262.3      2624.6     1402.9     2473.8 #> 51134040_1      2713.8     2387.3      2346.5     2675.7     2248.7 #> 93503102_1      2711.8     1978.7      2665.2     2210.7     2255.2 #> 46713227_1      2000.1     2833.4      3023.2     1891.5     1870.8 #> 65338817_1      3436.9     2431.7      2173.6     2585.1     2737.9 #>            seq.3476.4 seq.1130.49 seq.6356.60 seq.4579.40 seq.8344.24 #> 51966571_1     1423.4      2780.6      2187.7      2071.7      2588.3 #> 28704098_1     2213.6      2253.7      2997.0      2916.6      3344.5 #> 74703475_1     2099.1      2395.7      2611.7      2811.1      2159.3 #> 51134040_1     2885.7      2176.3      2997.2      2301.2      2566.3 #> 93503102_1     3162.5      2436.4      3326.5      2455.0      2226.8 #> 46713227_1     2940.9      3062.4      2215.8      1931.1      2266.8 #> 65338817_1     2789.1      2840.8      3001.6      2465.5      1444.1 #>            seq.8441.53 seq.9360.55 seq.7841.8 seq.8142.63 seq.4461.56 #> 51966571_1      1934.0      2516.7     3183.7      2022.1      2129.6 #> 28704098_1      2198.4      1770.8     2986.6      2190.0      2406.5 #> 74703475_1       862.9      2248.4     3356.2      2125.7      3278.4 #> 51134040_1      2619.2      1538.0     1803.0      2420.5      2282.9 #> 93503102_1      2444.7      2400.4     2483.0      2359.3      3021.7 #> 46713227_1      2868.6      3405.6     2518.2      2162.9      2702.6 #> 65338817_1      2724.6      2444.0     2871.8      1629.5      2194.5 #>            seq.9297.97 seq.9396.38 seq.3300.26 seq.2772.14 seq.6615.18 #> 51966571_1      2573.8      2292.4      2245.9      3097.3      1802.8 #> 28704098_1      2638.4      2890.1      3326.9      1459.0      2525.6 #> 74703475_1      2881.8      2679.5      1970.4      3192.2      2285.7 #> 51134040_1      3131.0      2315.9      1589.5      2922.8      1730.8 #> 93503102_1      2228.9      1732.2      1688.7      2007.3      3003.9 #> 46713227_1      3033.6      2775.4      2464.5      2749.1      1586.5 #> 65338817_1      3057.8      2499.0      3010.5      2955.3      2364.3 #>            seq.8797.98 seq.9879.88 seq.8993.16 seq.9373.82 #> 51966571_1      3272.2      2324.8      2770.5      2355.7 #> 28704098_1      2539.6      2216.5      1371.0      1242.2 #> 74703475_1      3124.3      3337.8      2522.4      2614.3 #> 51134040_1      2114.1      2106.3      2563.3      1486.6 #> 93503102_1      2935.7      2860.6      2499.9      2647.9 #> 46713227_1      2734.0      2976.8      1183.0      2481.4 #> 65338817_1      2984.1      3077.8      2041.5      2271.3 #>  #> $new #>             id class_response reg_response       time status SampleId #> 51966571_1 001        control   -366.35853 0.17938352      1      001 #> 28704098_1 002        control    619.94832 0.16790617      1      002 #> 74703475_1 006        control   1058.02773 0.45642321      0      006 #> 51134040_1 011        control     48.80594 2.37070639      0      011 #> 93503102_1 016        control    223.59018 0.24184832      0      016 #> 46713227_1 022        control    567.17647 0.03049982      1      022 #> 65338817_1 023        control   -263.84427 0.25094150      1      023 #>             SlideId Subarray    SiteId age gender HybControlNormScale #> 51966571_1 51966571        1  Isengard  56      M           0.6687581 #> 28704098_1 28704098        1 Rivendell  40      F           1.9342019 #> 74703475_1 74703475        1    Mordor  41      F           2.0788480 #> 51134040_1 51134040        1    Mordor  37      M           1.7756260 #> 93503102_1 93503102        1     Rohan  49      M           2.0030241 #> 46713227_1 46713227        1     Shire  29      M           0.6111657 #> 65338817_1 65338817        1     Rohan  30      M           1.8143705 #>            NormScale_40 NormScale_0_005 NormScale_1 seq.2802.68 #> 51966571_1    1.8977914       0.5510880   0.4316258      2186.8 #> 28704098_1    0.5486117       0.9991240   0.5249539      2591.8 #> 74703475_1    0.7958873       1.2270788   1.0426147      2089.8 #> 51134040_1    1.5700662       1.2384780   1.3697496      3255.9 #> 93503102_1    0.5603863       0.4237175   0.7158650      2477.5 #> 46713227_1    0.7725000       0.8013179   1.0183998      2891.1 #> 65338817_1    1.3366064       0.9539156   1.1823144      2537.3 #>            seq.9251.29 seq.1942.70 seq.5751.80 seq.9608.12 seq.3459.49 #> 51966571_1      2699.1      2189.8      2725.1      2704.7      2304.2 #> 28704098_1      2194.0      2521.1      2490.7      3344.4      2826.8 #> 74703475_1      3490.2      3383.6      1962.4      3748.8      2952.7 #> 51134040_1      3700.8      2182.1      2712.6      2417.8      2837.9 #> 93503102_1      2594.4      2303.6      3603.1      3259.9      2667.5 #> 46713227_1      2145.0      3171.5      2552.9      2501.1      2382.1 #> 65338817_1      2805.4      2392.7      2728.5      2184.8      2424.5 #>            seq.3865.56 seq.3363.21 seq.4487.88 seq.5994.84 seq.9011.72 #> 51966571_1       865.1      1984.3      1702.9      2256.7      2240.4 #> 28704098_1      2197.1      2328.6      2591.1      2870.7      1911.3 #> 74703475_1      3255.8      2590.7      3185.4      4230.9      2516.7 #> 51134040_1      2668.8      2353.3      2818.3      2412.0      2107.0 #> 93503102_1      2134.8      1627.1      2468.5      2062.3      2121.7 #> 46713227_1      2856.1      2751.8      3310.7      3110.6      1635.4 #> 65338817_1      2106.6      2068.5      2150.1      2316.0      2760.9 #>            seq.2902.23 seq.2260.48 seq.4936.96 seq.2277.95 seq.2953.31 #> 51966571_1      2543.3      2775.9      2758.1      1212.2      2608.4 #> 28704098_1      3077.6      2131.6      2443.0      3062.4      2228.8 #> 74703475_1      3690.1      2378.7      2955.7      3081.6      2844.6 #> 51134040_1      2942.9      2917.9      3216.2      2563.9      2783.3 #> 93503102_1      2190.1      3032.0      1993.5      1270.9      2584.5 #> 46713227_1      2792.3      2716.9      2792.7      2557.8      2582.6 #> 65338817_1      3117.2      2143.2      2600.5      2818.6      3153.8 #>            seq.3032.11 seq.4330.4 seq.4914.10 seq.3896.5 seq.5002.7 #> 51966571_1      2842.4     3107.4      1080.2     1908.9     1677.7 #> 28704098_1      2442.4     1726.1      3255.7     2728.1     2090.0 #> 74703475_1      1636.9     3262.3      2624.6     1402.9     2473.8 #> 51134040_1      2713.8     2387.3      2346.5     2675.7     2248.7 #> 93503102_1      2711.8     1978.7      2665.2     2210.7     2255.2 #> 46713227_1      2000.1     2833.4      3023.2     1891.5     1870.8 #> 65338817_1      3436.9     2431.7      2173.6     2585.1     2737.9 #>            seq.3476.4 seq.1130.49 seq.6356.60 seq.4579.40 seq.8344.24 #> 51966571_1     1423.4      2780.6      2187.7      2071.7      2588.3 #> 28704098_1     2213.6      2253.7      2997.0      2916.6      3344.5 #> 74703475_1     2099.1      2395.7      2611.7      2811.1      2159.3 #> 51134040_1     2885.7      2176.3      2997.2      2301.2      2566.3 #> 93503102_1     3162.5      2436.4      3326.5      2455.0      2226.8 #> 46713227_1     2940.9      3062.4      2215.8      1931.1      2266.8 #> 65338817_1     2789.1      2840.8      3001.6      2465.5      1444.1 #>            seq.8441.53 seq.9360.55 seq.7841.8 seq.8142.63 seq.4461.56 #> 51966571_1      1934.0      2516.7     3183.7      2022.1      2129.6 #> 28704098_1      2198.4      1770.8     2986.6      2190.0      2406.5 #> 74703475_1       862.9      2248.4     3356.2      2125.7      3278.4 #> 51134040_1      2619.2      1538.0     1803.0      2420.5      2282.9 #> 93503102_1      2444.7      2400.4     2483.0      2359.3      3021.7 #> 46713227_1      2868.6      3405.6     2518.2      2162.9      2702.6 #> 65338817_1      2724.6      2444.0     2871.8      1629.5      2194.5 #>            seq.9297.97 seq.9396.38 seq.3300.26 seq.2772.14 seq.6615.18 #> 51966571_1      2573.8      2292.4      2245.9      3097.3      1802.8 #> 28704098_1      2638.4      2890.1      3326.9      1459.0      2525.6 #> 74703475_1      2881.8      2679.5      1970.4      3192.2      2285.7 #> 51134040_1      3131.0      2315.9      1589.5      2922.8      1730.8 #> 93503102_1      2228.9      1732.2      1688.7      2007.3      3003.9 #> 46713227_1      3033.6      2775.4      2464.5      2749.1      1586.5 #> 65338817_1      3057.8      2499.0      3010.5      2955.3      2364.3 #>            seq.8797.98 seq.9879.88 seq.8993.16 seq.9373.82 #> 51966571_1      3272.2      2324.8      2770.5      2355.7 #> 28704098_1      2539.6      2216.5      1371.0      1242.2 #> 74703475_1      3124.3      3337.8      2522.4      2614.3 #> 51134040_1      2114.1      2106.3      2563.3      1486.6 #> 93503102_1      2935.7      2860.6      2499.9      2647.9 #> 46713227_1      2734.0      2976.8      1183.0      2481.4 #> 65338817_1      2984.1      3077.8      2041.5      2271.3 #>"},{"path":"https://stufield.github.io/wranglr/dev/reference/rearrange.html","id":null,"dir":"Reference","previous_headings":"","what":"Rearrange Rows by Variables — rearrange","title":"Rearrange Rows by Variables — rearrange","text":"Rearrange (reorder) possibly filter rows data frame tibble object according matched vector. Similar dplyr::filter() dplyr::arrange(), however ordering based external object x, rather variable contained tbl.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/rearrange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rearrange Rows by Variables — rearrange","text":"","code":"rearrange(tbl, var, x)"},{"path":"https://stufield.github.io/wranglr/dev/reference/rearrange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rearrange Rows by Variables — rearrange","text":"tbl data frame tibble object. var Character. variable name (column). x vector values used sort match.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/rearrange.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rearrange Rows by Variables — rearrange","text":"reordered, possibly filtered, object class tbl.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/rearrange.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rearrange Rows by Variables — rearrange","text":"function meant act working solution lack row names inherent tibble objects, yet still plays nice tidyverse syntax. Values x tbl[[var]] silently dropped. Values tbl[[var]] x silently filtered. Duplicates x silently dropped avoid creating extra rows tbl, whereas duplicates var maintained.","code":""},{"path":[]},{"path":"https://stufield.github.io/wranglr/dev/reference/rearrange.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rearrange Rows by Variables — rearrange","text":"Stu Field","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/rearrange.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rearrange Rows by Variables — rearrange","text":"","code":"df <- tibble::tibble(name = letters[1:4L], x = 1:4, y = rnorm(4)) df #> # A tibble: 4 × 3 #>   name      x      y #>   <chr> <int>  <dbl> #> 1 a         1 -1.93  #> 2 b         2  1.05  #> 3 c         3 -0.821 #> 4 d         4 -0.638  rearrange(df, \"name\", c(\"c\", \"b\", \"d\")) #> # A tibble: 3 × 3 #>   name      x      y #>   <chr> <int>  <dbl> #> 1 c         3 -0.821 #> 2 b         2  1.05  #> 3 d         4 -0.638  rearrange(df, \"name\", \"d\") #> # A tibble: 1 × 3 #>   name      x      y #>   <chr> <int>  <dbl> #> 1 d         4 -0.638  rearrange(df, \"name\", c(\"a\", \"c\", \"z\"))  # \"z\" is ignored #> # A tibble: 2 × 3 #>   name      x      y #>   <chr> <int>  <dbl> #> 1 a         1 -1.93  #> 2 c         3 -0.821  rearrange(df, \"name\", c(\"a\", \"c\", \"c\"))  # duplicate \"c\" is dropped #> # A tibble: 2 × 3 #>   name      x      y #>   <chr> <int>  <dbl> #> 1 a         1 -1.93  #> 2 c         3 -0.821"},{"path":"https://stufield.github.io/wranglr/dev/reference/rebalance.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling for Class Imbalances — rebalance","title":"Sampling for Class Imbalances — rebalance","text":"Implements - -sampling analyses binary class imbalances.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/rebalance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling for Class Imbalances — rebalance","text":"","code":"rebalance(data, var, method = c(\"down\", \"up\"))"},{"path":"https://stufield.github.io/wranglr/dev/reference/rebalance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling for Class Imbalances — rebalance","text":"data data frame tibble. example, individual \"analysis\" fold (rsample::analysis()) rsample::vfold_cv() call. var character(1). column name data containing class labels -/-sampling. Assumes binary variable. tidyselect variable selection also supported (see examples). method character(1). One \"\" \"\" (matched). -sampling decreases size major class, whereas -sampling increases (.e. sampling replacement) size per group minor class.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/rebalance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling for Class Imbalances — rebalance","text":"sub- re-sampled data frame either smaller larger data equal class balance.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/rebalance.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sampling for Class Imbalances — rebalance","text":"Stu Field","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/rebalance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sampling for Class Imbalances — rebalance","text":"","code":"xtab <- helpr::cross_tab  # original class distribution xtab(mtcars, vs) #> vs #>   0   1 Sum  #>  18  14  32   # down-sampling `vs` si <- rebalance(mtcars, \"vs\")    # 'down' xtab(si, vs) #> vs #>   0   1 Sum  #>  14  14  28   # up-sampling `vs` & passed variable var <- \"vs\" si <- rebalance(mtcars, var, \"up\") xtab(si, vs) #> vs #>   0   1 Sum  #>  18  18  36   # also supports unquoted strings si  <- rebalance(mtcars, vs) xtab(si, vs) #> vs #>   0   1 Sum  #>  14  14  28"},{"path":"https://stufield.github.io/wranglr/dev/reference/refactor_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Refactor Ghost Level Meta Data — refactor_data","title":"Refactor Ghost Level Meta Data — refactor_data","text":"Refactor meta data fields data frame, removing \"ghost\" levels remain subsetting factored column data frame.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/refactor_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Refactor Ghost Level Meta Data — refactor_data","text":"","code":"refactor_data(data)"},{"path":"https://stufield.github.io/wranglr/dev/reference/refactor_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Refactor Ghost Level Meta Data — refactor_data","text":"data data.frame object containing feature clinical data.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/refactor_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Refactor Ghost Level Meta Data — refactor_data","text":"data.frame object, identical original except factor levels factor class columns refactored remove \"ghost levels\".","code":""},{"path":[]},{"path":"https://stufield.github.io/wranglr/dev/reference/refactor_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Refactor Ghost Level Meta Data — refactor_data","text":"Stu Field","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/refactor_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Refactor Ghost Level Meta Data — refactor_data","text":"","code":"simdata$Sex <- factor(simdata$gender) simdata$Sex #>   [1] M F F M M F M M F F M M M F F M M M M F M M M F F F F M M F M F F F #>  [35] M F F F M M F F M F F M M F F F M M M M M M F M M F F F F F M F F M #>  [69] M F M M M F M M F F F M F F F F F M F M M F M F M M F M F F M F #> Levels: F M  new <- simdata[simdata$Sex == \"M\", ] new$Sex           # ghost levels! #>  [1] M M M M M M M M M M M M M M M M M M M M M M M M M M M M M M M M M M M #> [36] M M M M M M M M M M M M M M #> Levels: F M levels(new$Sex)   # ghost levels! #> [1] \"F\" \"M\"  new2 <- refactor_data(new) new2$Sex #>  [1] M M M M M M M M M M M M M M M M M M M M M M M M M M M M M M M M M M M #> [36] M M M M M M M M M M M M M M #> Levels: M levels(new2$Sex) #> [1] \"M\""},{"path":"https://stufield.github.io/wranglr/dev/reference/remove_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Statistical Outliers — remove_outliers","title":"Remove Statistical Outliers — remove_outliers","text":"Remove statistical outliers (optionally) paired vectors numeric values using statistical criterion based median absolute deviation (\\(6 \\times mad\\)) fold change criterion (5x median). See \"outlier detection\" section information type = argument specification.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/remove_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Statistical Outliers — remove_outliers","text":"","code":"remove_outliers(x, y = NULL, type = \"nonparametric\", ...)"},{"path":"https://stufield.github.io/wranglr/dev/reference/remove_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Statistical Outliers — remove_outliers","text":"x numeric(n). vector numeric values. y Optional. NULL, assume non-paired data performs outlier analysis values x along. NULL, either numeric vector character vector (e.g. class names) ordered order x indicating pairing. type character(1). Matched. Either \"parametric\" \"nonparametric\" determine type outliers detection implementation. ... Additional arguments passed get_outliers().","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/remove_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Statistical Outliers — remove_outliers","text":"tibble columns x y representing numeric vector pair statistical outliers removed.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/remove_outliers.html","id":"outlier-detection","dir":"Reference","previous_headings":"","what":"outlier detection","title":"Remove Statistical Outliers — remove_outliers","text":"2 possible methods used define outlier measurement return value depends method implemented: non-parametric case (default): agnostic distribution. Outlier measurements defined falling outside mad_crit * mad median specified number fold-changes median (.e. fold_crit; e.g. \\(5x\\)).Note: n_sigma ignored. parametric case: mean standard deviation calculated robustly via fit_gauss(). Outliers defined measurements falling outside +/- n_sigma * \\(\\sigma\\) estimated \\(\\mu\\).Note: mad_crit fold_crit ignored.","code":""},{"path":[]},{"path":"https://stufield.github.io/wranglr/dev/reference/remove_outliers.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Remove Statistical Outliers — remove_outliers","text":"Stu Field","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/remove_outliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Statistical Outliers — remove_outliers","text":"","code":"x <- withr::with_seed(101, rnorm(10, mean = 1000, sd = 2)) x <- c(x, 10000)          # create outlier (11L) x1 <- remove_outliers(x)  # 'x' only; no 'y' x1 #> # A tibble: 10 × 2 #>        x     y #>    <dbl> <dbl> #>  1  999.    NA #>  2 1001.    NA #>  3  999.    NA #>  4 1000.    NA #>  5 1001.    NA #>  6 1002.    NA #>  7 1001.    NA #>  8 1000.    NA #>  9 1002.    NA #> 10 1000.    NA  y  <- head(LETTERS, length(x))   # paired 'x' and 'y' x2 <- remove_outliers(x, y)       # final row removed x2 #> # A tibble: 10 × 2 #>        x y     #>    <dbl> <chr> #>  1  999. A     #>  2 1001. B     #>  3  999. C     #>  4 1000. D     #>  5 1001. E     #>  6 1002. F     #>  7 1001. G     #>  8 1000. H     #>  9 1002. I     #> 10 1000. J"},{"path":"https://stufield.github.io/wranglr/dev/reference/rename.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename Elements of a List — rename","title":"Rename Elements of a List — rename","text":"See dplyr::rename(), lists. Rename list elements simply efficiently. Missing elements unchanged unmatched elements ignored.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/rename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename Elements of a List — rename","text":"","code":"# S3 method for class 'list' rename(.data, ...)"},{"path":"https://stufield.github.io/wranglr/dev/reference/rename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename Elements of a List — rename","text":".data named list renamed. ... rename(): <tidy-select> Use new_name = old_name rename selected variables. rename_with(): additional arguments passed onto .fn.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/rename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename Elements of a List — rename","text":"newly named list corresponding expressions passed ....","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/rename.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename Elements of a List — rename","text":"","code":"foo <- list(   a = 1:5,   b = letters[1:10L],   c = data.frame(set = 1:4, col = LETTERS[1:4L]) )  # Map all names rename(foo, super = \"b\", awesome = \"a\", wicked = \"c\") #> $awesome #> [1] 1 2 3 4 5 #>  #> $super #>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" #>  #> $wicked #>   set col #> 1   1   A #> 2   2   B #> 3   3   C #> 4   4   D #>   # Missing names are un-changed rename(foo, super = \"c\", wicked = \"b\") #> $a #> [1] 1 2 3 4 5 #>  #> $wicked #>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" #>  #> $super #>   set col #> 1   1   A #> 2   2   B #> 3   3   C #> 4   4   D #>   # Extra names are ignored rename(foo, super = \"b\", wicked = \"c\", yellow = \"d\") #> $a #> [1] 1 2 3 4 5 #>  #> $super #>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" #>  #> $wicked #>   set col #> 1   1   A #> 2   2   B #> 3   3   C #> 4   4   D #>   # The !!! is supported key <- c(super = \"b\", awesome = \"a\", wicked = \"c\") rename(foo, !!! key) #> $awesome #> [1] 1 2 3 4 5 #>  #> $super #>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" #>  #> $wicked #>   set col #> 1   1   A #> 2   2   B #> 3   3   C #> 4   4   D #>"},{"path":"https://stufield.github.io/wranglr/dev/reference/scale_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale/transform Features (variables) — scale_features","title":"Scale/transform Features (variables) — scale_features","text":"Scale features scalar reference value (named vector) match features contained .data. Columns without corresponding reference value unmodified (warning).","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/scale_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale/transform Features (variables) — scale_features","text":"","code":"scale_features(.data, scale_vec)"},{"path":"https://stufield.github.io/wranglr/dev/reference/scale_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale/transform Features (variables) — scale_features","text":".data data.frame class object. scale_vec named vector scalars, named features .data.","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/scale_features.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Scale/transform Features (variables) — scale_features","text":"Stu Field","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/scale_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale/transform Features (variables) — scale_features","text":"","code":"ref  <- c(mpg = 10.0, wt = 0.1, drat = 1.0, disp = 0.0) new  <- scale_features(mtcars, ref) #> Warning: Missing scalar value for (7) features. They will not be transformed. #> Please check the reference or its names. new #>                     mpg cyl disp  hp drat     wt  qsec vs am gear carb #> Mazda RX4           210   6    0 110 3.90 0.2620 16.46  0  1    4    4 #> Mazda RX4 Wag       210   6    0 110 3.90 0.2875 17.02  0  1    4    4 #> Datsun 710          228   4    0  93 3.85 0.2320 18.61  1  1    4    1 #> Hornet 4 Drive      214   6    0 110 3.08 0.3215 19.44  1  0    3    1 #> Hornet Sportabout   187   8    0 175 3.15 0.3440 17.02  0  0    3    2 #> Valiant             181   6    0 105 2.76 0.3460 20.22  1  0    3    1 #> Duster 360          143   8    0 245 3.21 0.3570 15.84  0  0    3    4 #> Merc 240D           244   4    0  62 3.69 0.3190 20.00  1  0    4    2 #> Merc 230            228   4    0  95 3.92 0.3150 22.90  1  0    4    2 #> Merc 280            192   6    0 123 3.92 0.3440 18.30  1  0    4    4 #> Merc 280C           178   6    0 123 3.92 0.3440 18.90  1  0    4    4 #> Merc 450SE          164   8    0 180 3.07 0.4070 17.40  0  0    3    3 #> Merc 450SL          173   8    0 180 3.07 0.3730 17.60  0  0    3    3 #> Merc 450SLC         152   8    0 180 3.07 0.3780 18.00  0  0    3    3 #> Cadillac Fleetwood  104   8    0 205 2.93 0.5250 17.98  0  0    3    4 #> Lincoln Continental 104   8    0 215 3.00 0.5424 17.82  0  0    3    4 #> Chrysler Imperial   147   8    0 230 3.23 0.5345 17.42  0  0    3    4 #> Fiat 128            324   4    0  66 4.08 0.2200 19.47  1  1    4    1 #> Honda Civic         304   4    0  52 4.93 0.1615 18.52  1  1    4    2 #> Toyota Corolla      339   4    0  65 4.22 0.1835 19.90  1  1    4    1 #> Toyota Corona       215   4    0  97 3.70 0.2465 20.01  1  0    3    1 #> Dodge Challenger    155   8    0 150 2.76 0.3520 16.87  0  0    3    2 #> AMC Javelin         152   8    0 150 3.15 0.3435 17.30  0  0    3    2 #> Camaro Z28          133   8    0 245 3.73 0.3840 15.41  0  0    3    4 #> Pontiac Firebird    192   8    0 175 3.08 0.3845 17.05  0  0    3    2 #> Fiat X1-9           273   4    0  66 4.08 0.1935 18.90  1  1    4    1 #> Porsche 914-2       260   4    0  91 4.43 0.2140 16.70  0  1    5    2 #> Lotus Europa        304   4    0 113 3.77 0.1513 16.90  1  1    5    2 #> Ford Pantera L      158   8    0 264 4.22 0.3170 14.50  0  1    5    4 #> Ferrari Dino        197   6    0 175 3.62 0.2770 15.50  0  1    5    6 #> Maserati Bora       150   8    0 335 3.54 0.3570 14.60  0  1    5    8 #> Volvo 142E          214   4    0 109 4.11 0.2780 18.60  1  1    4    2"},{"path":"https://stufield.github.io/wranglr/dev/reference/simdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Data Object — simdata","title":"Simulated Data Object — simdata","text":"Simulates proteomic data randomly generating data various Bioinformatics related analyses unit tests. Feature names randomly generated seq.xxxx.xx format downstream tools function seamlessly. Model types data can support: Binary classification Continuous regression Survival","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/simdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Data Object — simdata","text":"","code":"simdata"},{"path":"https://stufield.github.io/wranglr/dev/reference/simdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated Data Object — simdata","text":"format simdata (100 x 47) : id sample id number. class_response classification response variable. reg_response regression response variable. time time--event variable survival problems. status event status variable survival problems. SampleId Identical id column; POC tools run. SlideId Randomly generated numeric, used create rownames. Subarray 1s. Used create rownames. SiteId Locations LOTR; POC tools run. age randomly assigned age variable: 18 - 80. gender randomly assigned gender variable: \"F\" \"M\". HybControlNormScale Random continuous data [0.4, 2.5]. NormScale_40 Random continuous data [0.4, 2.5]. NormScale_0_005 Random continuous data [0.4, 2.5]. NormScale_1 Random continuous data [0.4, 2.5]. General features data (see attributes(simdata)): 5 significant classification features 5 significant regression features 5 significant survival features 25 noise features 4 sex/gender features (noise features) PGAM (3896-5 sample handling)","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/simdata.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulated Data Object — simdata","text":"Stu Field","code":""},{"path":"https://stufield.github.io/wranglr/dev/reference/simdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Data Object — simdata","text":"","code":"simdata #>             id class_response reg_response       time status SampleId #> 51966571_1 001        control  -366.358530 0.17938352      1      001 #> 28704098_1 002        control   619.948320 0.16790617      1      002 #> 81969215_1 003        control   132.687007 2.84663191      1      003 #> 68668418_1 004        control  -731.871589 0.06264351      1      004 #> 38935826_1 005        control  -478.352170 0.74376815      1      005 #> 74703475_1 006        control  1058.027731 0.45642321      0      006 #> 36178605_1 007        control  -397.326624 0.26077075      1      007 #> 93904282_1 008        control  1255.940199 1.67379540      0      008 #> 79223225_1 009        control  -148.889393 2.69187321      0      009 #> 68004202_1 010        control   -48.586856 2.05521107      1      010 #> 51134040_1 011        control    48.805940 2.37070639      0      011 #> 18037091_1 012        control     1.539332 1.09891326      0      012 #> 48915223_1 013        control   521.891434 0.38698780      1      013 #> 59046590_1 014        control  -591.406271 0.35353969      0      014 #> 22440191_1 015        control   377.668511 0.60909382      1      015 #> 93503102_1 016        control   223.590179 0.24184832      0      016 #> 10117155_1 017        control    65.130025 0.84508708      1      017 #> 33801297_1 018        control   369.143664 1.74198131      1      018 #> 34887902_1 019        control   690.762266 0.40544055      1      019 #> 56899633_1 020        control    47.792071 0.03857401      0      020 #> 30132003_1 021        control   409.345075 0.01348947      1      021 #> 46713227_1 022        control   567.176472 0.03049982      1      022 #> 65338817_1 023        control  -263.844274 0.25094150      1      023 #> 29347638_1 024        control   170.583015 0.29549647      1      024 #> 69694117_1 025        control   186.122261 0.20317024      1      025 #> 97975242_1 026        control   768.928966 2.57088188      1      026 #> 18797344_1 027        control  -180.631160 1.20413797      0      027 #> 65073939_1 028        control   397.612384 0.93024509      1      028 #> 57485678_1 029        control   936.614710 0.36478432      1      029 #> 83562904_1 030        control  -303.143049 4.05929715      0      030 #> 28728820_1 031        control  -594.032425 0.65710657      0      031 #> 66083414_1 032        control    52.433887 2.19800882      0      032 #> 94112835_1 033        control   329.986005 6.00000000      0      033 #> 26463627_1 034        control    61.624509 6.00000000      0      034 #> 45366525_1 035        control    27.328429 6.00000000      0      035 #> 40869963_1 036        control  1059.778769 0.91009484      1      036 #> 94637211_1 037        control  -243.647544 0.08909227      1      037 #> 95354565_1 038        control   366.942422 1.46872076      1      038 #> 46557342_1 039        control   552.385804 0.42474271      1      039 #> 76936509_1 040        control   308.884189 0.21813831      1      040 #> 91024793_1 041        control   563.661951 1.08514556      1      041 #> 35984450_1 042        control  1278.191185 2.62817379      1      042 #> 54659281_1 043        control   863.139311 0.89050075      0      043 #> 88834253_1 044        control   414.076764 1.21578473      1      044 #> 41009299_1 045        control   368.000629 6.00000000      0      045 #> 33721484_1 046        control  -247.114664 2.34236305      1      046 #> 55789326_1 047        control   256.476993 0.12957692      1      047 #> 25885578_1 048        control   847.788656 1.19069573      1      048 #> 96338158_1 049        control  -111.054888 0.15712049      0      049 #> 19400953_1 050        control   619.894703 3.65505721      1      050 #> 22069839_1 051        disease    21.935977 1.59762411      1      051 #> 16041777_1 052        disease  -318.784940 5.57928833      0      052 #> 23001489_1 053        disease   210.524166 2.33091910      1      053 #> 41068710_1 054        disease  -396.765845 0.04459283      0      054 #> 97703295_1 055        disease   463.475918 6.00000000      0      055 #> 35274802_1 056        disease    43.923120 0.16127635      1      056 #> 75398329_1 057        disease -1013.176358 0.01117662      0      057 #> 42005783_1 058        disease   631.805876 1.79550186      0      058 #> 11949409_1 059        disease   978.133900 0.21124236      1      059 #> 87556508_1 060        disease  -979.031872 4.23236262      1      060 #> 94064776_1 061        disease  1311.695886 1.37694509      1      061 #> 99784020_1 062        disease   323.618907 0.32004800      0      062 #> 84916413_1 063        disease  -467.051325 4.26811450      1      063 #> 68369767_1 064        disease  -771.793855 1.05232750      1      064 #> 15409464_1 065        disease   305.209525 1.14096845      1      065 #> 14727850_1 066        disease   280.023987 0.07449288      1      066 #> 29761404_1 067        disease  -397.568212 3.58416693      1      067 #> 21873937_1 068        disease   745.017674 0.36873582      0      068 #> 90667501_1 069        disease   212.400450 0.30180726      1      069 #> 38278439_1 070        disease   331.981087 4.05281688      1      070 #> 69925630_1 071        disease   456.971156 0.12681748      1      071 #> 54693511_1 072        disease   365.901283 0.29483695      0      072 #> 82074546_1 073        disease  -107.961320 0.37617684      1      073 #> 70477393_1 074        disease   520.955153 1.79466564      0      074 #> 31800607_1 075        disease    94.471364 0.97628145      1      075 #> 65263757_1 076        disease   350.170751 2.74479286      1      076 #> 52672763_1 077        disease  -190.205458 1.13856230      1      077 #> 92815264_1 078        disease   357.325543 4.32927442      1      078 #> 71305641_1 079        disease   476.398020 0.76171477      1      079 #> 88325979_1 080        disease   369.306029 1.38864233      1      080 #> 67769607_1 081        disease   288.647017 6.00000000      0      081 #> 71016048_1 082        disease    -8.869702 0.99076989      1      082 #> 34248161_1 083        disease  -519.153727 0.39097012      0      083 #> 83316951_1 084        disease   511.753572 0.65128739      0      084 #> 63149125_1 085        disease   889.654110 1.71963200      1      085 #> 35094240_1 086        disease  -194.944530 0.05443740      0      086 #> 45697493_1 087        disease  1188.484966 2.27756562      1      087 #> 36965772_1 088        disease  -281.987158 0.06461511      0      088 #> 75692351_1 089        disease   -64.469201 1.71840883      1      089 #> 32994766_1 090        disease  -481.272710 0.37202070      1      090 #> 12262397_1 091        disease   706.061216 1.97756977      1      091 #> 74369248_1 092        disease   -69.400393 0.58784590      1      092 #> 32815252_1 093        disease  -271.458819 3.42300521      1      093 #> 62668101_1 094        disease   371.819090 4.02834213      1      094 #> 65054205_1 095        disease    60.341213 0.72030714      0      095 #> 29655282_1 096        disease   444.759910 2.04826263      1      096 #> 64533397_1 097        disease  -322.819543 4.79924684      1      097 #> 52258642_1 098        disease   531.329183 4.31557334      1      098 #> 33494702_1 099        disease   484.857000 0.11999613      1      099 #> 43721936_1 100        disease   414.117589 3.65114312      1      100 #>             SlideId Subarray    SiteId age gender HybControlNormScale #> 51966571_1 51966571        1  Isengard  56      M           0.6687581 #> 28704098_1 28704098        1 Rivendell  40      F           1.9342019 #> 81969215_1 81969215        1     Shire  19      F           0.8500042 #> 68668418_1 68668418        1     Rohan  59      M           0.8109994 #> 38935826_1 38935826        1    Mordor  21      M           2.0235602 #> 74703475_1 74703475        1    Mordor  41      F           2.0788480 #> 36178605_1 36178605        1     Rohan  20      M           0.4692595 #> 93904282_1 93904282        1    Mordor  22      M           0.5557886 #> 79223225_1 79223225        1  Isengard  50      F           0.9854340 #> 68004202_1 68004202        1  Isengard  39      F           0.4800973 #> 51134040_1 51134040        1    Mordor  37      M           1.7756260 #> 18037091_1 18037091        1  Isengard  25      M           1.2289821 #> 48915223_1 48915223        1     Shire  63      M           0.9798411 #> 59046590_1 59046590        1     Shire  18      F           0.9060018 #> 22440191_1 22440191        1     Shire  40      F           0.5661948 #> 93503102_1 93503102        1     Rohan  49      M           2.0030241 #> 10117155_1 10117155        1 Rivendell  53      M           1.6642666 #> 33801297_1 33801297        1  Isengard  31      M           2.4339930 #> 34887902_1 34887902        1    Mordor  63      M           0.5403746 #> 56899633_1 56899633        1  Isengard  53      F           0.9332586 #> 30132003_1 30132003        1    Mordor  45      M           1.4481293 #> 46713227_1 46713227        1     Shire  29      M           0.6111657 #> 65338817_1 65338817        1     Rohan  30      M           1.8143705 #> 29347638_1 29347638        1     Shire  54      F           1.3149467 #> 69694117_1 69694117        1 Rivendell  62      F           1.2816271 #> 97975242_1 97975242        1 Rivendell  34      F           1.0792600 #> 18797344_1 18797344        1 Rivendell  26      F           0.6114874 #> 65073939_1 65073939        1 Rivendell  32      M           0.6450591 #> 57485678_1 57485678        1     Shire  76      M           1.6141793 #> 83562904_1 83562904        1  Isengard  68      F           0.9410562 #> 28728820_1 28728820        1 Rivendell  75      M           0.7930269 #> 66083414_1 66083414        1    Mordor  57      F           0.8097385 #> 94112835_1 94112835        1     Shire  55      F           0.7725525 #> 26463627_1 26463627        1  Isengard  36      F           1.9137944 #> 45366525_1 45366525        1  Isengard  76      M           1.1196075 #> 40869963_1 40869963        1  Isengard  33      F           1.1286664 #> 94637211_1 94637211        1    Mordor  25      F           0.4649681 #> 95354565_1 95354565        1     Rohan  77      F           2.1177481 #> 46557342_1 46557342        1 Rivendell  42      M           2.1399950 #> 76936509_1 76936509        1 Rivendell  77      M           2.1191111 #> 91024793_1 91024793        1 Rivendell  25      F           0.5702240 #> 35984450_1 35984450        1 Rivendell  64      F           0.7470255 #> 54659281_1 54659281        1  Isengard  20      M           0.4772654 #> 88834253_1 88834253        1  Isengard  19      F           2.0762276 #> 41009299_1 41009299        1    Mordor  40      F           1.7784957 #> 33721484_1 33721484        1     Shire  27      M           0.4781957 #> 55789326_1 55789326        1     Shire  78      M           0.5659031 #> 25885578_1 25885578        1  Isengard  51      F           1.5066016 #> 96338158_1 96338158        1     Rohan  61      F           0.7437863 #> 19400953_1 19400953        1  Isengard  61      F           1.4470800 #> 22069839_1 22069839        1    Mordor  53      M           0.9707410 #> 16041777_1 16041777        1    Mordor  73      M           2.0855649 #> 23001489_1 23001489        1 Rivendell  20      M           1.1102863 #> 41068710_1 41068710        1     Rohan  70      M           0.8432067 #> 97703295_1 97703295        1    Mordor  56      M           1.0737715 #> 35274802_1 35274802        1     Rohan  79      M           1.7568511 #> 75398329_1 75398329        1  Isengard  23      F           1.1287563 #> 42005783_1 42005783        1 Rivendell  52      M           0.7266363 #> 11949409_1 11949409        1     Shire  68      M           2.1992974 #> 87556508_1 87556508        1     Shire  76      F           1.6989137 #> 94064776_1 94064776        1     Rohan  80      F           0.4473520 #> 99784020_1 99784020        1    Mordor  50      F           0.7241925 #> 84916413_1 84916413        1     Shire  53      F           2.1386117 #> 68369767_1 68369767        1    Mordor  54      F           1.6066611 #> 15409464_1 15409464        1 Rivendell  22      M           0.8018099 #> 14727850_1 14727850        1     Shire  59      F           1.7758474 #> 29761404_1 29761404        1  Isengard  23      F           0.8784832 #> 21873937_1 21873937        1 Rivendell  56      M           0.4149355 #> 90667501_1 90667501        1 Rivendell  18      M           1.7321902 #> 38278439_1 38278439        1    Mordor  67      F           0.4513353 #> 69925630_1 69925630        1  Isengard  67      M           0.6218382 #> 54693511_1 54693511        1 Rivendell  49      M           1.8017714 #> 82074546_1 82074546        1     Rohan  60      M           0.7622283 #> 70477393_1 70477393        1  Isengard  77      F           1.9670845 #> 31800607_1 31800607        1 Rivendell  61      M           0.6560524 #> 65263757_1 65263757        1  Isengard  40      M           0.5731941 #> 52672763_1 52672763        1    Mordor  76      F           0.5753140 #> 92815264_1 92815264        1  Isengard  54      F           0.8714542 #> 71305641_1 71305641        1 Rivendell  20      F           2.1855410 #> 88325979_1 88325979        1  Isengard  56      M           1.7953168 #> 67769607_1 67769607        1    Mordor  75      F           0.5256544 #> 71016048_1 71016048        1     Shire  21      F           0.8495099 #> 34248161_1 34248161        1  Isengard  80      F           1.0181898 #> 83316951_1 83316951        1     Shire  51      F           0.8925308 #> 63149125_1 63149125        1     Shire  65      F           1.7510944 #> 35094240_1 35094240        1  Isengard  34      M           1.3152895 #> 45697493_1 45697493        1     Shire  19      F           1.6122018 #> 36965772_1 36965772        1     Shire  58      M           0.7502424 #> 75692351_1 75692351        1 Rivendell  51      M           0.6467586 #> 32994766_1 32994766        1 Rivendell  21      F           0.4591955 #> 12262397_1 12262397        1    Mordor  33      M           1.7918281 #> 74369248_1 74369248        1  Isengard  28      F           1.1108191 #> 32815252_1 32815252        1    Mordor  63      M           0.6682448 #> 62668101_1 62668101        1    Mordor  43      M           0.7472938 #> 65054205_1 65054205        1     Rohan  67      F           1.0610141 #> 29655282_1 29655282        1    Mordor  61      M           0.4070036 #> 64533397_1 64533397        1     Shire  27      F           0.9686046 #> 52258642_1 52258642        1     Rohan  19      F           0.9180056 #> 33494702_1 33494702        1     Rohan  39      M           1.2199588 #> 43721936_1 43721936        1    Mordor  76      F           1.7706666 #>            NormScale_40 NormScale_0_005 NormScale_1 seq.2802.68 #> 51966571_1    1.8977914       0.5510880   0.4316258      2186.8 #> 28704098_1    0.5486117       0.9991240   0.5249539      2591.8 #> 81969215_1    0.7303309       0.4749328   0.5173271      2082.2 #> 68668418_1    0.9150234       0.5462104   1.4652089      3297.6 #> 38935826_1    0.4714962       0.5765177   0.7677587      2664.8 #> 74703475_1    0.7958873       1.2270788   1.0426147      2089.8 #> 36178605_1    0.8878818       0.8771649   2.1669951      2743.7 #> 93904282_1    0.8090488       1.5859510   0.9810348      2869.2 #> 79223225_1    0.8350034       0.4550038   0.5446087      2787.9 #> 68004202_1    1.8692704       1.8277151   1.6157940      2347.3 #> 51134040_1    1.5700662       1.2384780   1.3697496      3255.9 #> 18037091_1    0.5690058       1.4721471   2.1938602      2694.9 #> 48915223_1    1.5530041       1.4052996   1.8017545      2189.4 #> 59046590_1    0.7116108       2.0980595   0.8787269      1392.7 #> 22440191_1    0.5740497       1.0512883   1.1969357      3062.5 #> 93503102_1    0.5603863       0.4237175   0.7158650      2477.5 #> 10117155_1    0.6145297       1.2315381   0.8297476      2491.9 #> 33801297_1    0.5994277       0.4297792   2.3574975      2971.9 #> 34887902_1    0.9043101       2.1032705   2.4514256      2910.6 #> 56899633_1    2.3957467       0.4226262   1.9684478      2797.0 #> 30132003_1    0.7805167       0.8081675   1.0467492      2959.5 #> 46713227_1    0.7725000       0.8013179   1.0183998      2891.1 #> 65338817_1    1.3366064       0.9539156   1.1823144      2537.3 #> 29347638_1    1.3062585       0.8515563   1.2175329      1505.3 #> 69694117_1    0.6852852       1.6742044   2.2210623      2809.9 #> 97975242_1    0.5953375       0.5292483   0.4131328      2471.9 #> 18797344_1    0.4094503       0.5171408   0.7046463      2422.1 #> 65073939_1    0.5467793       0.5334354   1.3409469      1764.6 #> 57485678_1    2.1051071       1.5051524   1.0031141      2260.9 #> 83562904_1    0.7557492       0.4401761   1.3229184      2709.0 #> 28728820_1    1.3492198       1.2645423   1.2934154      3179.3 #> 66083414_1    1.9991294       2.4081095   2.0612513      2448.6 #> 94112835_1    0.6084518       0.4080271   2.4161006      2693.8 #> 26463627_1    1.5128235       2.4876635   0.4359054      2473.1 #> 45366525_1    1.1953518       0.7506631   0.4627864      1811.5 #> 40869963_1    0.4468874       0.4803878   0.4696507      2292.5 #> 94637211_1    0.6885944       1.9696700   2.0374532      2302.9 #> 95354565_1    0.8397504       1.7347271   1.4640219      2470.3 #> 46557342_1    0.4669787       1.9205994   1.6245755      3050.0 #> 76936509_1    1.1821205       0.7475338   1.4406259      2881.6 #> 91024793_1    0.7467050       0.5018319   0.8637865      2417.7 #> 35984450_1    0.7953232       0.6086084   2.0121635      2373.3 #> 54659281_1    1.9277735       0.5460819   1.0720982      2848.5 #> 88834253_1    1.3443178       0.8154008   2.0235663      2778.3 #> 41009299_1    1.8223111       0.6445314   0.4157281      2155.6 #> 33721484_1    1.5949111       1.8792440   0.4441524      2146.3 #> 55789326_1    0.6376180       0.9097808   0.4287579      2682.3 #> 25885578_1    2.4017821       2.1508376   0.4600155      2884.3 #> 96338158_1    1.3867042       1.2375893   1.0494184      2443.8 #> 19400953_1    0.6079925       1.1526422   0.7543813      2940.6 #> 22069839_1    0.5794985       1.7179557   0.4897451      3068.1 #> 16041777_1    0.8815106       0.4632374   0.9959771      3203.6 #> 23001489_1    0.4374603       0.5032618   2.2510820      2965.2 #> 41068710_1    0.7228580       0.7566437   1.4592699      2876.2 #> 97703295_1    0.8387142       2.2544367   0.8619811      3347.8 #> 35274802_1    1.5020578       1.7027729   0.4339579      3573.1 #> 75398329_1    0.6110612       0.9077030   1.3415048      1798.5 #> 42005783_1    1.5315099       0.9248395   1.6246729      3286.4 #> 11949409_1    1.2308628       0.9169315   0.7752558      3187.4 #> 87556508_1    1.9364167       1.7160714   1.3883724      2787.4 #> 94064776_1    0.4043261       1.0910113   2.2509567      3475.5 #> 99784020_1    1.2319403       2.1938794   0.4422558      2805.4 #> 84916413_1    1.4747811       1.1509465   0.5143650      2857.8 #> 68369767_1    1.1896802       1.2511581   1.0471276      3428.7 #> 15409464_1    0.7672162       2.1955839   0.6005902      3859.8 #> 14727850_1    0.9456065       0.5057598   1.0910528      3135.0 #> 29761404_1    0.8366912       0.4114276   0.4054073      2788.9 #> 21873937_1    0.5350332       0.4082586   1.8451487      2405.4 #> 90667501_1    0.5194985       2.4525675   0.6349020      2834.5 #> 38278439_1    0.9945041       1.7063888   1.0318632      2530.1 #> 69925630_1    1.1471238       1.8564287   0.5666301      2870.5 #> 54693511_1    1.7009291       0.8413793   1.2386178      3197.2 #> 82074546_1    0.6231734       2.2175381   0.8348325      2574.1 #> 70477393_1    2.3944497       2.0579852   0.9611063      4324.6 #> 31800607_1    0.9606968       0.9679947   0.5565318      3078.0 #> 65263757_1    0.4552439       0.6711795   0.8811510      3565.1 #> 52672763_1    1.0034597       0.5023806   1.0608425      1855.4 #> 92815264_1    0.4816295       0.6556569   1.1902483      3370.5 #> 71305641_1    1.4329103       2.4505974   0.9412683      2341.9 #> 88325979_1    0.8615478       0.4408286   0.6626439      3459.9 #> 67769607_1    0.8452157       1.4558284   0.7488953      3199.1 #> 71016048_1    1.1801826       1.8925982   1.5132458      2796.2 #> 34248161_1    0.7023509       0.8988669   1.6036853      3662.1 #> 83316951_1    2.3381840       0.7324480   0.7057951      2649.4 #> 63149125_1    1.8111468       0.5399757   1.3951093      2709.7 #> 35094240_1    1.3554078       2.4542748   2.2364297      2499.5 #> 45697493_1    1.7550484       0.4253552   1.8542275      2665.9 #> 36965772_1    0.6125173       0.7028809   0.4117599      3472.6 #> 75692351_1    0.4409188       2.3630621   0.4582291      3216.9 #> 32994766_1    1.7986195       0.6824833   1.9745890      3502.6 #> 12262397_1    0.7446670       0.4517726   1.0121388      2804.9 #> 74369248_1    1.2518454       0.9214535   1.8684741      3188.2 #> 32815252_1    1.2376328       2.4536312   0.8703057      3122.1 #> 62668101_1    0.8709562       1.3321447   0.6183020      2286.9 #> 65054205_1    0.7034331       0.4844343   1.5180832      3889.2 #> 29655282_1    1.3821059       2.0272198   0.8524708      3067.2 #> 64533397_1    1.1303578       0.5502213   1.9579061      3382.8 #> 52258642_1    2.0213632       1.9021509   1.2274735      3477.6 #> 33494702_1    0.4537811       0.6920954   0.9789458      2974.7 #> 43721936_1    2.4595364       1.1665982   1.4883103      2847.1 #>            seq.9251.29 seq.1942.70 seq.5751.80 seq.9608.12 seq.3459.49 #> 51966571_1      2699.1      2189.8      2725.1      2704.7      2304.2 #> 28704098_1      2194.0      2521.1      2490.7      3344.4      2826.8 #> 81969215_1      2670.6      2044.5      2341.0      3293.3      1786.5 #> 68668418_1      1935.3      2579.0      2035.3      2334.5      2564.3 #> 38935826_1      3216.5      2172.7      1756.3      1357.4      1892.5 #> 74703475_1      3490.2      3383.6      1962.4      3748.8      2952.7 #> 36178605_1      2316.4      2858.4      3000.0      2833.5      2522.5 #> 93904282_1      1977.9      2955.1      2189.4      2770.7      2985.7 #> 79223225_1      2784.9      2692.1      1807.8      2493.3      3169.0 #> 68004202_1      2432.5      3341.1      3434.6      2755.1      2323.1 #> 51134040_1      3700.8      2182.1      2712.6      2417.8      2837.9 #> 18037091_1      2480.4      2269.2      2380.7      2710.3      2944.5 #> 48915223_1      2844.9      3216.1      3029.2      2299.9      2723.8 #> 59046590_1      2514.0      2174.7      2943.2      1814.9      1460.9 #> 22440191_1      2128.4      2396.3      2190.4      2993.9      2432.0 #> 93503102_1      2594.4      2303.6      3603.1      3259.9      2667.5 #> 10117155_1      1597.5      2340.0      2372.5      2345.6      2610.0 #> 33801297_1      3232.8      2360.4      1787.8      1873.4      2034.8 #> 34887902_1      2576.6      2747.1      2427.8      2821.1      2293.5 #> 56899633_1      3586.3      2411.3      2603.8      2477.6      2512.7 #> 30132003_1      2737.8      2247.0      3654.0      1633.4      2865.2 #> 46713227_1      2145.0      3171.5      2552.9      2501.1      2382.1 #> 65338817_1      2805.4      2392.7      2728.5      2184.8      2424.5 #> 29347638_1      2033.0      2410.2      2461.4      2329.5      2699.2 #> 69694117_1      1873.2      2449.9      2333.0      1921.7      2895.3 #> 97975242_1      2645.7      2856.3      2482.6      3401.6      2457.4 #> 18797344_1      2278.4      2463.2      2893.8      2334.4      2117.7 #> 65073939_1      2500.6      2481.2      3537.6      1697.2      2684.0 #> 57485678_1      2537.2      2159.2      3013.7      2598.6      3126.6 #> 83562904_1      2205.2      2337.9      3104.0      2631.6      1727.4 #> 28728820_1      2215.7      2530.1      1884.3      2007.1      1972.8 #> 66083414_1      2432.4      2205.6      2991.9      1055.5      2338.3 #> 94112835_1      3089.0      2765.7      2610.0      2179.8      2011.0 #> 26463627_1      1738.2      1740.8      1766.4      2785.3      3253.2 #> 45366525_1      2797.0      2653.3      2760.5      2470.1      2705.9 #> 40869963_1      2666.5      1731.8      2420.6      2450.9      3800.2 #> 94637211_1      3031.5      2349.5      3232.3      2780.4      2153.3 #> 95354565_1      2347.9      2235.9      2117.0      1906.8      3395.8 #> 46557342_1      2685.0      2174.0      2284.9      3048.4      3047.1 #> 76936509_1      2633.5      2471.6      2036.9      2497.3      2698.2 #> 91024793_1      2228.7      1542.8      2411.4      2853.7      2894.6 #> 35984450_1      3103.9      3088.3      2701.0      3017.1      3711.7 #> 54659281_1      3080.2      1667.5      2134.1      2611.7      3099.8 #> 88834253_1      2850.1      2268.2      2915.2      2060.6      2434.1 #> 41009299_1      3293.4      1942.0      1896.0      3081.5      2107.1 #> 33721484_1      2779.2      2124.6      1976.0      1499.9      2390.4 #> 55789326_1      1861.7      3543.6      3220.6      2227.6      3060.7 #> 25885578_1      2213.4      2508.7      1992.1      2372.2      2828.0 #> 96338158_1      1887.7      1856.8      2706.0      2416.9      1965.1 #> 19400953_1      2263.3      1679.7      2309.5      3010.2      2188.0 #> 22069839_1      3446.8      3736.9      3537.2      3480.8      2470.7 #> 16041777_1      2476.4      3338.6      3947.8      2697.8      1324.7 #> 23001489_1      3985.7      3190.0      2698.5      2623.6      2417.1 #> 41068710_1      2808.2      2903.6      2804.6      2222.2      2455.3 #> 97703295_1      3827.1      3788.9      2791.9      2273.1      1952.3 #> 35274802_1      3756.1      3298.1      2812.2      3028.2      2377.2 #> 75398329_1      3041.5      2413.2      2816.7      3254.7      2415.8 #> 42005783_1      3283.6      2922.2      2852.2      1951.1      3309.3 #> 11949409_1      2487.7      2040.5      3720.9      2497.8      3163.8 #> 87556508_1      3161.5      2902.4      2651.2      3267.9      2107.3 #> 94064776_1      3521.8      1703.8      2805.9      2773.5      2592.4 #> 99784020_1      3049.5      3657.0      3326.3      4082.7      2168.2 #> 84916413_1      2772.9      2682.2      3562.4      3622.9      1728.4 #> 68369767_1      2672.1      2785.0      2613.9      3297.7      1777.2 #> 15409464_1      2982.0      2915.3      2746.0      3002.4      2103.9 #> 14727850_1      3534.6      3306.1      3261.8      3139.7      2927.2 #> 29761404_1      2758.0      3339.2      3508.9      2647.0      2036.9 #> 21873937_1      2939.5      3284.0      2874.4      3314.0      2997.7 #> 90667501_1      2352.9      2713.7      2285.0      3740.1      2922.6 #> 38278439_1      3247.2      2318.4      3854.6      3541.7      1865.9 #> 69925630_1      3654.0      2805.6      3717.5      2593.4      2754.1 #> 54693511_1      3748.5      3139.0      2644.8      2190.6      2511.9 #> 82074546_1      3407.4      2588.5      2967.5      2945.2      2248.2 #> 70477393_1      2065.1      2965.6      2120.3      3220.4      2499.4 #> 31800607_1      3241.0      2416.2      3284.9      3675.5      2832.7 #> 65263757_1      3228.1      2995.8      3806.2      2340.7      2087.1 #> 52672763_1      2823.3      3064.4      2181.4      3182.2      1508.2 #> 92815264_1      3085.2      2927.1      2610.2      3116.7      2876.0 #> 71305641_1      2568.0      2918.0      2679.4      3597.0      3036.0 #> 88325979_1      3339.6      3881.8      2659.4      2986.0      3520.4 #> 67769607_1      2836.4      3381.3      1983.4      2821.4      2207.0 #> 71016048_1      2215.5      3555.7      3250.5      2426.6      2762.1 #> 34248161_1      2816.3      2538.4      2234.1      2741.3      2640.9 #> 83316951_1      3682.2      3082.2      2987.5      2818.9      2189.5 #> 63149125_1      2832.9      3577.4      3296.5      4175.3      2465.0 #> 35094240_1      3366.4      2971.7      2900.9      4223.3      2912.9 #> 45697493_1      3473.3      1935.3      3446.0      2916.6      2664.6 #> 36965772_1      3002.2      3172.4      2987.1      2478.2      1714.2 #> 75692351_1      2823.8      2047.5      2676.2      2013.5      1231.8 #> 32994766_1      2735.2      2594.4      3323.2      3257.3      2493.1 #> 12262397_1      3369.8      3662.0      2783.1      2454.7      2928.8 #> 74369248_1      2468.3      3307.8      3886.3      4142.3      2574.7 #> 32815252_1      3123.1      3545.8      2990.9      2557.2      2382.4 #> 62668101_1      2855.3      3153.3      3426.4      3055.6      2156.2 #> 65054205_1      1867.6      2944.9      3102.6      4905.1      1533.3 #> 29655282_1      2295.6      2537.8      1496.0      2445.5      2748.4 #> 64533397_1      3458.0      3796.5      2316.9      3153.8      2400.6 #> 52258642_1      2904.4      3022.5      2787.9      2446.6      2072.5 #> 33494702_1      3401.6      2642.4      3118.4      3173.8      2897.6 #> 43721936_1      3943.7      3432.6      1828.6      2563.4      2756.6 #>            seq.3865.56 seq.3363.21 seq.4487.88 seq.5994.84 seq.9011.72 #> 51966571_1       865.1      1984.3      1702.9      2256.7      2240.4 #> 28704098_1      2197.1      2328.6      2591.1      2870.7      1911.3 #> 81969215_1      2400.6      2823.5      2406.5      2515.3      2805.0 #> 68668418_1      2100.2      2073.9      2304.8      2273.7      2517.0 #> 38935826_1      2323.4      2371.2      2103.2      1964.7      2553.2 #> 74703475_1      3255.8      2590.7      3185.4      4230.9      2516.7 #> 36178605_1      1343.5      2438.9      1454.8      2210.4      2649.1 #> 93904282_1      2979.9      3378.8      2735.1      2580.7      2356.0 #> 79223225_1      1729.9      2359.8      2275.5      2561.1      2592.1 #> 68004202_1      1607.2      2254.4      1303.5      2278.5      2293.3 #> 51134040_1      2668.8      2353.3      2818.3      2412.0      2107.0 #> 18037091_1      2307.6      1801.2      2737.4      2501.6      1993.3 #> 48915223_1      2870.6      2484.4      3172.2      2733.1      2180.3 #> 59046590_1      1650.1      2163.6      1701.8      1778.8      2216.5 #> 22440191_1      2655.0      2837.0      2665.0      2061.5      3438.3 #> 93503102_1      2134.8      1627.1      2468.5      2062.3      2121.7 #> 10117155_1      2252.2      3192.3      2637.4      2880.2      2005.0 #> 33801297_1      2902.6      2904.3      3215.3      2427.7      2556.5 #> 34887902_1      3264.6      2951.2      2679.8      2801.5      2586.4 #> 56899633_1      3280.8      3034.5      2795.7      2485.8      2059.3 #> 30132003_1      2164.8      2869.8      2629.9      2086.7      2132.2 #> 46713227_1      2856.1      2751.8      3310.7      3110.6      1635.4 #> 65338817_1      2106.6      2068.5      2150.1      2316.0      2760.9 #> 29347638_1      2668.5      2736.8      3302.2      2555.4      2441.6 #> 69694117_1      2670.3      1830.6      2705.8      3303.1      3075.5 #> 97975242_1      3520.4      3251.2      3751.8      2583.7      2334.1 #> 18797344_1      2944.4      2436.1      2172.7      1871.9      2989.7 #> 65073939_1      2554.7      2649.0      2164.9      2281.9      2796.1 #> 57485678_1      2385.9      3400.9      2694.3      2783.0      2991.5 #> 83562904_1      2395.0      2156.4      2875.3      2067.4      3235.2 #> 28728820_1      2137.9      2323.6      1622.4      1625.0      2082.6 #> 66083414_1      2666.6      2278.2      2211.2      2114.1      2393.9 #> 94112835_1      2126.5      2092.3      2072.4      3002.4      2943.5 #> 26463627_1      1860.0      2932.6      1586.8      2073.2      3259.4 #> 45366525_1      2625.5      1718.7      2644.0      2444.6      3761.5 #> 40869963_1      2874.9      2720.6      2608.1      2807.1      3345.8 #> 94637211_1      2470.6      1969.7      1733.6      2558.9      2586.5 #> 95354565_1      2914.3      2131.4      2654.4      2844.0      2307.8 #> 46557342_1      2486.0      2702.8      3020.9      2545.1      2400.7 #> 76936509_1      2561.1      2434.4      2249.6      1996.0      2096.5 #> 91024793_1      2393.2      2359.3      2236.5      2186.8      3001.2 #> 35984450_1      3421.6      3274.8      3462.5      3503.0      1623.3 #> 54659281_1      2959.3      3145.5      2198.9      3000.7      1988.3 #> 88834253_1      3121.3      2538.8      3373.0      2524.3      1862.9 #> 41009299_1      2486.9      2795.4      2450.2      2960.3      3011.0 #> 33721484_1      2858.6      2653.6      3523.7      2589.5      2315.4 #> 55789326_1      3130.8      2376.9      2931.2      2151.2      2288.1 #> 25885578_1      3602.9      1674.1      2993.5      2430.3      3763.4 #> 96338158_1      2384.8      2456.4      2513.8      3187.8      2096.1 #> 19400953_1      2497.4      3999.1      3064.5      3418.3      3403.5 #> 22069839_1      2129.9      2777.5      1949.1      1297.0      2532.8 #> 16041777_1      3040.0      2138.2      3135.3      2706.1      2661.1 #> 23001489_1      2486.8      2484.5      2374.6      2758.5      2640.4 #> 41068710_1      2330.0      1536.3      2913.5      2467.8      1838.1 #> 97703295_1      2075.2      2635.3      3066.7      3121.1      2407.2 #> 35274802_1      3113.0      2574.1      3030.6      2443.4      2487.0 #> 75398329_1      1995.1      2466.2      2110.1      1566.1      1921.8 #> 42005783_1      3042.2      2587.6      2268.9      2898.7      1740.2 #> 11949409_1      1625.4      2974.0      1788.7      2972.3      2023.1 #> 87556508_1      1819.3      1178.9      1910.4      2678.6      2224.5 #> 94064776_1      2463.6      2507.0      2766.1      2901.6      2970.4 #> 99784020_1      2773.7      2779.6      2336.9      2927.0      2323.8 #> 84916413_1      2041.7      2139.9      1972.1      1649.4      3344.7 #> 68369767_1      2839.5      2650.2      2190.6      2136.7      1843.4 #> 15409464_1      2185.3      2587.6      1815.6      3511.4      2907.3 #> 14727850_1      2080.7      1369.8      2401.1      3292.0      2033.0 #> 29761404_1      2236.8      1950.0      2333.9      2278.5      2647.9 #> 21873937_1      2517.4      2660.6      2271.3      2582.3      2412.0 #> 90667501_1      2419.2      2658.6      2860.1      3745.3      2971.0 #> 38278439_1      2184.6      2654.1      2374.9      2859.2      3257.7 #> 69925630_1      2696.4      2618.1      2665.8      3234.4      2278.8 #> 54693511_1      2179.5      2171.0      2223.4      2137.5      2181.5 #> 82074546_1      2884.7      2361.6      2208.4      1957.7      3000.7 #> 70477393_1      3050.1      3269.3      2866.5      2532.0      2154.7 #> 31800607_1      1955.7      2978.6      1924.7      2571.8      3349.8 #> 65263757_1      2900.5      1831.0      2571.5      2717.2      2841.6 #> 52672763_1      2171.8      2628.2      1701.6      2655.5      3245.9 #> 92815264_1      2972.7      3095.9      2674.9      1842.8      2771.3 #> 71305641_1      3630.8      2752.7      3720.1      2207.6      2316.0 #> 88325979_1      3310.5      2015.8      2971.5      2830.3      2008.1 #> 67769607_1      2588.6      2411.0      1895.0      2255.9      2429.4 #> 71016048_1      2188.9      3421.9      2300.1      2297.5      2878.7 #> 34248161_1      1895.1      2077.4      1448.0      2196.6      3304.8 #> 83316951_1      2169.3      2493.1      1972.6      2439.9      2310.6 #> 63149125_1      2712.2      3267.2      2595.4      2845.4      3264.7 #> 35094240_1      2705.4      2378.0      2380.7      2172.6      1616.1 #> 45697493_1      2040.2      3075.6      2592.0      2614.1      2483.6 #> 36965772_1      1862.6      2038.8      2487.4      1633.1      1785.8 #> 75692351_1      2846.0      2205.5      2631.0      2321.7      2121.9 #> 32994766_1      2243.6      2583.9      2450.1      1714.5      1416.6 #> 12262397_1      1897.5      2959.5      2691.8      2586.7      2635.4 #> 74369248_1      2617.5      1472.5      2987.3      1527.1      2996.3 #> 32815252_1      2195.8      2065.1      2404.4      2406.2      2488.3 #> 62668101_1      1956.4      2749.9      1806.8      2841.3      2164.5 #> 65054205_1      2658.5      1988.0      2836.2      3218.6      1549.4 #> 29655282_1      2159.4      3028.9      2430.7      2083.0      2163.9 #> 64533397_1      2806.9      2222.7      2701.2      1921.1      2484.3 #> 52258642_1      2771.7      2459.5      2726.1      1992.1      2232.7 #> 33494702_1      2837.9      2281.4      2421.9      1988.5      2837.7 #> 43721936_1      3057.7      3104.8      2979.3      2654.9      2877.4 #>            seq.2902.23 seq.2260.48 seq.4936.96 seq.2277.95 seq.2953.31 #> 51966571_1      2543.3      2775.9      2758.1      1212.2      2608.4 #> 28704098_1      3077.6      2131.6      2443.0      3062.4      2228.8 #> 81969215_1      2809.5      2075.5      1346.7      2688.0      2945.6 #> 68668418_1      2872.8      3087.1      3240.3      1722.1      2798.0 #> 38935826_1      2835.6      2302.6      2719.9      2800.1      3317.8 #> 74703475_1      3690.1      2378.7      2955.7      3081.6      2844.6 #> 36178605_1      2979.5      2528.6      2225.5      2007.9      1859.4 #> 93904282_1      2320.8      2317.3      2917.6      2181.1      2393.4 #> 79223225_1      2283.9      2681.3      2044.0      1706.9      3448.3 #> 68004202_1      2055.7      2476.5      1899.1      2314.4      3388.4 #> 51134040_1      2942.9      2917.9      3216.2      2563.9      2783.3 #> 18037091_1      2833.0      3291.2      2636.6      2908.8      2507.9 #> 48915223_1      3214.8      2965.7      3113.1      3010.7      2691.5 #> 59046590_1      2543.4      2034.2      2974.5      1649.3      2477.4 #> 22440191_1      2721.7      1480.7      2339.8      2205.6      2517.2 #> 93503102_1      2190.1      3032.0      1993.5      1270.9      2584.5 #> 10117155_1      2611.5      4059.5      2276.9      3322.4      3082.5 #> 33801297_1      2685.3      1886.1      1935.6      2829.1      2477.9 #> 34887902_1      2525.2      2112.5      2440.2      2796.6      2449.8 #> 56899633_1      2398.9      2639.1      2924.8      2601.2      2358.3 #> 30132003_1      2555.6      2873.4      2762.6      2905.5      3270.4 #> 46713227_1      2792.3      2716.9      2792.7      2557.8      2582.6 #> 65338817_1      3117.2      2143.2      2600.5      2818.6      3153.8 #> 29347638_1      2669.9      2327.2      3054.9      2805.5      3144.1 #> 69694117_1      3143.9      2686.0      3422.3      3056.0      2796.4 #> 97975242_1      1907.2      2434.3      2884.2      2349.7      2358.5 #> 18797344_1      2468.5      1260.1      2697.5      2235.2      3127.9 #> 65073939_1      2075.7      2500.4      3073.3      2999.7      2954.9 #> 57485678_1      1817.0      2758.4      2840.6      2441.3      2036.0 #> 83562904_1      2182.8      2498.2      2636.5      2119.0      3120.1 #> 28728820_1      2621.5      2531.3      2245.1      2511.0      2576.7 #> 66083414_1      2366.0      2075.2      2287.5      2345.2      3026.0 #> 94112835_1      2882.0      3247.8      2618.6      2984.8      2122.9 #> 26463627_1      2114.3      2842.0      2027.4      3002.6      1758.9 #> 45366525_1      2767.0      3135.7      2374.7      3270.0      2930.6 #> 40869963_1      2706.4      2393.7      3089.7      2214.2      2297.7 #> 94637211_1      2290.6      1756.3      2538.1      3431.2      2386.3 #> 95354565_1      2362.1      2124.7      1518.8      1993.9      2967.0 #> 46557342_1      1695.1      2028.2      3465.2      3171.1      2267.1 #> 76936509_1      1947.7      2048.5      2405.3      2138.0      2181.2 #> 91024793_1      3014.1      1999.1      3212.5      1969.2      3171.9 #> 35984450_1      1775.5      2577.3      2276.2      2802.3      2590.8 #> 54659281_1      2936.9      2780.8      1516.0      2592.8      3146.3 #> 88834253_1      3244.9      2126.9      1796.9      2575.5      1656.0 #> 41009299_1      1776.8      3409.2      2092.6      2329.0      2089.5 #> 33721484_1      2367.8      2457.8      2322.4      2142.2      2068.9 #> 55789326_1      2304.5      1701.0      1971.3      2266.8      2549.4 #> 25885578_1      2586.1      2474.8      3191.3      2999.3      2312.2 #> 96338158_1      2669.6      1165.5      2493.6      2394.1      2862.0 #> 19400953_1      2591.0      2302.9      2720.6      2699.0      1601.3 #> 22069839_1      2204.7      3173.0      3277.4      2133.5      2168.1 #> 16041777_1      2407.2      3144.7      1770.7      2784.7      2188.1 #> 23001489_1      1821.6      2619.5      2453.0      1981.5      2460.2 #> 41068710_1      2905.8      2669.6      2043.2      2280.3      2717.8 #> 97703295_1      1927.0      2667.6      2083.7      3821.0      3485.5 #> 35274802_1      2505.1      2121.2      3233.9      2458.7      2201.6 #> 75398329_1      2681.3      2395.7      2705.7      2864.8      2223.7 #> 42005783_1      2691.0      2159.8      2249.6      2499.3      2848.0 #> 11949409_1      2730.5      2159.9      2743.6      2373.4      2422.2 #> 87556508_1      3435.6      2239.9      2387.0      2873.1      3174.4 #> 94064776_1      2871.8      2053.6      2252.1      3262.4      1965.7 #> 99784020_1      2755.0      2659.7      3287.7      2894.0      3032.2 #> 84916413_1      2600.8      2803.0      1846.5      3012.1      1843.6 #> 68369767_1      1730.4      2435.4      2425.2      2312.3      3531.8 #> 15409464_1      2985.7      2365.8      1944.8      2530.0      2565.7 #> 14727850_1      2336.2      1658.2      2741.7      2003.0      2384.2 #> 29761404_1      2744.1      2980.5      2352.4      1836.6      2301.3 #> 21873937_1      2283.3      2188.4      2480.5      2781.0      2944.7 #> 90667501_1      2743.5      2333.3      2334.9      1677.1      2763.1 #> 38278439_1      2208.3      3205.5      2421.5      2830.2      2414.4 #> 69925630_1      2693.7      1988.2      2462.8      2283.3      2579.3 #> 54693511_1      2444.7      2931.9      2744.6      2472.3      2257.2 #> 82074546_1      3370.0      3433.5      2347.4      1917.7      2020.5 #> 70477393_1      3274.0      3065.6      2590.5      2360.5      2590.3 #> 31800607_1      3182.7      2777.3      2156.4       826.3      2860.9 #> 65263757_1      2117.3      3680.1      3264.5      2906.6      2315.2 #> 52672763_1      1839.4      2388.8      2776.8      2585.9      2618.8 #> 92815264_1      2049.4      1961.6      2787.2      2224.6      2167.0 #> 71305641_1      3075.7      2865.8      3592.2      2715.7      2101.6 #> 88325979_1      2793.4      3113.8      2730.2      2264.2      2474.2 #> 67769607_1       729.8      2810.4      3605.6      2149.1      3143.5 #> 71016048_1      2296.0      1950.0      3077.1      2709.5      2392.9 #> 34248161_1      2848.6      2052.2      2500.7      2605.9      2212.6 #> 83316951_1      2627.0      3051.9      2538.4      2646.4      1764.6 #> 63149125_1      1499.1      2563.7      1337.6      2620.1      1983.6 #> 35094240_1      2824.3      1905.5      2026.2      1595.3      1846.7 #> 45697493_1      2847.7      2362.9      1734.8      2393.7      2080.9 #> 36965772_1      1606.3      2704.1      2218.2      1809.6      1934.7 #> 75692351_1      2303.6      2452.6      1302.3      2296.7      2684.4 #> 32994766_1      2522.5      2489.0      2580.7      2870.5      2399.1 #> 12262397_1      1629.6      2318.9      2188.9      2709.0      1861.2 #> 74369248_1      2793.7      3024.9      2684.7      1833.1      2101.0 #> 32815252_1      2984.3      2721.6      2086.4      3055.1      2579.5 #> 62668101_1      2141.2      2482.5      2682.5      2458.9      2807.4 #> 65054205_1      1963.0      2794.9      2212.0      2574.6      2844.0 #> 29655282_1      1086.5      1980.6      2046.6      2404.8      2476.5 #> 64533397_1      1939.1      1773.3      2401.0      2515.7      3665.2 #> 52258642_1      2341.2      3224.6      1887.9      2881.6      2211.2 #> 33494702_1      2885.9      1908.9      3162.5      2799.2      2984.2 #> 43721936_1      2835.9      2635.9      1908.2      3249.2      2361.2 #>            seq.3032.11 seq.4330.4 seq.4914.10 seq.3896.5 seq.5002.7 #> 51966571_1      2842.4     3107.4      1080.2     1908.9     1677.7 #> 28704098_1      2442.4     1726.1      3255.7     2728.1     2090.0 #> 81969215_1      2321.8     2348.9      3221.2     2380.9     1660.9 #> 68668418_1      2447.1     3019.6      2752.7     2906.1     2712.1 #> 38935826_1      2522.4     2116.1      2121.4     2134.7     2325.6 #> 74703475_1      1636.9     3262.3      2624.6     1402.9     2473.8 #> 36178605_1      3277.9     1289.0      2341.6     3000.8     2362.7 #> 93904282_1      2888.2     2778.2      2551.5     3083.7     2757.7 #> 79223225_1      1950.7     3052.8      2394.2     2884.8     1847.2 #> 68004202_1      1636.0     2583.2      2635.3     3294.0     3349.6 #> 51134040_1      2713.8     2387.3      2346.5     2675.7     2248.7 #> 18037091_1      2872.3     2385.8      2944.9     2232.8     2347.5 #> 48915223_1      2932.6     2373.4      2694.0     2357.6     2172.6 #> 59046590_1      2652.7     3534.1      1362.8     2473.6     2636.8 #> 22440191_1      2443.0     3291.6      2225.0     2532.2     1637.9 #> 93503102_1      2711.8     1978.7      2665.2     2210.7     2255.2 #> 10117155_1      2101.1     2495.8      2200.9     2493.7     2432.0 #> 33801297_1      2197.9     1833.0      1869.0     2952.8     2296.5 #> 34887902_1      3357.5     2573.3      2881.6     2244.6     3276.2 #> 56899633_1      2142.0     2106.1      2920.5     2607.8     2932.7 #> 30132003_1      2433.4     2355.5      2579.1     2208.1     2674.3 #> 46713227_1      2000.1     2833.4      3023.2     1891.5     1870.8 #> 65338817_1      3436.9     2431.7      2173.6     2585.1     2737.9 #> 29347638_1      2331.3     2612.0      2019.6     2565.5     2936.5 #> 69694117_1      2986.6     3058.6      2399.4     2380.2     2228.2 #> 97975242_1      2993.9     1780.8      2846.8     2216.8     2597.2 #> 18797344_1      2029.4     2817.2      2001.0     2519.5     2699.4 #> 65073939_1      2674.6     2250.4      2000.2     1544.4     2565.3 #> 57485678_1      2202.8     3063.1      2318.3     2487.5     2202.7 #> 83562904_1      1308.9     2449.9      3028.8     2832.5     2850.9 #> 28728820_1      3039.0     1945.1      3039.5     3161.4     2423.0 #> 66083414_1      2834.1     2829.0      3119.0     4087.1     2793.0 #> 94112835_1      2017.7     2478.4      2927.1     1565.7     3083.9 #> 26463627_1      1512.4     2814.2      2093.2     1825.9     1348.7 #> 45366525_1      2207.6     2031.6      2316.1     3651.8     2910.1 #> 40869963_1      2984.6     2321.3      3058.8     2627.7     2861.1 #> 94637211_1      2776.1     2477.5      2556.9     2934.2     2548.8 #> 95354565_1      2458.9     2326.0      2277.7     2677.9     3318.8 #> 46557342_1      1661.6     2320.5      1777.1     1927.3     2230.3 #> 76936509_1      3106.3     2697.8      2307.8     2647.9     2273.7 #> 91024793_1      3000.2     2008.0      2796.6     2152.0     1878.9 #> 35984450_1      2859.7     2488.6      2622.5     3092.5     2522.1 #> 54659281_1      2077.8     2057.7      1627.1     3262.6     2503.5 #> 88834253_1      2811.0     2742.5      2531.2     2710.4     2003.2 #> 41009299_1      2138.7     2084.2      1957.0     3279.6     2857.6 #> 33721484_1      2275.3     3086.6      2446.2     3314.2     2800.1 #> 55789326_1      1902.2     2530.5      2725.6     2586.6     2472.5 #> 25885578_1      2695.2     2578.4      3047.2     2330.4     2848.9 #> 96338158_1      2241.8     2734.5      2953.0     1861.4     2907.2 #> 19400953_1      2954.9     2772.6      2001.2     2530.2     1339.7 #> 22069839_1      2938.5     2697.8      2142.1     1932.8     2056.6 #> 16041777_1      2091.9     2039.3      2711.3     2468.3     2818.5 #> 23001489_1      3269.6     2161.7      2716.5     2133.7     3249.5 #> 41068710_1      3187.3     1528.1      2542.3     3037.0     1749.4 #> 97703295_1      2258.4     2560.0      2776.0     3239.4     3845.4 #> 35274802_1      2775.2     3133.0      2231.1     1233.5     2488.2 #> 75398329_1      2071.3     1951.0      2562.9     2090.1     2379.8 #> 42005783_1      2146.5     2719.0      3001.9     2659.4     2053.0 #> 11949409_1      1451.5     2808.2      3035.9     2014.9     2728.7 #> 87556508_1      3049.7     2508.9      2274.8     2306.9     2300.3 #> 94064776_1      2671.0     1880.4      2979.2     2481.9     3083.8 #> 99784020_1      2745.4     2247.9      2952.2     2893.7     2063.3 #> 84916413_1      2034.0     3158.4      1884.3     2714.6     2782.0 #> 68369767_1      1786.1     2897.2      2354.8     2828.2     2970.1 #> 15409464_1      2987.9     2742.5      1673.9     2125.8     2016.2 #> 14727850_1      1726.8     3685.5      2518.7     2505.9     2754.3 #> 29761404_1      2508.9     2359.1      1478.7     2196.6     1874.8 #> 21873937_1      2112.6     2599.5      2555.6     3203.0     2575.0 #> 90667501_1      2385.3     2905.1      2655.6     2185.0     2652.6 #> 38278439_1      2362.8     2438.9      2180.5     2062.7     2351.4 #> 69925630_1      3398.0     3003.9      2966.4     1903.5     2067.3 #> 54693511_1      2260.9     2758.8      2363.7     2683.8     2036.2 #> 82074546_1      2202.6     2385.0      3120.9     2150.0     3606.8 #> 70477393_1      1371.0     2416.2      1969.7     2287.3     2672.1 #> 31800607_1      3341.3     1262.0      3444.1     3006.9     2635.0 #> 65263757_1      2536.1     2199.4      1916.0     2710.3     1952.0 #> 52672763_1      2280.0     2515.8      2709.5     3162.7     2070.1 #> 92815264_1      2813.3     3113.1      1673.8     3022.2     2064.1 #> 71305641_1      2100.1     2150.4      2588.5     2173.5     2050.1 #> 88325979_1      1936.0     1747.9      2428.0     1670.1     3163.7 #> 67769607_1      1987.5     2387.4      3681.4     1745.0     2763.3 #> 71016048_1      2535.5     2495.5      3108.5     2656.4     2741.5 #> 34248161_1      2690.9     1760.8      2701.6     1551.2     2580.7 #> 83316951_1      1688.7     1576.1      2818.8     2197.4     2375.7 #> 63149125_1      3450.3     2077.0      2055.5     2324.5     2102.9 #> 35094240_1      2141.9     3127.9      1842.4     1994.8     3413.9 #> 45697493_1      2690.2     1824.7      2589.1     2275.8     2909.1 #> 36965772_1      2720.4     2661.9      1788.1     2934.0     2862.7 #> 75692351_1      2628.7     2559.4      1748.2     2539.6     2406.0 #> 32994766_1      2410.3     2824.8      1962.3     2166.7     2840.0 #> 12262397_1      2154.9     2840.8      2570.9     2446.3     2757.6 #> 74369248_1      2499.8     3758.8      2631.1     2737.6     2463.0 #> 32815252_1      2782.8     2651.3      3097.0     2081.6     3059.4 #> 62668101_1      1895.6     2168.1      1656.6     2714.1     2836.8 #> 65054205_1      2326.9     2531.5      2620.0     2177.0     1878.8 #> 29655282_1      2174.9     1906.2      1937.7     2788.3     2224.5 #> 64533397_1      2055.2     2289.7      2074.9     2454.6     2876.4 #> 52258642_1      3238.5     2126.2      2330.6     2413.6     1593.3 #> 33494702_1      1902.3     2436.8      2470.1     2270.3     2357.7 #> 43721936_1      3375.2     1990.7      2423.1     2209.2     2319.8 #>            seq.3476.4 seq.1130.49 seq.6356.60 seq.4579.40 seq.8344.24 #> 51966571_1     1423.4      2780.6      2187.7      2071.7      2588.3 #> 28704098_1     2213.6      2253.7      2997.0      2916.6      3344.5 #> 81969215_1     2870.5      2964.4      1741.5      2650.7      1826.3 #> 68668418_1     2383.6      2080.4      2492.1      2519.8      3037.8 #> 38935826_1     1826.6      2819.4      1900.2      1785.4      2271.9 #> 74703475_1     2099.1      2395.7      2611.7      2811.1      2159.3 #> 36178605_1     3302.4      2407.1      2765.9      2259.8      2468.7 #> 93904282_1     3049.4      2505.9      2382.3      2338.5      3328.1 #> 79223225_1     1992.0      1643.1      2460.9      1669.8      2404.4 #> 68004202_1     2524.0      2345.0      2417.9      2747.9      2385.5 #> 51134040_1     2885.7      2176.3      2997.2      2301.2      2566.3 #> 18037091_1     2858.9      2194.2      2618.1      3143.4      2694.7 #> 48915223_1     2782.0      2643.7      2234.7      3034.5      2424.4 #> 59046590_1     2379.5      2659.7      2653.7      2884.3      2739.9 #> 22440191_1     1467.5      3212.0      2559.4      2569.2      2223.9 #> 93503102_1     3162.5      2436.4      3326.5      2455.0      2226.8 #> 10117155_1     2872.0      2875.9      1952.0      2746.2      2903.7 #> 33801297_1     2358.6      2177.5      1869.7      2977.1      2506.1 #> 34887902_1     2304.5      1748.5      2266.8      3666.6      2930.2 #> 56899633_1     2295.6      2279.2      1316.4      2515.5      1633.1 #> 30132003_1     2250.7      3174.4      2391.9      2683.9      2140.8 #> 46713227_1     2940.9      3062.4      2215.8      1931.1      2266.8 #> 65338817_1     2789.1      2840.8      3001.6      2465.5      1444.1 #> 29347638_1     2514.4      2568.9      3545.0      1822.5      3078.2 #> 69694117_1     3031.6      2396.8      1966.5      2454.7      2590.7 #> 97975242_1     2371.1      1521.6      2278.1      2468.8      2351.9 #> 18797344_1     2156.5      2655.6      2188.0      2369.2      1993.6 #> 65073939_1     1379.3      3369.1      2904.5      1938.0      2090.5 #> 57485678_1     2515.1      2557.5      2814.2      2314.7      2178.1 #> 83562904_1     2718.9      3724.6      2394.3      1728.9      2734.1 #> 28728820_1     2248.5      2200.1      2900.7      2844.2      2208.3 #> 66083414_1     2727.1      2465.2      1701.3      1803.1      2082.3 #> 94112835_1     2689.9      2871.5      3029.2      2984.2      3144.7 #> 26463627_1     1921.9      2229.9      2391.2      2647.1      1892.5 #> 45366525_1     3019.4      2577.3      2705.9      2373.7      2489.9 #> 40869963_1     3081.2      2152.8      3318.4      3056.9      2998.0 #> 94637211_1     2315.5      1852.8      2476.8      1572.5      1229.2 #> 95354565_1     2671.8      2075.6      2559.2      3284.9      2542.1 #> 46557342_1     2585.4      3256.4      3336.1      2508.7      1940.4 #> 76936509_1     2888.6      3006.6      2404.5      1760.4      3231.6 #> 91024793_1     1919.3      2978.4      2431.2      3096.8      2209.5 #> 35984450_1     2597.4      2724.1      2394.6      2184.2      3017.1 #> 54659281_1     2629.8      1999.7      2620.8      3031.8      2671.7 #> 88834253_1     2248.9      2783.7      2286.2      1734.0      2959.8 #> 41009299_1     2521.7      3584.2      2543.9      2629.8      2488.6 #> 33721484_1     1333.5      2118.4      3261.4      1963.6      2379.6 #> 55789326_1     2097.1      3693.9      2119.8      1843.5      3771.1 #> 25885578_1     2912.3      2218.9      2536.3      2205.5      2554.1 #> 96338158_1     1702.5      2881.5      1583.8      2028.5      3279.1 #> 19400953_1     3248.1      2743.8      1866.5      1621.5      2742.5 #> 22069839_1     2649.4      2220.5      2633.2      2557.0      2690.0 #> 16041777_1     2528.0      2714.2      2659.7      2399.3      2877.7 #> 23001489_1     2460.7      3020.6      2238.8      2906.0      1383.7 #> 41068710_1     2180.1      2987.4      2940.1      2937.7      2950.8 #> 97703295_1     2332.1      2068.2      2224.5      3011.0      1890.9 #> 35274802_1     2529.9      2247.6      2321.6      2821.1      2916.9 #> 75398329_1     3181.2      2859.9      3114.3      2208.3      2709.1 #> 42005783_1     2253.5      2642.8      2219.9      1791.0      2916.3 #> 11949409_1     1929.0      2207.8      1737.5      2911.0      2106.8 #> 87556508_1     2751.2      2754.5      2625.7      1611.6      2749.2 #> 94064776_1     2634.0      1997.8      3117.8      2551.5      2667.5 #> 99784020_1     3548.9      2272.6      3351.6      2662.6      3667.2 #> 84916413_1     2699.5      2333.1      1962.3      2281.2      1859.5 #> 68369767_1     3295.2      2622.3      2777.5      2785.4      2897.8 #> 15409464_1     2446.4      1897.3      1943.2      3138.2      2729.5 #> 14727850_1     2870.2      1770.3      2281.0      1563.0      2322.7 #> 29761404_1     2460.7      2687.1      2893.9      3195.5      3029.5 #> 21873937_1     2670.6      2583.1      2187.9      2350.1      3032.1 #> 90667501_1     1514.3      3198.5      2178.5      2285.2      2171.3 #> 38278439_1     2438.7      1989.8      2822.5      1301.5      2493.2 #> 69925630_1     2956.4      2644.5      2587.9      3040.2      3139.9 #> 54693511_1     2688.8      3479.4      2657.5      2073.0      2105.1 #> 82074546_1     2279.7      2508.1      2314.3      2586.7      1986.6 #> 70477393_1     3273.0      1288.3      1702.3      2291.4      2350.1 #> 31800607_1     3253.5      1755.3      1879.9      2453.3      3327.9 #> 65263757_1     2692.6      2232.8      2619.8      2377.8      1771.0 #> 52672763_1     2717.9      2458.0      3762.7      2417.0      2155.2 #> 92815264_1     1765.9      2584.4      2611.3      2050.5      2849.8 #> 71305641_1     2163.4      2400.5      1460.3      2667.2      2256.0 #> 88325979_1     1925.3      3123.9      3331.6      1275.9      2602.6 #> 67769607_1     2350.8      2716.4      1558.8      2035.2      2763.3 #> 71016048_1     2635.4      2461.8      2449.0      2855.2      2670.8 #> 34248161_1     2709.7      2430.3      2498.3      2909.2      2290.5 #> 83316951_1     2049.5      2379.4      2285.2      3407.4      2629.9 #> 63149125_1     2873.5      2102.7      2554.3      2796.4      2880.5 #> 35094240_1     3185.7      2976.7      3060.9      2249.3      2501.2 #> 45697493_1     2891.4      1974.1      1828.6      2648.7      2643.1 #> 36965772_1     1200.7      2103.7      2556.9      2376.0      2353.9 #> 75692351_1     1777.2      3698.4      2319.7      2722.2      3156.4 #> 32994766_1     2552.4      1951.9      1972.2      2379.5      2978.7 #> 12262397_1     2602.0      2666.0      3177.2      2644.3      3058.2 #> 74369248_1     2185.6      1805.9      3054.6      2671.7      2290.1 #> 32815252_1     1964.9      3107.1      1937.8      2700.3      3596.9 #> 62668101_1     2040.6      1996.9      2777.9      2542.5      2487.7 #> 65054205_1     2426.7      2217.1      2433.5      2149.6       987.9 #> 29655282_1     2841.6      2532.6      1905.0      2694.3      1883.2 #> 64533397_1     2022.9      2008.3      1876.0      3156.2      2989.1 #> 52258642_1     2382.9      1750.3      2962.3      2461.0      2343.6 #> 33494702_1     2184.5      2288.1      1474.1      2795.3      3926.7 #> 43721936_1     2706.9      1989.5      2619.7      2978.8      2375.1 #>            seq.8441.53 seq.9360.55 seq.7841.8 seq.8142.63 seq.4461.56 #> 51966571_1      1934.0      2516.7     3183.7      2022.1      2129.6 #> 28704098_1      2198.4      1770.8     2986.6      2190.0      2406.5 #> 81969215_1      2447.4      3529.1     2112.7      2433.6      2432.9 #> 68668418_1      1561.4      2449.3     2724.4      3251.9      2028.9 #> 38935826_1      2783.2      3030.0     2937.2      1823.8      2325.3 #> 74703475_1       862.9      2248.4     3356.2      2125.7      3278.4 #> 36178605_1      2127.8      2329.0     2729.3      2553.4      2412.3 #> 93904282_1      2215.3      2208.7     2227.4      2898.6      2804.2 #> 79223225_1      2583.1      2442.9     2848.4      3473.5      2370.6 #> 68004202_1      2658.9      2752.5     2535.7      2729.5      2495.3 #> 51134040_1      2619.2      1538.0     1803.0      2420.5      2282.9 #> 18037091_1      2025.4      2285.6     2591.4      1080.6      2928.0 #> 48915223_1      2514.8      3006.9     2210.5      3395.2      1795.3 #> 59046590_1      2804.6      3041.1     1791.6      1547.1      1672.4 #> 22440191_1      2010.5      2668.4     2017.3      2136.9      2056.2 #> 93503102_1      2444.7      2400.4     2483.0      2359.3      3021.7 #> 10117155_1      2425.6      2427.2     2544.1      2606.8      2485.5 #> 33801297_1      2266.3      1798.1     2378.3      1865.8      2398.1 #> 34887902_1      3067.9      3338.4     2017.1      1830.9      3100.6 #> 56899633_1      2632.0      2373.7     2907.5      1741.7      3197.1 #> 30132003_1      1883.2      2133.3     2554.2      2895.7      2981.0 #> 46713227_1      2868.6      3405.6     2518.2      2162.9      2702.6 #> 65338817_1      2724.6      2444.0     2871.8      1629.5      2194.5 #> 29347638_1      3003.9      3131.1     2464.2      3673.1      2051.8 #> 69694117_1      2282.8      2934.6     2946.8      1797.3      3057.6 #> 97975242_1      2972.7      2130.5     3339.2      2924.5      2919.9 #> 18797344_1      2030.8      3177.9     2417.2      3325.0      1540.8 #> 65073939_1      2277.0      2734.1     1896.1      2389.4      2035.6 #> 57485678_1      3423.9      2432.2     2073.4      1597.2      2958.5 #> 83562904_1      2802.8      2612.1     3214.3      2203.5      3494.8 #> 28728820_1      2919.1      2749.6     2329.3      2594.8      2492.6 #> 66083414_1      1766.5      2303.2     2117.2      2192.8      2985.1 #> 94112835_1      2379.1      2574.6     2714.0      2326.0      2585.2 #> 26463627_1      3230.6      2091.2     1360.0      2673.8      3426.2 #> 45366525_1      1717.4      1879.0     3164.3      2266.4      2758.0 #> 40869963_1      2698.4      1890.7     2008.7      1982.3      2429.5 #> 94637211_1      2661.3      1875.1     2444.5      3432.1      2702.3 #> 95354565_1      2897.1      1903.5     2347.4      2282.6      2612.5 #> 46557342_1      2326.3      2716.5     1811.4      2568.2      2851.5 #> 76936509_1      2580.5      2476.3     1799.8      2136.2      3150.8 #> 91024793_1      3007.9      3220.5     2702.2      2437.3      2806.2 #> 35984450_1      1657.1      2284.9     3039.9      3102.0      2425.2 #> 54659281_1      2747.6      2382.6     2737.8      3619.0      2098.3 #> 88834253_1      2627.1      2599.8     2981.3      2589.7      1857.1 #> 41009299_1      2633.9      2336.6     2844.2      2894.0      2772.7 #> 33721484_1      2981.1      2666.7     2513.1      2070.0      2242.2 #> 55789326_1      2388.7      2086.8     1978.4      1702.9      2247.3 #> 25885578_1      2052.0      3182.7     2603.4      2166.0      2876.1 #> 96338158_1      2924.4      2526.3     3383.1      2306.7      2884.5 #> 19400953_1      2224.3      2481.0     3176.2      2020.2      1937.7 #> 22069839_1      1560.8      3420.8     3028.6      2605.4      1936.9 #> 16041777_1      3252.6      1722.6     2345.7      2361.5      2501.8 #> 23001489_1      1705.3      2663.7     2428.0      1753.6      2332.2 #> 41068710_1      2291.0      1309.3     2494.6      2293.6      2663.0 #> 97703295_1      3687.9      2161.9     2532.4      1884.3      2276.9 #> 35274802_1      2944.6      2740.3     3280.5      2797.3      2632.9 #> 75398329_1      2881.7      2190.2     2150.4      3064.1      2924.4 #> 42005783_1      2660.7      1690.3     2664.4      2817.5      2031.3 #> 11949409_1      3069.0      1746.2     2465.5      3473.1      2427.6 #> 87556508_1      1935.4      3049.9     2712.2      1917.4      1790.9 #> 94064776_1      2346.4      1449.9     3135.8      3106.2      2962.0 #> 99784020_1      2296.8      2685.1     2527.8      2328.8      2015.5 #> 84916413_1      2343.7      2462.5     2137.1      2872.0      2418.6 #> 68369767_1      3008.4      3234.5     3252.8      2030.1      2899.3 #> 15409464_1      2717.4      2174.4     2760.2      2971.7      2271.0 #> 14727850_1      1820.3      2329.4     2777.8      2641.7      2186.8 #> 29761404_1      2217.2      2374.2     2202.4      3102.9      3288.5 #> 21873937_1      2465.9      1576.6     1570.3      2158.7      1918.6 #> 90667501_1      2382.3      1774.0     2698.5      2366.6      1678.4 #> 38278439_1      2037.4      3711.7     2160.1      2531.1      2292.8 #> 69925630_1      3566.5      3054.6     2468.7      2507.9      2963.9 #> 54693511_1      1899.9      2629.6     2081.8      1997.6      2238.9 #> 82074546_1      2544.5      2133.2     2877.9      2991.0      2856.1 #> 70477393_1      2957.3      2564.8     2682.3      2309.2      1761.0 #> 31800607_1      2311.7      2271.0     1326.6      2767.1      2867.9 #> 65263757_1      2311.2      3097.3     2751.4      2360.2      2602.2 #> 52672763_1      2438.3      1841.1     2049.3      2956.5      2157.1 #> 92815264_1      2721.4      2400.2     2545.2      2772.8      2312.0 #> 71305641_1      2304.3      2255.9     2872.8      2457.2      2387.0 #> 88325979_1      2097.1      2288.2     2887.6      2742.0      3687.7 #> 67769607_1      2695.4      2621.9     2463.2      3162.1      2622.6 #> 71016048_1      1545.7      2224.4     2327.8      2685.6      2775.0 #> 34248161_1      2845.3      2271.8     2160.4      1905.5      3429.7 #> 83316951_1      2287.4      1941.4     2841.8      2906.9      3007.2 #> 63149125_1      1632.0      2346.0     2573.6      2635.9      2616.2 #> 35094240_1      2659.6      2627.6     3002.1      2685.5      2141.4 #> 45697493_1      2220.8      2467.5     2773.4      3273.2      1957.8 #> 36965772_1      2296.5      2154.1     2861.5      1867.4      2092.7 #> 75692351_1      2549.7      1747.3     1841.4      1962.0      1650.6 #> 32994766_1      2019.0      2004.1     2450.0      2650.8      2543.3 #> 12262397_1      2556.2      3071.0     2063.6      2247.2      2697.5 #> 74369248_1      2680.1      2080.3     1484.6      2299.5      1752.0 #> 32815252_1      2148.1      3704.3     3401.7      2439.8      2687.2 #> 62668101_1      2261.1      3363.2     2631.3      2555.9      3242.6 #> 65054205_1      2166.8      2084.6     3568.6      2826.9      1690.3 #> 29655282_1      2648.0      2151.7     2117.8      2443.8      3058.6 #> 64533397_1      3286.3      2920.5     1706.9      2481.8      1358.9 #> 52258642_1      2523.8      2236.7     2570.3      3045.9      1674.3 #> 33494702_1      2744.1      2248.9     2411.9      2218.0      2625.5 #> 43721936_1      2380.1      3312.2     2743.1      2129.7      2206.6 #>            seq.9297.97 seq.9396.38 seq.3300.26 seq.2772.14 seq.6615.18 #> 51966571_1      2573.8      2292.4      2245.9      3097.3      1802.8 #> 28704098_1      2638.4      2890.1      3326.9      1459.0      2525.6 #> 81969215_1      1996.0      2800.8      3319.1      2652.0      3048.5 #> 68668418_1      2303.2      2265.7      2497.2      2224.4      2398.5 #> 38935826_1      2441.8      3156.8      2168.3      3683.8      2286.1 #> 74703475_1      2881.8      2679.5      1970.4      3192.2      2285.7 #> 36178605_1      2444.2      2491.9      2360.4      2183.2      2226.7 #> 93904282_1      2393.6      2916.3      2583.5      3325.0      2003.7 #> 79223225_1      2327.4      2886.7      1689.6      1987.2      2970.6 #> 68004202_1      2519.6      1633.3      2705.9      2229.4      2874.4 #> 51134040_1      3131.0      2315.9      1589.5      2922.8      1730.8 #> 18037091_1      3085.9      2682.2      2588.7      2040.3      2769.6 #> 48915223_1      2813.2      2080.8      1877.4      2693.5      3328.2 #> 59046590_1      2709.1      3308.3      2134.9      2209.3      2682.9 #> 22440191_1      2743.7      2553.7      2352.6      2490.7      2314.6 #> 93503102_1      2228.9      1732.2      1688.7      2007.3      3003.9 #> 10117155_1      2294.5      2228.5      2767.7      2927.0      2101.2 #> 33801297_1      2545.8      2818.8      2448.4      1802.6      2212.2 #> 34887902_1      2355.3      2289.7      1865.2      2672.6      2961.7 #> 56899633_1      3288.5      2093.8      2752.3      3296.7      2730.5 #> 30132003_1      3002.1      2529.5      2216.5      3784.7      1904.5 #> 46713227_1      3033.6      2775.4      2464.5      2749.1      1586.5 #> 65338817_1      3057.8      2499.0      3010.5      2955.3      2364.3 #> 29347638_1      3103.2      2629.8      2479.8      2078.4      2328.8 #> 69694117_1      3434.1      2442.8      3076.1      2179.6      2965.1 #> 97975242_1      2816.0      2459.8      2019.2      2452.6      2266.5 #> 18797344_1      1660.6      2791.5      2516.8      2389.5      2444.4 #> 65073939_1      3298.0      2517.5      1339.3      2171.4      2072.9 #> 57485678_1      3289.0      2126.5      2745.7      3415.4      1873.4 #> 83562904_1      2778.2      2733.4      2205.7      2513.1      3405.3 #> 28728820_1      3165.8      3051.0      2274.1      2726.2      1935.0 #> 66083414_1      3077.4      1704.3      1278.5      1814.0      1926.8 #> 94112835_1       913.3      2726.0      3702.8      2820.4      2618.9 #> 26463627_1      1970.6      2139.4      2635.7      2937.2      2409.3 #> 45366525_1      3328.6      1765.9      2820.6      3039.1      2112.9 #> 40869963_1      3266.5      1595.5      1953.3      2676.8      2877.5 #> 94637211_1      2375.2      2371.5      3061.4      2427.4      2443.4 #> 95354565_1      2090.0      1729.2      2687.2      2634.6      1484.7 #> 46557342_1      1704.3      2497.2      2254.9      2385.4      2414.1 #> 76936509_1      2308.8      2362.9      2549.5      3317.1      2779.4 #> 91024793_1      2368.9      3137.3      2856.8      2445.8      2449.5 #> 35984450_1      2279.7      3806.5      3339.7      2277.9      2239.7 #> 54659281_1      2317.7      2807.4      2052.8      2084.8      1890.7 #> 88834253_1      2458.1      3302.3      2583.4      2708.5      2752.8 #> 41009299_1      3072.8      2978.3      1679.7      2620.5      2884.7 #> 33721484_1      2435.7      2478.4      1754.5      2826.4      2748.4 #> 55789326_1      2477.6      3326.1      1859.7      2469.2      2872.3 #> 25885578_1      2515.2      2514.7      3043.9      2767.0      2630.7 #> 96338158_1      2703.4      2922.4      2941.4      3056.0      2906.9 #> 19400953_1      2081.0      2610.9      2360.0      2211.6      2079.7 #> 22069839_1      2447.7      2238.9      3132.7      3100.9      2388.5 #> 16041777_1      2070.5      1787.5      1983.3      3097.3      2746.9 #> 23001489_1      3509.5      3046.5      2175.1      2237.1      3005.3 #> 41068710_1      2570.2      2938.7      3009.6      2558.8      2800.4 #> 97703295_1      1622.3      2565.7      2946.1      1563.4      2351.4 #> 35274802_1      2208.7      2801.4      1992.6      2974.6      2655.6 #> 75398329_1      2577.9      1698.8      2483.1      3047.3      2288.8 #> 42005783_1      2849.9      3059.8      3236.3      2637.3      2539.5 #> 11949409_1      3214.7      2944.3      1715.2      2853.8      2711.7 #> 87556508_1      2016.2      2831.8      2708.1      2281.7      2480.4 #> 94064776_1      3047.5      2322.5      1899.7      2550.8      1842.7 #> 99784020_1      1675.6      1592.8      2592.7      2464.8      2365.3 #> 84916413_1      2803.4      2277.1      2590.8      2419.8      2309.2 #> 68369767_1      2292.7      2305.2      2320.0      2779.3      2736.0 #> 15409464_1      2355.3      2439.6      2880.1      2626.9      2731.8 #> 14727850_1      3007.0      2494.0      2485.3      3509.9      2696.2 #> 29761404_1      3049.0      2540.2      3235.2      1798.8      2376.4 #> 21873937_1      2514.2      1949.1      2686.2      2819.8      1877.0 #> 90667501_1      2538.2      1955.0      2361.0      2276.9      2897.2 #> 38278439_1      3300.6      2216.8      2730.8      2548.2      3095.3 #> 69925630_1      2085.4      2799.6      3307.6      2219.2      2294.8 #> 54693511_1      3228.6      2664.3      2102.7      2173.4      2867.0 #> 82074546_1      2324.6      2832.5      2791.8      2518.2      2821.5 #> 70477393_1      2458.2      2468.5      3025.7      1895.0      1455.7 #> 31800607_1      2695.3      2230.7      2567.2      2283.6      2188.2 #> 65263757_1      2845.9      2964.4      2554.4      3011.9      3014.2 #> 52672763_1      2647.2      3165.9      1779.0      2488.1      2762.0 #> 92815264_1      3730.2      2396.1      3674.1      2832.6      2664.7 #> 71305641_1      2973.5      1903.2      2508.6      3615.4      2350.4 #> 88325979_1      3155.1      3043.8      2024.7      1977.2      2778.4 #> 67769607_1      2384.5      2089.3      2529.1      2333.2      2082.8 #> 71016048_1      2486.5      2053.6      2136.2      3059.7      2065.9 #> 34248161_1      2034.4      2339.7      3207.8      2069.2      2724.6 #> 83316951_1      2323.3      2400.6      1862.2      2232.2      2131.0 #> 63149125_1      2539.1      2341.4      2256.0      1752.9      1503.6 #> 35094240_1      2906.0      2004.5      2262.7      2384.4      2929.4 #> 45697493_1      2896.5      1608.6      2618.2      1379.7      2874.7 #> 36965772_1      2463.5      2491.9      2762.8      2255.2      2236.9 #> 75692351_1      2996.2      2988.4      2984.5      1912.3      2427.4 #> 32994766_1      2583.1      2473.0      1847.0      2348.0      2478.5 #> 12262397_1      2166.7      3051.6      2149.0      3037.5      2222.3 #> 74369248_1      3684.7      1520.7      3918.3      2755.4      1389.1 #> 32815252_1      2833.3      3325.8      3158.3      3384.1      3290.0 #> 62668101_1      3341.4      1691.6      2507.7      2074.8      2896.0 #> 65054205_1      2401.6      1614.8      2503.2      2459.5      2080.3 #> 29655282_1      3100.1      2150.3      2324.0      2061.0      2235.0 #> 64533397_1      2073.6      3816.4      2333.4      2872.3      3157.5 #> 52258642_1      2272.8      2015.5      2788.7      2621.1      1363.7 #> 33494702_1      2307.3      2437.0      3111.7      2180.4      3002.9 #> 43721936_1      2805.8      3274.5      2247.6      2089.8      1793.7 #>            seq.8797.98 seq.9879.88 seq.8993.16 seq.9373.82 #> 51966571_1      3272.2      2324.8      2770.5      2355.7 #> 28704098_1      2539.6      2216.5      1371.0      1242.2 #> 81969215_1      2429.9      3034.8      3015.5      2987.9 #> 68668418_1      2080.8      2766.8      2551.7      3367.1 #> 38935826_1      2224.4      2748.9      2001.3      2350.8 #> 74703475_1      3124.3      3337.8      2522.4      2614.3 #> 36178605_1      3088.4      1965.3      2593.0      1973.4 #> 93904282_1      2464.1      2449.6      1827.6      2546.5 #> 79223225_1      1974.7      2485.6      2607.5      2936.1 #> 68004202_1      1990.4      1844.2      3147.1      2275.0 #> 51134040_1      2114.1      2106.3      2563.3      1486.6 #> 18037091_1      2781.9      2445.5      2997.2      2958.2 #> 48915223_1      2414.5      2771.8      3206.0      3338.0 #> 59046590_1      3040.7      3321.9      2650.7      2342.0 #> 22440191_1      2131.9      1951.3      2013.8      2496.7 #> 93503102_1      2935.7      2860.6      2499.9      2647.9 #> 10117155_1      1892.1      3315.6      2741.9      2705.7 #> 33801297_1      3978.2      2126.5      2152.1      2762.9 #> 34887902_1      1998.9      1667.0      2650.0      1914.9 #> 56899633_1      3429.2      2032.2      2118.7      2189.0 #> 30132003_1      2742.5      2134.6      3179.0      2828.7 #> 46713227_1      2734.0      2976.8      1183.0      2481.4 #> 65338817_1      2984.1      3077.8      2041.5      2271.3 #> 29347638_1      2512.7      3146.9      3034.4      2453.5 #> 69694117_1      2265.5      3200.0      3320.6      2319.3 #> 97975242_1      2594.8      3232.1      2344.6      2369.5 #> 18797344_1      2073.6      2885.7      3280.7      2810.2 #> 65073939_1      2752.1      2645.4      2258.0      2652.7 #> 57485678_1      2480.5      2686.3      2464.5      2570.6 #> 83562904_1      3262.1      2658.3      1945.9      2415.1 #> 28728820_1      2406.3      2214.0      2185.5      3654.5 #> 66083414_1      1937.3      2224.2      2715.2      2674.2 #> 94112835_1      2556.5      2488.8      2470.9      2227.6 #> 26463627_1      2283.3      1816.6      1954.1      2699.1 #> 45366525_1      2572.1      3042.1      2173.8      2250.2 #> 40869963_1      3003.3      2454.6      1505.1      3025.9 #> 94637211_1      2040.7      2412.2      2413.5      3384.9 #> 95354565_1      3591.9      1628.3      2599.9      2666.8 #> 46557342_1      3043.2      1815.8      1807.9      2573.0 #> 76936509_1      2384.7      2419.9      2892.2      2443.4 #> 91024793_1      2105.6      2047.3      2643.4      2832.8 #> 35984450_1      2805.9      1972.0      1828.1      1773.4 #> 54659281_1      1528.0      2444.3      3067.8      2226.1 #> 88834253_1      3159.6      1842.4      2898.3      2462.8 #> 41009299_1      1918.8      2793.2      2337.1      2988.7 #> 33721484_1      2420.4      3958.0      2140.3      2117.7 #> 55789326_1      2397.2      1967.5      2310.7      2720.8 #> 25885578_1      3437.6      2565.5      2706.3      2987.2 #> 96338158_1      1720.9      2869.7      3495.9      2424.1 #> 19400953_1      2763.8      2285.9      3158.8      2277.1 #> 22069839_1      2094.6      2511.5      2306.8      2274.6 #> 16041777_1      1362.1      2442.8      2877.5      1836.0 #> 23001489_1      1874.0      3111.6      2321.6      2735.6 #> 41068710_1      2130.1      2326.0      2828.5      2957.3 #> 97703295_1      1459.8      2363.5      3202.0      2978.1 #> 35274802_1      2829.6      3123.8      2672.4      2154.7 #> 75398329_1      1599.2      2418.4      2486.5      2654.4 #> 42005783_1      2363.8      1574.8      2315.2      1904.6 #> 11949409_1      1879.0      2695.3      1657.7      3674.5 #> 87556508_1      2456.8      2777.4      1441.9      1561.8 #> 94064776_1      2868.3      2914.5      2307.5      2571.8 #> 99784020_1      3095.5      3261.4      3211.6      2833.0 #> 84916413_1      2348.7      3231.4      2736.3      2465.8 #> 68369767_1      2553.8      2845.2      2267.9      2642.1 #> 15409464_1      3356.5      2938.0      2542.8      1967.1 #> 14727850_1      2398.3      2774.4      2613.2      2106.6 #> 29761404_1      2435.0      2064.9      2642.6      2541.0 #> 21873937_1      3562.3      2306.4      2578.1      1839.7 #> 90667501_1      2550.4      2757.6      2043.4      2679.9 #> 38278439_1      3424.7      2903.0      1655.1      2719.0 #> 69925630_1      3322.7      2535.6      1922.6      3451.8 #> 54693511_1      2943.4      2654.5      2358.9      3133.3 #> 82074546_1      3126.6      2834.7      3544.9      2864.0 #> 70477393_1      2510.4      2075.3      2851.0      2572.9 #> 31800607_1      2306.0      2770.4      2708.8      2481.1 #> 65263757_1      2866.7      2685.5      1610.7      1862.1 #> 52672763_1      1876.0      2128.6      3559.3      2338.4 #> 92815264_1      2967.9      2500.6      2433.9      2118.6 #> 71305641_1      3105.1      2149.8      3132.1      2222.4 #> 88325979_1      2956.4      1628.7      2219.6      2148.0 #> 67769607_1      3198.0      2233.9      2020.0      2600.7 #> 71016048_1      1546.7      2883.6      2692.2      2283.9 #> 34248161_1      1871.3      2596.4      2341.0      3786.1 #> 83316951_1      2817.4      2598.4      2706.1      1858.6 #> 63149125_1      2934.6      2055.3      2968.7      2233.9 #> 35094240_1      1634.0      2302.9      3072.9      2292.5 #> 45697493_1      1703.7      2114.0      3146.0      2422.2 #> 36965772_1      2160.3      2599.5      3081.9      2551.1 #> 75692351_1      1863.0      2458.9      2519.2      2014.9 #> 32994766_1      3007.6      2302.6      2658.7      2795.9 #> 12262397_1      1330.6      2092.6      1982.4      2977.8 #> 74369248_1      2638.3      2526.4      2716.7      1837.9 #> 32815252_1      2908.2      3437.4      2560.5      3235.9 #> 62668101_1      2663.8      2001.2      3572.3      2891.8 #> 65054205_1      2874.1      3668.1      2091.6      2303.3 #> 29655282_1      2980.3      2828.1      2300.6      2329.1 #> 64533397_1      2957.7      2022.6      2797.2      2681.4 #> 52258642_1      2899.3      2687.5      1846.9      2721.7 #> 33494702_1      1279.1      1857.4      3047.0      2711.7 #> 43721936_1      2461.4      2394.2      3257.1      2297.2"},{"path":"https://stufield.github.io/wranglr/dev/reference/wranglr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"wranglr: Manipulate and Wrangle Data — wranglr-package","title":"wranglr: Manipulate and Wrangle Data — wranglr-package","text":"wranglr package contains general functions necessary manipulate wrangle internal R representations proteomic data convenient forms analysis.","code":""},{"path":[]},{"path":"https://stufield.github.io/wranglr/dev/reference/wranglr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"wranglr: Manipulate and Wrangle Data — wranglr-package","text":"Maintainer: Stu Field stu.g.field@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://stufield.github.io/wranglr/dev/news/index.html","id":"wranglr-0019000-devel","dir":"Changelog","previous_headings":"","what":"wranglr 0.0.1.9000 (devel)","title":"wranglr 0.0.1.9000 (devel)","text":"new dev …","code":""},{"path":"https://stufield.github.io/wranglr/dev/news/index.html","id":"wranglr-001-tada","dir":"Changelog","previous_headings":"","what":"wranglr 0.0.1 🎉","title":"wranglr 0.0.1 🎉","text":"v0.0.1 tagged released","code":""}]
